2025-03-16 08:22:42,537:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-16 08:22:42,537:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-16 08:22:42,538:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-16 08:22:42,538:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-16 08:31:25,756:INFO:PyCaret ClassificationExperiment
2025-03-16 08:31:25,756:INFO:Logging name: clf-default-name
2025-03-16 08:31:25,756:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-03-16 08:31:25,756:INFO:version 3.3.2
2025-03-16 08:31:25,756:INFO:Initializing setup()
2025-03-16 08:31:25,756:INFO:self.USI: 330d
2025-03-16 08:31:25,756:INFO:self._variable_keys: {'data', 'pipeline', 'is_multiclass', 'fix_imbalance', 'USI', '_available_plots', 'fold_shuffle_param', 'X_test', 'X', 'n_jobs_param', 'gpu_n_jobs_param', 'exp_id', 'y', 'fold_groups_param', 'html_param', '_ml_usecase', 'y_test', 'y_train', 'idx', 'log_plots_param', 'memory', 'logging_param', 'gpu_param', 'fold_generator', 'target_param', 'seed', 'X_train', 'exp_name_log'}
2025-03-16 08:31:25,756:INFO:Checking environment
2025-03-16 08:31:25,756:INFO:python_version: 3.10.16
2025-03-16 08:31:25,756:INFO:python_build: ('main', 'Dec 11 2024 16:19:12')
2025-03-16 08:31:25,756:INFO:machine: AMD64
2025-03-16 08:31:25,756:INFO:platform: Windows-10-10.0.26100-SP0
2025-03-16 08:31:25,761:INFO:Memory: svmem(total=17085845504, available=3997978624, percent=76.6, used=13087866880, free=3997978624)
2025-03-16 08:31:25,761:INFO:Physical Core: 8
2025-03-16 08:31:25,761:INFO:Logical Core: 16
2025-03-16 08:31:25,761:INFO:Checking libraries
2025-03-16 08:31:25,761:INFO:System:
2025-03-16 08:31:25,761:INFO:    python: 3.10.16 | packaged by Anaconda, Inc. | (main, Dec 11 2024, 16:19:12) [MSC v.1929 64 bit (AMD64)]
2025-03-16 08:31:25,761:INFO:executable: g:\ML\envs\pycaret_env\python.exe
2025-03-16 08:31:25,761:INFO:   machine: Windows-10-10.0.26100-SP0
2025-03-16 08:31:25,761:INFO:PyCaret required dependencies:
2025-03-16 08:31:26,330:INFO:                 pip: 25.0
2025-03-16 08:31:26,330:INFO:          setuptools: 75.8.0
2025-03-16 08:31:26,330:INFO:             pycaret: 3.3.2
2025-03-16 08:31:26,330:INFO:             IPython: 8.34.0
2025-03-16 08:31:26,330:INFO:          ipywidgets: 8.1.5
2025-03-16 08:31:26,330:INFO:                tqdm: 4.67.1
2025-03-16 08:31:26,330:INFO:               numpy: 1.26.4
2025-03-16 08:31:26,330:INFO:              pandas: 2.1.4
2025-03-16 08:31:26,330:INFO:              jinja2: 3.1.6
2025-03-16 08:31:26,330:INFO:               scipy: 1.11.4
2025-03-16 08:31:26,330:INFO:              joblib: 1.3.2
2025-03-16 08:31:26,330:INFO:             sklearn: 1.4.2
2025-03-16 08:31:26,330:INFO:                pyod: 2.0.3
2025-03-16 08:31:26,330:INFO:            imblearn: 0.13.0
2025-03-16 08:31:26,330:INFO:   category_encoders: 2.7.0
2025-03-16 08:31:26,331:INFO:            lightgbm: 4.6.0
2025-03-16 08:31:26,331:INFO:               numba: 0.61.0
2025-03-16 08:31:26,331:INFO:            requests: 2.32.3
2025-03-16 08:31:26,331:INFO:          matplotlib: 3.7.5
2025-03-16 08:31:26,331:INFO:          scikitplot: 0.3.7
2025-03-16 08:31:26,331:INFO:         yellowbrick: 1.5
2025-03-16 08:31:26,331:INFO:              plotly: 5.24.1
2025-03-16 08:31:26,331:INFO:    plotly-resampler: Not installed
2025-03-16 08:31:26,331:INFO:             kaleido: 0.2.1
2025-03-16 08:31:26,331:INFO:           schemdraw: 0.15
2025-03-16 08:31:26,331:INFO:         statsmodels: 0.14.4
2025-03-16 08:31:26,331:INFO:              sktime: 0.26.0
2025-03-16 08:31:26,331:INFO:               tbats: 1.1.3
2025-03-16 08:31:26,331:INFO:            pmdarima: 2.0.4
2025-03-16 08:31:26,331:INFO:              psutil: 7.0.0
2025-03-16 08:31:26,331:INFO:          markupsafe: 3.0.2
2025-03-16 08:31:26,331:INFO:             pickle5: Not installed
2025-03-16 08:31:26,331:INFO:         cloudpickle: 3.1.1
2025-03-16 08:31:26,331:INFO:         deprecation: 2.1.0
2025-03-16 08:31:26,331:INFO:              xxhash: 3.5.0
2025-03-16 08:31:26,331:INFO:           wurlitzer: Not installed
2025-03-16 08:31:26,331:INFO:PyCaret optional dependencies:
2025-03-16 08:31:26,342:INFO:                shap: Not installed
2025-03-16 08:31:26,342:INFO:           interpret: Not installed
2025-03-16 08:31:26,342:INFO:                umap: Not installed
2025-03-16 08:31:26,342:INFO:     ydata_profiling: Not installed
2025-03-16 08:31:26,342:INFO:  explainerdashboard: Not installed
2025-03-16 08:31:26,342:INFO:             autoviz: Not installed
2025-03-16 08:31:26,342:INFO:           fairlearn: Not installed
2025-03-16 08:31:26,342:INFO:          deepchecks: Not installed
2025-03-16 08:31:26,342:INFO:             xgboost: Not installed
2025-03-16 08:31:26,342:INFO:            catboost: Not installed
2025-03-16 08:31:26,342:INFO:              kmodes: Not installed
2025-03-16 08:31:26,342:INFO:             mlxtend: Not installed
2025-03-16 08:31:26,342:INFO:       statsforecast: Not installed
2025-03-16 08:31:26,342:INFO:        tune_sklearn: Not installed
2025-03-16 08:31:26,342:INFO:                 ray: Not installed
2025-03-16 08:31:26,342:INFO:            hyperopt: Not installed
2025-03-16 08:31:26,342:INFO:              optuna: Not installed
2025-03-16 08:31:26,343:INFO:               skopt: Not installed
2025-03-16 08:31:26,343:INFO:              mlflow: Not installed
2025-03-16 08:31:26,343:INFO:              gradio: Not installed
2025-03-16 08:31:26,343:INFO:             fastapi: Not installed
2025-03-16 08:31:26,343:INFO:             uvicorn: Not installed
2025-03-16 08:31:26,343:INFO:              m2cgen: Not installed
2025-03-16 08:31:26,343:INFO:           evidently: Not installed
2025-03-16 08:31:26,343:INFO:               fugue: Not installed
2025-03-16 08:31:26,343:INFO:           streamlit: Not installed
2025-03-16 08:31:26,343:INFO:             prophet: Not installed
2025-03-16 08:31:26,343:INFO:None
2025-03-16 08:31:26,343:INFO:Set up data.
2025-03-16 08:31:26,360:INFO:Set up folding strategy.
2025-03-16 08:31:26,360:INFO:Set up train/test split.
2025-03-16 08:31:26,638:INFO:Set up index.
2025-03-16 08:31:26,638:INFO:Assigning column types.
2025-03-16 08:31:26,642:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-03-16 08:31:26,674:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-16 08:31:26,676:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-16 08:31:26,699:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-16 08:31:26,700:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-16 08:31:26,731:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-16 08:31:26,731:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-16 08:31:26,752:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-16 08:31:26,752:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-16 08:31:26,752:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-03-16 08:31:26,784:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-16 08:31:26,805:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-16 08:31:26,805:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-16 08:31:26,848:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-16 08:31:26,868:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-16 08:31:26,868:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-16 08:31:26,868:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-03-16 08:31:26,922:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-16 08:31:26,922:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-16 08:31:26,975:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-16 08:31:26,975:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-16 08:31:26,978:INFO:Preparing preprocessing pipeline...
2025-03-16 08:31:26,979:INFO:Set up label encoding.
2025-03-16 08:31:26,979:INFO:Set up simple imputation.
2025-03-16 08:31:26,983:INFO:Set up encoding of ordinal features.
2025-03-16 08:31:26,989:INFO:Set up encoding of categorical features.
2025-03-16 08:31:26,989:INFO:Set up variance threshold.
2025-03-16 08:31:26,989:INFO:Set up feature normalization.
2025-03-16 08:31:27,235:INFO:Finished creating preprocessing pipeline.
2025-03-16 08:31:27,284:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\thinu\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'MonthlyCharges',
                                             'TotalCharges'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fi...
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('low_variance',
                 TransformerWrapper(exclude=[], include=None,
                                    transformer=VarianceThreshold(threshold=0.1))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=MinMaxScaler(clip=False,
                                                             copy=True,
                                                             feature_range=(0,
                                                                            1))))],
         verbose=False)
2025-03-16 08:31:27,284:INFO:Creating final display dataframe.
2025-03-16 08:31:27,771:INFO:Setup _display_container:                     Description             Value
0                    Session id                43
1                        Target             Churn
2                   Target type            Binary
3                Target mapping     No: 0, Yes: 1
4           Original data shape        (6339, 21)
5        Transformed data shape        (6339, 39)
6   Transformed train set shape        (5071, 39)
7    Transformed test set shape        (1268, 39)
8               Ignore features                 1
9              Ordinal features                 1
10             Numeric features                 3
11         Categorical features                16
12     Rows with missing values              0.5%
13                   Preprocess              True
14              Imputation type            simple
15           Numeric imputation              mean
16       Categorical imputation              mode
17     Maximum one-hot encoding               100
18              Encoding method              None
19       Low variance threshold               0.1
20                    Normalize              True
21             Normalize method            minmax
22               Fold Generator             KFold
23                  Fold Number                 5
24                     CPU Jobs                -1
25                      Use GPU             False
26               Log Experiment             False
27              Experiment Name  clf-default-name
28                          USI              330d
2025-03-16 08:31:27,830:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-16 08:31:27,830:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-16 08:31:27,884:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-16 08:31:27,884:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-16 08:31:27,884:INFO:setup() successfully completed in 2.13s...............
2025-03-16 08:41:09,327:INFO:Initializing get_config()
2025-03-16 08:41:09,327:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DADF369180>, variable=None)
2025-03-16 08:42:37,327:INFO:Initializing get_config()
2025-03-16 08:42:37,327:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DADF369180>, variable=X_train)
2025-03-16 08:42:37,328:INFO:Variable: 'X_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_train_transformed' instead.
2025-03-16 08:42:37,328:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\pycaret\internal\pycaret_experiment\pycaret_experiment.py:321: UserWarning:

Variable: 'X_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_train_transformed' instead.


2025-03-16 08:42:37,337:INFO:Variable:  returned as       gender SeniorCitizen Partner Dependents  tenure PhoneService MultipleLines InternetService  \
2790    Male            No     Yes         No    18.0          Yes            No     Fiber optic   
6109    Male            No      No         No     1.0          Yes            No              No   
2585    Male            No     Yes         No    40.0          Yes            No     Fiber optic   
1181    Male            No      No         No    54.0          Yes           Yes     Fiber optic   
565   Female            No      No         No    28.0          Yes            No             DSL   
...      ...           ...     ...        ...     ...          ...           ...             ...   
1825    Male           Yes     Yes        Yes    20.0          Yes            No     Fiber optic   
4586    Male            No      No         No    36.0          Yes           Yes     Fiber optic   
4670  Female            No     Yes         No    72.0          Yes           Yes             DSL   
4974  Female           Yes     Yes        Yes    23.0          Yes            No     Fiber optic   
4508  Female            No     Yes        Yes    72.0          Yes            No              No   

           OnlineSecurity         OnlineBackup     DeviceProtection          TechSupport  \
2790                   No                   No                  Yes                  Yes   
6109  No internet service  No internet service  No internet service  No internet service   
2585                   No                  Yes                  Yes                   No   
1181                   No                   No                  Yes                   No   
565                    No                  Yes                   No                  Yes   
...                   ...                  ...                  ...                  ...   
1825                  Yes                   No                  Yes                  Yes   
4586                   No                   No                   No                   No   
4670                  Yes                  Yes                  Yes                  Yes   
4974                   No                  Yes                  Yes                   No   
4508  No internet service  No internet service  No internet service  No internet service   

              StreamingTV      StreamingMovies        Contract PaperlessBilling  \
2790                   No                   No  Month-to-month               No   
6109  No internet service  No internet service  Month-to-month               No   
2585                   No                   No        One year               No   
1181                   No                  Yes  Month-to-month               No   
565                    No                   No  Month-to-month               No   
...                   ...                  ...             ...              ...   
1825                   No                  Yes        One year               No   
4586                   No                  Yes  Month-to-month              Yes   
4670                  Yes                  Yes        Two year              Yes   
4974                   No                  Yes  Month-to-month              Yes   
4508  No internet service  No internet service        Two year               No   

                  PaymentMethod  MonthlyCharges  TotalCharges  
2790           Electronic check       78.199997   1468.750000  
6109           Electronic check       20.650000     20.650000  
2585           Electronic check       80.800003   3132.750000  
1181    Credit card (automatic)       89.400002   4869.500000  
565   Bank transfer (automatic)       54.650002   1517.500000  
...                         ...             ...           ...  
1825    Credit card (automatic)       94.300003   1818.300049  
4586           Electronic check       84.900002   3067.199951  
4670           Electronic check       92.400002   6786.100098  
4974  Bank transfer (automatic)       88.449997   2130.550049  
4508  Bank transfer (automatic)       19.549999   1463.449951  

[5071 rows x 19 columns]
2025-03-16 08:42:37,338:INFO:get_config() successfully completed......................................
2025-03-16 08:43:26,690:INFO:Initializing get_config()
2025-03-16 08:43:26,690:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DADF369180>, variable=X_train_transformed)
2025-03-16 08:43:26,741:INFO:Variable: X_train returned as       gender  SeniorCitizen  Partner  Dependents    tenure  MultipleLines_No  MultipleLines_Yes  \
2790     1.0            0.0      1.0         0.0  0.250000               1.0                0.0   
6109     1.0            0.0      0.0         0.0  0.013889               1.0                0.0   
2585     1.0            0.0      1.0         0.0  0.555556               1.0                0.0   
1181     1.0            0.0      0.0         0.0  0.750000               0.0                1.0   
565      0.0            0.0      0.0         0.0  0.388889               1.0                0.0   
...      ...            ...      ...         ...       ...               ...                ...   
1825     1.0            1.0      1.0         1.0  0.277778               1.0                0.0   
4586     1.0            0.0      0.0         0.0  0.500000               0.0                1.0   
4670     0.0            0.0      1.0         0.0  1.000000               0.0                1.0   
4974     0.0            1.0      1.0         1.0  0.319444               1.0                0.0   
4508     0.0            0.0      1.0         1.0  1.000000               1.0                0.0   

      InternetService_Fiber optic  InternetService_No  InternetService_DSL  OnlineSecurity_No  \
2790                          1.0                 0.0                  0.0                1.0   
6109                          0.0                 1.0                  0.0                0.0   
2585                          1.0                 0.0                  0.0                1.0   
1181                          1.0                 0.0                  0.0                1.0   
565                           0.0                 0.0                  1.0                1.0   
...                           ...                 ...                  ...                ...   
1825                          1.0                 0.0                  0.0                0.0   
4586                          1.0                 0.0                  0.0                1.0   
4670                          0.0                 0.0                  1.0                0.0   
4974                          1.0                 0.0                  0.0                1.0   
4508                          0.0                 1.0                  0.0                0.0   

      OnlineSecurity_No internet service  OnlineSecurity_Yes  OnlineBackup_No  \
2790                                 0.0                 0.0              1.0   
6109                                 1.0                 0.0              0.0   
2585                                 0.0                 0.0              0.0   
1181                                 0.0                 0.0              1.0   
565                                  0.0                 0.0              0.0   
...                                  ...                 ...              ...   
1825                                 0.0                 1.0              1.0   
4586                                 0.0                 0.0              1.0   
4670                                 0.0                 1.0              0.0   
4974                                 0.0                 0.0              0.0   
4508                                 1.0                 0.0              0.0   

      OnlineBackup_No internet service  OnlineBackup_Yes  DeviceProtection_Yes  \
2790                               0.0               0.0                   1.0   
6109                               1.0               0.0                   0.0   
2585                               0.0               1.0                   1.0   
1181                               0.0               0.0                   1.0   
565                                0.0               1.0                   0.0   
...                                ...               ...                   ...   
1825                               0.0               0.0                   1.0   
4586                               0.0               0.0                   0.0   
4670                               0.0               1.0                   1.0   
4974                               0.0               1.0                   1.0   
4508                               1.0               0.0                   0.0   

      DeviceProtection_No internet service  DeviceProtection_No  TechSupport_Yes  \
2790                                   0.0                  0.0              1.0   
6109                                   1.0                  0.0              0.0   
2585                                   0.0                  0.0              0.0   
1181                                   0.0                  0.0              0.0   
565                                    0.0                  1.0              1.0   
...                                    ...                  ...              ...   
1825                                   0.0                  0.0              1.0   
4586                                   0.0                  1.0              0.0   
4670                                   0.0                  0.0              1.0   
4974                                   0.0                  0.0              0.0   
4508                                   1.0                  0.0              0.0   

      TechSupport_No internet service  TechSupport_No  StreamingTV_No  \
2790                              0.0             0.0             1.0   
6109                              1.0             0.0             0.0   
2585                              0.0             1.0             1.0   
1181                              0.0             1.0             1.0   
565                               0.0             0.0             1.0   
...                               ...             ...             ...   
1825                              0.0             0.0             1.0   
4586                              0.0             1.0             1.0   
4670                              0.0             0.0             0.0   
4974                              0.0             1.0             1.0   
4508                              1.0             0.0             0.0   

      StreamingTV_No internet service  StreamingTV_Yes  StreamingMovies_No  \
2790                              0.0              0.0                 1.0   
6109                              1.0              0.0                 0.0   
2585                              0.0              0.0                 1.0   
1181                              0.0              0.0                 0.0   
565                               0.0              0.0                 1.0   
...                               ...              ...                 ...   
1825                              0.0              0.0                 0.0   
4586                              0.0              0.0                 0.0   
4670                              0.0              1.0                 0.0   
4974                              0.0              0.0                 0.0   
4508                              1.0              0.0                 0.0   

      StreamingMovies_No internet service  StreamingMovies_Yes  Contract_0.0  Contract_1.0  \
2790                                  0.0                  0.0           1.0           0.0   
6109                                  1.0                  0.0           1.0           0.0   
2585                                  0.0                  0.0           0.0           1.0   
1181                                  0.0                  1.0           1.0           0.0   
565                                   0.0                  0.0           1.0           0.0   
...                                   ...                  ...           ...           ...   
1825                                  0.0                  1.0           0.0           1.0   
4586                                  0.0                  1.0           1.0           0.0   
4670                                  0.0                  1.0           0.0           0.0   
4974                                  0.0                  1.0           1.0           0.0   
4508                                  1.0                  0.0           0.0           0.0   

      Contract_2.0  PaperlessBilling  PaymentMethod_Electronic check  \
2790           0.0               0.0                             1.0   
6109           0.0               0.0                             1.0   
2585           0.0               0.0                             1.0   
1181           0.0               0.0                             0.0   
565            0.0               0.0                             0.0   
...            ...               ...                             ...   
1825           0.0               0.0                             0.0   
4586           0.0               1.0                             1.0   
4670           1.0               1.0                             1.0   
4974           0.0               1.0                             0.0   
4508           1.0               0.0                             0.0   

      PaymentMethod_Credit card (automatic)  PaymentMethod_Bank transfer (automatic)  \
2790                                    0.0                                      0.0   
6109                                    0.0                                      0.0   
2585                                    0.0                                      0.0   
1181                                    1.0                                      0.0   
565                                     0.0                                      1.0   
...                                     ...                                      ...   
1825                                    1.0                                      0.0   
4586                                    0.0                                      0.0   
4670                                    0.0                                      0.0   
4974                                    0.0                                      1.0   
4508                                    0.0                                      1.0   

      PaymentMethod_Mailed check  MonthlyCharges  TotalCharges  
2790                         0.0        0.595914      0.167310  
6109                         0.0        0.022422      0.000208  
2585                         0.0        0.621824      0.359326  
1181                         0.0        0.707524      0.559737  
565                          0.0        0.361236      0.172935  
...                          ...             ...           ...  
1825                         0.0        0.756353      0.207646  
4586                         0.0        0.662681      0.351762  
4670                         0.0        0.737419      0.780901  
4974                         0.0        0.698057      0.243678  
4508                         0.0        0.011460      0.166698  

[5071 rows x 38 columns]
2025-03-16 08:43:26,741:INFO:get_config() successfully completed......................................
2025-03-16 08:43:56,901:INFO:Initializing get_config()
2025-03-16 08:43:56,901:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DADF369180>, variable=y_train)
2025-03-16 08:43:56,902:INFO:Variable: 'y_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'y_train_transformed' instead.
2025-03-16 08:43:56,902:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\pycaret\internal\pycaret_experiment\pycaret_experiment.py:321: UserWarning:

Variable: 'y_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'y_train_transformed' instead.


2025-03-16 08:43:56,905:INFO:Variable:  returned as 2790     No
6109     No
2585     No
1181     No
565      No
       ... 
1825     No
4586    Yes
4670     No
4974     No
4508     No
Name: Churn, Length: 5071, dtype: category
Categories (2, object): ['No', 'Yes']
2025-03-16 08:43:56,905:INFO:get_config() successfully completed......................................
2025-03-16 08:44:22,044:INFO:Initializing get_config()
2025-03-16 08:44:22,045:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DADF369180>, variable=y_train_transformed)
2025-03-16 08:44:22,078:INFO:Variable: y_train returned as 2790    0
6109    0
2585    0
1181    0
565     0
       ..
1825    0
4586    1
4670    0
4974    0
4508    0
Name: Churn, Length: 5071, dtype: int32
2025-03-16 08:44:22,078:INFO:get_config() successfully completed......................................
2025-03-16 08:45:47,963:INFO:Initializing compare_models()
2025-03-16 08:45:47,963:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DADF369180>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001DADF369180>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2025-03-16 08:45:47,963:INFO:Checking exceptions
2025-03-16 08:45:47,968:INFO:Preparing display monitor
2025-03-16 08:45:47,986:INFO:Initializing Logistic Regression
2025-03-16 08:45:47,986:INFO:Total runtime is 0.0 minutes
2025-03-16 08:45:47,989:INFO:SubProcess create_model() called ==================================
2025-03-16 08:45:47,989:INFO:Initializing create_model()
2025-03-16 08:45:47,989:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DADF369180>, estimator=lr, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DADF368FA0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-16 08:45:47,989:INFO:Checking exceptions
2025-03-16 08:45:47,989:INFO:Importing libraries
2025-03-16 08:45:47,989:INFO:Copying training dataset
2025-03-16 08:45:47,994:INFO:Defining folds
2025-03-16 08:45:47,994:INFO:Declaring metric variables
2025-03-16 08:45:47,997:INFO:Importing untrained model
2025-03-16 08:45:47,999:INFO:Logistic Regression Imported successfully
2025-03-16 08:45:48,005:INFO:Starting cross validation
2025-03-16 08:45:48,009:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-03-16 08:45:50,376:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:50,382:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:50,387:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:50,389:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:50,390:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:50,395:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:50,396:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:50,398:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:50,400:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:50,403:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:50,404:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:50,404:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:50,409:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:50,410:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:50,415:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:50,436:INFO:Calculating mean and std
2025-03-16 08:45:50,437:INFO:Creating metrics dataframe
2025-03-16 08:45:50,440:INFO:Uploading results into container
2025-03-16 08:45:50,440:INFO:Uploading model into container now
2025-03-16 08:45:50,441:INFO:_master_model_container: 1
2025-03-16 08:45:50,441:INFO:_display_container: 2
2025-03-16 08:45:50,441:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=43, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-03-16 08:45:50,441:INFO:create_model() successfully completed......................................
2025-03-16 08:45:50,555:INFO:SubProcess create_model() end ==================================
2025-03-16 08:45:50,555:INFO:Creating metrics dataframe
2025-03-16 08:45:50,560:INFO:Initializing K Neighbors Classifier
2025-03-16 08:45:50,560:INFO:Total runtime is 0.04290308554967245 minutes
2025-03-16 08:45:50,562:INFO:SubProcess create_model() called ==================================
2025-03-16 08:45:50,562:INFO:Initializing create_model()
2025-03-16 08:45:50,562:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DADF369180>, estimator=knn, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DADF368FA0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-16 08:45:50,563:INFO:Checking exceptions
2025-03-16 08:45:50,563:INFO:Importing libraries
2025-03-16 08:45:50,563:INFO:Copying training dataset
2025-03-16 08:45:50,567:INFO:Defining folds
2025-03-16 08:45:50,567:INFO:Declaring metric variables
2025-03-16 08:45:50,570:INFO:Importing untrained model
2025-03-16 08:45:50,573:INFO:K Neighbors Classifier Imported successfully
2025-03-16 08:45:50,578:INFO:Starting cross validation
2025-03-16 08:45:50,582:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-03-16 08:45:52,599:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:52,606:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:52,611:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:52,626:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:52,632:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:52,633:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:52,638:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:52,639:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:52,639:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:52,639:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:52,643:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:52,645:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:52,645:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:52,649:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:52,651:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:52,666:INFO:Calculating mean and std
2025-03-16 08:45:52,669:INFO:Creating metrics dataframe
2025-03-16 08:45:52,672:INFO:Uploading results into container
2025-03-16 08:45:52,672:INFO:Uploading model into container now
2025-03-16 08:45:52,673:INFO:_master_model_container: 2
2025-03-16 08:45:52,673:INFO:_display_container: 2
2025-03-16 08:45:52,673:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-03-16 08:45:52,673:INFO:create_model() successfully completed......................................
2025-03-16 08:45:52,797:INFO:SubProcess create_model() end ==================================
2025-03-16 08:45:52,798:INFO:Creating metrics dataframe
2025-03-16 08:45:52,803:INFO:Initializing Naive Bayes
2025-03-16 08:45:52,803:INFO:Total runtime is 0.08029543956120809 minutes
2025-03-16 08:45:52,806:INFO:SubProcess create_model() called ==================================
2025-03-16 08:45:52,806:INFO:Initializing create_model()
2025-03-16 08:45:52,806:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DADF369180>, estimator=nb, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DADF368FA0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-16 08:45:52,806:INFO:Checking exceptions
2025-03-16 08:45:52,806:INFO:Importing libraries
2025-03-16 08:45:52,806:INFO:Copying training dataset
2025-03-16 08:45:52,811:INFO:Defining folds
2025-03-16 08:45:52,811:INFO:Declaring metric variables
2025-03-16 08:45:52,814:INFO:Importing untrained model
2025-03-16 08:45:52,817:INFO:Naive Bayes Imported successfully
2025-03-16 08:45:52,822:INFO:Starting cross validation
2025-03-16 08:45:52,825:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-03-16 08:45:54,785:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:54,787:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:54,788:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:54,789:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:54,791:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:54,793:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:54,796:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:54,796:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:54,796:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:54,798:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:54,798:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:54,802:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:54,805:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:54,807:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:54,809:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:54,831:INFO:Calculating mean and std
2025-03-16 08:45:54,832:INFO:Creating metrics dataframe
2025-03-16 08:45:54,835:INFO:Uploading results into container
2025-03-16 08:45:54,836:INFO:Uploading model into container now
2025-03-16 08:45:54,836:INFO:_master_model_container: 3
2025-03-16 08:45:54,837:INFO:_display_container: 2
2025-03-16 08:45:54,837:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-03-16 08:45:54,837:INFO:create_model() successfully completed......................................
2025-03-16 08:45:54,955:INFO:SubProcess create_model() end ==================================
2025-03-16 08:45:54,955:INFO:Creating metrics dataframe
2025-03-16 08:45:54,961:INFO:Initializing Decision Tree Classifier
2025-03-16 08:45:54,961:INFO:Total runtime is 0.11625250975290935 minutes
2025-03-16 08:45:54,964:INFO:SubProcess create_model() called ==================================
2025-03-16 08:45:54,964:INFO:Initializing create_model()
2025-03-16 08:45:54,964:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DADF369180>, estimator=dt, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DADF368FA0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-16 08:45:54,964:INFO:Checking exceptions
2025-03-16 08:45:54,965:INFO:Importing libraries
2025-03-16 08:45:54,965:INFO:Copying training dataset
2025-03-16 08:45:54,968:INFO:Defining folds
2025-03-16 08:45:54,969:INFO:Declaring metric variables
2025-03-16 08:45:54,971:INFO:Importing untrained model
2025-03-16 08:45:54,974:INFO:Decision Tree Classifier Imported successfully
2025-03-16 08:45:54,979:INFO:Starting cross validation
2025-03-16 08:45:54,983:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-03-16 08:45:55,249:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:55,255:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:55,259:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:55,261:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:55,264:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:55,267:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:55,267:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:55,270:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:55,273:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:55,274:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:55,280:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:55,280:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:56,848:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:56,853:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:56,859:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:56,869:INFO:Calculating mean and std
2025-03-16 08:45:56,870:INFO:Creating metrics dataframe
2025-03-16 08:45:56,872:INFO:Uploading results into container
2025-03-16 08:45:56,872:INFO:Uploading model into container now
2025-03-16 08:45:56,873:INFO:_master_model_container: 4
2025-03-16 08:45:56,873:INFO:_display_container: 2
2025-03-16 08:45:56,873:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=43, splitter='best')
2025-03-16 08:45:56,873:INFO:create_model() successfully completed......................................
2025-03-16 08:45:56,965:INFO:SubProcess create_model() end ==================================
2025-03-16 08:45:56,965:INFO:Creating metrics dataframe
2025-03-16 08:45:56,971:INFO:Initializing SVM - Linear Kernel
2025-03-16 08:45:56,972:INFO:Total runtime is 0.1497775395711263 minutes
2025-03-16 08:45:56,974:INFO:SubProcess create_model() called ==================================
2025-03-16 08:45:56,974:INFO:Initializing create_model()
2025-03-16 08:45:56,974:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DADF369180>, estimator=svm, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DADF368FA0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-16 08:45:56,975:INFO:Checking exceptions
2025-03-16 08:45:56,975:INFO:Importing libraries
2025-03-16 08:45:56,975:INFO:Copying training dataset
2025-03-16 08:45:56,979:INFO:Defining folds
2025-03-16 08:45:56,979:INFO:Declaring metric variables
2025-03-16 08:45:56,982:INFO:Importing untrained model
2025-03-16 08:45:56,985:INFO:SVM - Linear Kernel Imported successfully
2025-03-16 08:45:56,990:INFO:Starting cross validation
2025-03-16 08:45:56,994:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-03-16 08:45:57,273:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:57,278:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:57,279:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:57,279:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:57,280:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:57,284:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:57,284:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:57,284:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:57,287:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:57,289:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:57,289:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:57,291:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:57,292:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:57,296:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:57,301:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:57,314:INFO:Calculating mean and std
2025-03-16 08:45:57,315:INFO:Creating metrics dataframe
2025-03-16 08:45:57,316:INFO:Uploading results into container
2025-03-16 08:45:57,317:INFO:Uploading model into container now
2025-03-16 08:45:57,317:INFO:_master_model_container: 5
2025-03-16 08:45:57,317:INFO:_display_container: 2
2025-03-16 08:45:57,318:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=43, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-03-16 08:45:57,318:INFO:create_model() successfully completed......................................
2025-03-16 08:45:57,391:INFO:SubProcess create_model() end ==================================
2025-03-16 08:45:57,391:INFO:Creating metrics dataframe
2025-03-16 08:45:57,397:INFO:Initializing Ridge Classifier
2025-03-16 08:45:57,397:INFO:Total runtime is 0.15684806903203327 minutes
2025-03-16 08:45:57,400:INFO:SubProcess create_model() called ==================================
2025-03-16 08:45:57,400:INFO:Initializing create_model()
2025-03-16 08:45:57,400:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DADF369180>, estimator=ridge, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DADF368FA0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-16 08:45:57,400:INFO:Checking exceptions
2025-03-16 08:45:57,400:INFO:Importing libraries
2025-03-16 08:45:57,400:INFO:Copying training dataset
2025-03-16 08:45:57,405:INFO:Defining folds
2025-03-16 08:45:57,405:INFO:Declaring metric variables
2025-03-16 08:45:57,407:INFO:Importing untrained model
2025-03-16 08:45:57,409:INFO:Ridge Classifier Imported successfully
2025-03-16 08:45:57,414:INFO:Starting cross validation
2025-03-16 08:45:57,417:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-03-16 08:45:57,676:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:57,683:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:57,683:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:57,685:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:57,688:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:57,689:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:57,689:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:57,690:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:57,694:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:57,694:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:57,697:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:57,698:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:57,699:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:57,704:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:57,709:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:57,724:INFO:Calculating mean and std
2025-03-16 08:45:57,725:INFO:Creating metrics dataframe
2025-03-16 08:45:57,726:INFO:Uploading results into container
2025-03-16 08:45:57,727:INFO:Uploading model into container now
2025-03-16 08:45:57,727:INFO:_master_model_container: 6
2025-03-16 08:45:57,727:INFO:_display_container: 2
2025-03-16 08:45:57,728:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=43, solver='auto',
                tol=0.0001)
2025-03-16 08:45:57,728:INFO:create_model() successfully completed......................................
2025-03-16 08:45:57,818:INFO:SubProcess create_model() end ==================================
2025-03-16 08:45:57,818:INFO:Creating metrics dataframe
2025-03-16 08:45:57,825:INFO:Initializing Random Forest Classifier
2025-03-16 08:45:57,825:INFO:Total runtime is 0.16398506959279377 minutes
2025-03-16 08:45:57,828:INFO:SubProcess create_model() called ==================================
2025-03-16 08:45:57,828:INFO:Initializing create_model()
2025-03-16 08:45:57,829:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DADF369180>, estimator=rf, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DADF368FA0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-16 08:45:57,829:INFO:Checking exceptions
2025-03-16 08:45:57,829:INFO:Importing libraries
2025-03-16 08:45:57,829:INFO:Copying training dataset
2025-03-16 08:45:57,834:INFO:Defining folds
2025-03-16 08:45:57,834:INFO:Declaring metric variables
2025-03-16 08:45:57,838:INFO:Importing untrained model
2025-03-16 08:45:57,841:INFO:Random Forest Classifier Imported successfully
2025-03-16 08:45:57,846:INFO:Starting cross validation
2025-03-16 08:45:57,849:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-03-16 08:45:58,452:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:58,453:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:58,458:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:58,458:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:58,464:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:58,464:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:58,467:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:58,468:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:58,472:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:58,473:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:58,478:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:58,478:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:58,482:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:58,488:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:58,495:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:58,507:INFO:Calculating mean and std
2025-03-16 08:45:58,508:INFO:Creating metrics dataframe
2025-03-16 08:45:58,509:INFO:Uploading results into container
2025-03-16 08:45:58,510:INFO:Uploading model into container now
2025-03-16 08:45:58,510:INFO:_master_model_container: 7
2025-03-16 08:45:58,510:INFO:_display_container: 2
2025-03-16 08:45:58,510:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=43, verbose=0,
                       warm_start=False)
2025-03-16 08:45:58,511:INFO:create_model() successfully completed......................................
2025-03-16 08:45:58,586:INFO:SubProcess create_model() end ==================================
2025-03-16 08:45:58,587:INFO:Creating metrics dataframe
2025-03-16 08:45:58,595:INFO:Initializing Quadratic Discriminant Analysis
2025-03-16 08:45:58,595:INFO:Total runtime is 0.17681612968444824 minutes
2025-03-16 08:45:58,597:INFO:SubProcess create_model() called ==================================
2025-03-16 08:45:58,598:INFO:Initializing create_model()
2025-03-16 08:45:58,598:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DADF369180>, estimator=qda, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DADF368FA0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-16 08:45:58,598:INFO:Checking exceptions
2025-03-16 08:45:58,598:INFO:Importing libraries
2025-03-16 08:45:58,598:INFO:Copying training dataset
2025-03-16 08:45:58,603:INFO:Defining folds
2025-03-16 08:45:58,603:INFO:Declaring metric variables
2025-03-16 08:45:58,606:INFO:Importing untrained model
2025-03-16 08:45:58,608:INFO:Quadratic Discriminant Analysis Imported successfully
2025-03-16 08:45:58,615:INFO:Starting cross validation
2025-03-16 08:45:58,619:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-03-16 08:45:58,875:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-16 08:45:58,924:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-16 08:45:58,926:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-16 08:45:58,930:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-16 08:45:58,930:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-16 08:45:58,967:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:58,972:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:58,978:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:59,004:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:59,005:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:59,011:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:59,011:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:59,013:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:59,014:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:59,017:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:59,018:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:59,022:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:59,022:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:59,023:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:59,023:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:59,042:INFO:Calculating mean and std
2025-03-16 08:45:59,042:INFO:Creating metrics dataframe
2025-03-16 08:45:59,044:INFO:Uploading results into container
2025-03-16 08:45:59,045:INFO:Uploading model into container now
2025-03-16 08:45:59,045:INFO:_master_model_container: 8
2025-03-16 08:45:59,045:INFO:_display_container: 2
2025-03-16 08:45:59,046:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-03-16 08:45:59,046:INFO:create_model() successfully completed......................................
2025-03-16 08:45:59,132:INFO:SubProcess create_model() end ==================================
2025-03-16 08:45:59,132:INFO:Creating metrics dataframe
2025-03-16 08:45:59,141:INFO:Initializing Ada Boost Classifier
2025-03-16 08:45:59,141:INFO:Total runtime is 0.18591602245966593 minutes
2025-03-16 08:45:59,144:INFO:SubProcess create_model() called ==================================
2025-03-16 08:45:59,144:INFO:Initializing create_model()
2025-03-16 08:45:59,144:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DADF369180>, estimator=ada, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DADF368FA0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-16 08:45:59,144:INFO:Checking exceptions
2025-03-16 08:45:59,144:INFO:Importing libraries
2025-03-16 08:45:59,145:INFO:Copying training dataset
2025-03-16 08:45:59,150:INFO:Defining folds
2025-03-16 08:45:59,150:INFO:Declaring metric variables
2025-03-16 08:45:59,153:INFO:Importing untrained model
2025-03-16 08:45:59,155:INFO:Ada Boost Classifier Imported successfully
2025-03-16 08:45:59,163:INFO:Starting cross validation
2025-03-16 08:45:59,168:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-03-16 08:45:59,414:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-16 08:45:59,419:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-16 08:45:59,429:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-16 08:45:59,434:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-16 08:45:59,435:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-16 08:45:59,729:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:59,738:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:59,742:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:59,747:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:59,751:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:59,752:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:59,753:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:59,758:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:59,760:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:59,760:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:59,760:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:59,764:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:59,766:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:59,767:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:59,772:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:45:59,785:INFO:Calculating mean and std
2025-03-16 08:45:59,786:INFO:Creating metrics dataframe
2025-03-16 08:45:59,789:INFO:Uploading results into container
2025-03-16 08:45:59,789:INFO:Uploading model into container now
2025-03-16 08:45:59,790:INFO:_master_model_container: 9
2025-03-16 08:45:59,790:INFO:_display_container: 2
2025-03-16 08:45:59,790:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=43)
2025-03-16 08:45:59,790:INFO:create_model() successfully completed......................................
2025-03-16 08:45:59,876:INFO:SubProcess create_model() end ==================================
2025-03-16 08:45:59,876:INFO:Creating metrics dataframe
2025-03-16 08:45:59,885:INFO:Initializing Gradient Boosting Classifier
2025-03-16 08:45:59,885:INFO:Total runtime is 0.19832500219345092 minutes
2025-03-16 08:45:59,889:INFO:SubProcess create_model() called ==================================
2025-03-16 08:45:59,889:INFO:Initializing create_model()
2025-03-16 08:45:59,889:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DADF369180>, estimator=gbc, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DADF368FA0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-16 08:45:59,889:INFO:Checking exceptions
2025-03-16 08:45:59,890:INFO:Importing libraries
2025-03-16 08:45:59,890:INFO:Copying training dataset
2025-03-16 08:45:59,894:INFO:Defining folds
2025-03-16 08:45:59,894:INFO:Declaring metric variables
2025-03-16 08:45:59,897:INFO:Importing untrained model
2025-03-16 08:45:59,900:INFO:Gradient Boosting Classifier Imported successfully
2025-03-16 08:45:59,908:INFO:Starting cross validation
2025-03-16 08:45:59,912:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-03-16 08:46:00,830:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:00,836:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:00,842:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:00,849:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:00,851:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:00,855:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:00,855:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:00,857:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:00,863:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:00,863:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:00,864:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:00,866:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:00,873:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:00,874:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:00,884:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:00,909:INFO:Calculating mean and std
2025-03-16 08:46:00,909:INFO:Creating metrics dataframe
2025-03-16 08:46:00,911:INFO:Uploading results into container
2025-03-16 08:46:00,912:INFO:Uploading model into container now
2025-03-16 08:46:00,912:INFO:_master_model_container: 10
2025-03-16 08:46:00,912:INFO:_display_container: 2
2025-03-16 08:46:00,913:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=43, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-03-16 08:46:00,913:INFO:create_model() successfully completed......................................
2025-03-16 08:46:00,996:INFO:SubProcess create_model() end ==================================
2025-03-16 08:46:00,997:INFO:Creating metrics dataframe
2025-03-16 08:46:01,004:INFO:Initializing Linear Discriminant Analysis
2025-03-16 08:46:01,004:INFO:Total runtime is 0.216977854569753 minutes
2025-03-16 08:46:01,008:INFO:SubProcess create_model() called ==================================
2025-03-16 08:46:01,008:INFO:Initializing create_model()
2025-03-16 08:46:01,008:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DADF369180>, estimator=lda, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DADF368FA0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-16 08:46:01,008:INFO:Checking exceptions
2025-03-16 08:46:01,008:INFO:Importing libraries
2025-03-16 08:46:01,008:INFO:Copying training dataset
2025-03-16 08:46:01,013:INFO:Defining folds
2025-03-16 08:46:01,014:INFO:Declaring metric variables
2025-03-16 08:46:01,017:INFO:Importing untrained model
2025-03-16 08:46:01,020:INFO:Linear Discriminant Analysis Imported successfully
2025-03-16 08:46:01,027:INFO:Starting cross validation
2025-03-16 08:46:01,034:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-03-16 08:46:01,371:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:01,375:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:01,377:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:01,377:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:01,378:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:01,383:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:01,384:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:01,385:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:01,386:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:01,388:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:01,390:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:01,391:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:01,395:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:01,397:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:01,403:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:01,416:INFO:Calculating mean and std
2025-03-16 08:46:01,417:INFO:Creating metrics dataframe
2025-03-16 08:46:01,419:INFO:Uploading results into container
2025-03-16 08:46:01,419:INFO:Uploading model into container now
2025-03-16 08:46:01,420:INFO:_master_model_container: 11
2025-03-16 08:46:01,420:INFO:_display_container: 2
2025-03-16 08:46:01,420:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-03-16 08:46:01,420:INFO:create_model() successfully completed......................................
2025-03-16 08:46:01,492:INFO:SubProcess create_model() end ==================================
2025-03-16 08:46:01,493:INFO:Creating metrics dataframe
2025-03-16 08:46:01,500:INFO:Initializing Extra Trees Classifier
2025-03-16 08:46:01,501:INFO:Total runtime is 0.22524971961975096 minutes
2025-03-16 08:46:01,503:INFO:SubProcess create_model() called ==================================
2025-03-16 08:46:01,504:INFO:Initializing create_model()
2025-03-16 08:46:01,504:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DADF369180>, estimator=et, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DADF368FA0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-16 08:46:01,504:INFO:Checking exceptions
2025-03-16 08:46:01,504:INFO:Importing libraries
2025-03-16 08:46:01,504:INFO:Copying training dataset
2025-03-16 08:46:01,509:INFO:Defining folds
2025-03-16 08:46:01,509:INFO:Declaring metric variables
2025-03-16 08:46:01,512:INFO:Importing untrained model
2025-03-16 08:46:01,514:INFO:Extra Trees Classifier Imported successfully
2025-03-16 08:46:01,521:INFO:Starting cross validation
2025-03-16 08:46:01,525:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-03-16 08:46:02,087:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:02,087:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:02,087:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:02,094:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:02,094:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:02,096:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:02,097:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:02,100:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:02,101:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:02,102:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:02,103:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:02,103:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:02,112:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:02,120:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:02,142:INFO:Calculating mean and std
2025-03-16 08:46:02,143:INFO:Creating metrics dataframe
2025-03-16 08:46:02,145:INFO:Uploading results into container
2025-03-16 08:46:02,145:INFO:Uploading model into container now
2025-03-16 08:46:02,146:INFO:_master_model_container: 12
2025-03-16 08:46:02,146:INFO:_display_container: 2
2025-03-16 08:46:02,146:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=43, verbose=0,
                     warm_start=False)
2025-03-16 08:46:02,146:INFO:create_model() successfully completed......................................
2025-03-16 08:46:02,221:INFO:SubProcess create_model() end ==================================
2025-03-16 08:46:02,221:INFO:Creating metrics dataframe
2025-03-16 08:46:02,230:INFO:Initializing Light Gradient Boosting Machine
2025-03-16 08:46:02,230:INFO:Total runtime is 0.23739616473515826 minutes
2025-03-16 08:46:02,233:INFO:SubProcess create_model() called ==================================
2025-03-16 08:46:02,233:INFO:Initializing create_model()
2025-03-16 08:46:02,233:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DADF369180>, estimator=lightgbm, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DADF368FA0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-16 08:46:02,233:INFO:Checking exceptions
2025-03-16 08:46:02,234:INFO:Importing libraries
2025-03-16 08:46:02,234:INFO:Copying training dataset
2025-03-16 08:46:02,239:INFO:Defining folds
2025-03-16 08:46:02,239:INFO:Declaring metric variables
2025-03-16 08:46:02,241:INFO:Importing untrained model
2025-03-16 08:46:02,244:INFO:Light Gradient Boosting Machine Imported successfully
2025-03-16 08:46:02,252:INFO:Starting cross validation
2025-03-16 08:46:02,256:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-03-16 08:46:02,827:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:02,838:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:02,844:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:02,848:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:02,854:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:02,865:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:02,917:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:02,926:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:02,935:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:02,937:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:02,946:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:02,955:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:02,967:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:02,976:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:02,985:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:03,011:INFO:Calculating mean and std
2025-03-16 08:46:03,011:INFO:Creating metrics dataframe
2025-03-16 08:46:03,014:INFO:Uploading results into container
2025-03-16 08:46:03,014:INFO:Uploading model into container now
2025-03-16 08:46:03,015:INFO:_master_model_container: 13
2025-03-16 08:46:03,015:INFO:_display_container: 2
2025-03-16 08:46:03,016:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=43, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-03-16 08:46:03,016:INFO:create_model() successfully completed......................................
2025-03-16 08:46:03,103:INFO:SubProcess create_model() end ==================================
2025-03-16 08:46:03,103:INFO:Creating metrics dataframe
2025-03-16 08:46:03,111:INFO:Initializing Dummy Classifier
2025-03-16 08:46:03,111:INFO:Total runtime is 0.2520899613698323 minutes
2025-03-16 08:46:03,115:INFO:SubProcess create_model() called ==================================
2025-03-16 08:46:03,115:INFO:Initializing create_model()
2025-03-16 08:46:03,115:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DADF369180>, estimator=dummy, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DADF368FA0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-16 08:46:03,115:INFO:Checking exceptions
2025-03-16 08:46:03,115:INFO:Importing libraries
2025-03-16 08:46:03,115:INFO:Copying training dataset
2025-03-16 08:46:03,119:INFO:Defining folds
2025-03-16 08:46:03,120:INFO:Declaring metric variables
2025-03-16 08:46:03,122:INFO:Importing untrained model
2025-03-16 08:46:03,124:INFO:Dummy Classifier Imported successfully
2025-03-16 08:46:03,131:INFO:Starting cross validation
2025-03-16 08:46:03,136:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-03-16 08:46:03,396:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:03,402:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:03,405:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-16 08:46:03,408:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:03,427:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:03,434:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:03,437:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:03,439:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-16 08:46:03,443:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:03,443:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:03,445:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:03,446:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-16 08:46:03,449:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:03,450:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:03,450:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:03,453:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-16 08:46:03,456:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:03,458:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:03,462:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-16 08:46:03,464:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:03,486:INFO:Calculating mean and std
2025-03-16 08:46:03,486:INFO:Creating metrics dataframe
2025-03-16 08:46:03,488:INFO:Uploading results into container
2025-03-16 08:46:03,489:INFO:Uploading model into container now
2025-03-16 08:46:03,489:INFO:_master_model_container: 14
2025-03-16 08:46:03,489:INFO:_display_container: 2
2025-03-16 08:46:03,489:INFO:DummyClassifier(constant=None, random_state=43, strategy='prior')
2025-03-16 08:46:03,490:INFO:create_model() successfully completed......................................
2025-03-16 08:46:03,562:INFO:SubProcess create_model() end ==================================
2025-03-16 08:46:03,562:INFO:Creating metrics dataframe
2025-03-16 08:46:03,570:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning:

Styler.applymap has been deprecated. Use Styler.map instead.


2025-03-16 08:46:03,577:INFO:Initializing create_model()
2025-03-16 08:46:03,578:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DADF369180>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=43, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-16 08:46:03,578:INFO:Checking exceptions
2025-03-16 08:46:03,579:INFO:Importing libraries
2025-03-16 08:46:03,579:INFO:Copying training dataset
2025-03-16 08:46:03,584:INFO:Defining folds
2025-03-16 08:46:03,584:INFO:Declaring metric variables
2025-03-16 08:46:03,584:INFO:Importing untrained model
2025-03-16 08:46:03,584:INFO:Declaring custom model
2025-03-16 08:46:03,584:INFO:Gradient Boosting Classifier Imported successfully
2025-03-16 08:46:03,587:INFO:Cross validation set to False
2025-03-16 08:46:03,587:INFO:Fitting Model
2025-03-16 08:46:04,390:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=43, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-03-16 08:46:04,390:INFO:create_model() successfully completed......................................
2025-03-16 08:46:04,495:INFO:_master_model_container: 14
2025-03-16 08:46:04,495:INFO:_display_container: 2
2025-03-16 08:46:04,495:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=43, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-03-16 08:46:04,496:INFO:compare_models() successfully completed......................................
2025-03-16 08:46:12,722:INFO:Initializing compare_models()
2025-03-16 08:46:12,722:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DADF369180>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001DADF369180>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2025-03-16 08:46:12,722:INFO:Checking exceptions
2025-03-16 08:46:12,726:INFO:Preparing display monitor
2025-03-16 08:46:12,749:INFO:Initializing Logistic Regression
2025-03-16 08:46:12,749:INFO:Total runtime is 0.0 minutes
2025-03-16 08:46:12,753:INFO:SubProcess create_model() called ==================================
2025-03-16 08:46:12,754:INFO:Initializing create_model()
2025-03-16 08:46:12,754:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DADF369180>, estimator=lr, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DADF36B070>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-16 08:46:12,754:INFO:Checking exceptions
2025-03-16 08:46:12,754:INFO:Importing libraries
2025-03-16 08:46:12,754:INFO:Copying training dataset
2025-03-16 08:46:12,763:INFO:Defining folds
2025-03-16 08:46:12,764:INFO:Declaring metric variables
2025-03-16 08:46:12,767:INFO:Importing untrained model
2025-03-16 08:46:12,771:INFO:Logistic Regression Imported successfully
2025-03-16 08:46:12,779:INFO:Starting cross validation
2025-03-16 08:46:12,784:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-03-16 08:46:13,109:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:13,114:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:13,120:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:13,123:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:13,127:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:13,129:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:13,133:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:13,136:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:13,137:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:13,139:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:13,139:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:13,145:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:13,147:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:13,152:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:13,153:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:13,176:INFO:Calculating mean and std
2025-03-16 08:46:13,176:INFO:Creating metrics dataframe
2025-03-16 08:46:13,178:INFO:Uploading results into container
2025-03-16 08:46:13,178:INFO:Uploading model into container now
2025-03-16 08:46:13,178:INFO:_master_model_container: 15
2025-03-16 08:46:13,178:INFO:_display_container: 3
2025-03-16 08:46:13,179:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=43, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-03-16 08:46:13,179:INFO:create_model() successfully completed......................................
2025-03-16 08:46:13,257:INFO:SubProcess create_model() end ==================================
2025-03-16 08:46:13,258:INFO:Creating metrics dataframe
2025-03-16 08:46:13,263:INFO:Initializing K Neighbors Classifier
2025-03-16 08:46:13,263:INFO:Total runtime is 0.008573329448699952 minutes
2025-03-16 08:46:13,266:INFO:SubProcess create_model() called ==================================
2025-03-16 08:46:13,266:INFO:Initializing create_model()
2025-03-16 08:46:13,267:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DADF369180>, estimator=knn, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DADF36B070>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-16 08:46:13,267:INFO:Checking exceptions
2025-03-16 08:46:13,267:INFO:Importing libraries
2025-03-16 08:46:13,267:INFO:Copying training dataset
2025-03-16 08:46:13,272:INFO:Defining folds
2025-03-16 08:46:13,272:INFO:Declaring metric variables
2025-03-16 08:46:13,274:INFO:Importing untrained model
2025-03-16 08:46:13,277:INFO:K Neighbors Classifier Imported successfully
2025-03-16 08:46:13,284:INFO:Starting cross validation
2025-03-16 08:46:13,288:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-03-16 08:46:13,746:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:13,746:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:13,751:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:13,752:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:13,757:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:13,760:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:13,768:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:13,772:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:13,777:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:13,778:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:13,780:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:13,784:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:13,785:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:13,789:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:13,791:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:13,807:INFO:Calculating mean and std
2025-03-16 08:46:13,808:INFO:Creating metrics dataframe
2025-03-16 08:46:13,810:INFO:Uploading results into container
2025-03-16 08:46:13,810:INFO:Uploading model into container now
2025-03-16 08:46:13,811:INFO:_master_model_container: 16
2025-03-16 08:46:13,811:INFO:_display_container: 3
2025-03-16 08:46:13,811:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-03-16 08:46:13,811:INFO:create_model() successfully completed......................................
2025-03-16 08:46:13,888:INFO:SubProcess create_model() end ==================================
2025-03-16 08:46:13,888:INFO:Creating metrics dataframe
2025-03-16 08:46:13,894:INFO:Initializing Naive Bayes
2025-03-16 08:46:13,894:INFO:Total runtime is 0.019083813826243082 minutes
2025-03-16 08:46:13,896:INFO:SubProcess create_model() called ==================================
2025-03-16 08:46:13,897:INFO:Initializing create_model()
2025-03-16 08:46:13,897:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DADF369180>, estimator=nb, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DADF36B070>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-16 08:46:13,897:INFO:Checking exceptions
2025-03-16 08:46:13,897:INFO:Importing libraries
2025-03-16 08:46:13,897:INFO:Copying training dataset
2025-03-16 08:46:13,902:INFO:Defining folds
2025-03-16 08:46:13,902:INFO:Declaring metric variables
2025-03-16 08:46:13,904:INFO:Importing untrained model
2025-03-16 08:46:13,906:INFO:Naive Bayes Imported successfully
2025-03-16 08:46:13,913:INFO:Starting cross validation
2025-03-16 08:46:13,918:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-03-16 08:46:14,208:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:14,208:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:14,209:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:14,209:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:14,213:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:14,214:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:14,214:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:14,214:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:14,214:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:14,219:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:14,219:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:14,220:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:14,220:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:14,220:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:14,225:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:14,245:INFO:Calculating mean and std
2025-03-16 08:46:14,245:INFO:Creating metrics dataframe
2025-03-16 08:46:14,247:INFO:Uploading results into container
2025-03-16 08:46:14,247:INFO:Uploading model into container now
2025-03-16 08:46:14,247:INFO:_master_model_container: 17
2025-03-16 08:46:14,247:INFO:_display_container: 3
2025-03-16 08:46:14,248:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-03-16 08:46:14,248:INFO:create_model() successfully completed......................................
2025-03-16 08:46:14,320:INFO:SubProcess create_model() end ==================================
2025-03-16 08:46:14,320:INFO:Creating metrics dataframe
2025-03-16 08:46:14,325:INFO:Initializing Decision Tree Classifier
2025-03-16 08:46:14,325:INFO:Total runtime is 0.02626802921295166 minutes
2025-03-16 08:46:14,328:INFO:SubProcess create_model() called ==================================
2025-03-16 08:46:14,329:INFO:Initializing create_model()
2025-03-16 08:46:14,329:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DADF369180>, estimator=dt, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DADF36B070>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-16 08:46:14,329:INFO:Checking exceptions
2025-03-16 08:46:14,329:INFO:Importing libraries
2025-03-16 08:46:14,329:INFO:Copying training dataset
2025-03-16 08:46:14,334:INFO:Defining folds
2025-03-16 08:46:14,334:INFO:Declaring metric variables
2025-03-16 08:46:14,337:INFO:Importing untrained model
2025-03-16 08:46:14,340:INFO:Decision Tree Classifier Imported successfully
2025-03-16 08:46:14,345:INFO:Starting cross validation
2025-03-16 08:46:14,348:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-03-16 08:46:14,660:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:14,663:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:14,664:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:14,666:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:14,666:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:14,666:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:14,668:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:14,670:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:14,671:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:14,672:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:14,672:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:14,673:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:14,677:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:14,677:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:14,678:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:14,687:INFO:Calculating mean and std
2025-03-16 08:46:14,688:INFO:Creating metrics dataframe
2025-03-16 08:46:14,690:INFO:Uploading results into container
2025-03-16 08:46:14,690:INFO:Uploading model into container now
2025-03-16 08:46:14,690:INFO:_master_model_container: 18
2025-03-16 08:46:14,690:INFO:_display_container: 3
2025-03-16 08:46:14,691:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=43, splitter='best')
2025-03-16 08:46:14,691:INFO:create_model() successfully completed......................................
2025-03-16 08:46:14,768:INFO:SubProcess create_model() end ==================================
2025-03-16 08:46:14,768:INFO:Creating metrics dataframe
2025-03-16 08:46:14,774:INFO:Initializing SVM - Linear Kernel
2025-03-16 08:46:14,774:INFO:Total runtime is 0.03374452590942383 minutes
2025-03-16 08:46:14,777:INFO:SubProcess create_model() called ==================================
2025-03-16 08:46:14,777:INFO:Initializing create_model()
2025-03-16 08:46:14,777:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DADF369180>, estimator=svm, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DADF36B070>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-16 08:46:14,777:INFO:Checking exceptions
2025-03-16 08:46:14,777:INFO:Importing libraries
2025-03-16 08:46:14,777:INFO:Copying training dataset
2025-03-16 08:46:14,782:INFO:Defining folds
2025-03-16 08:46:14,782:INFO:Declaring metric variables
2025-03-16 08:46:14,784:INFO:Importing untrained model
2025-03-16 08:46:14,787:INFO:SVM - Linear Kernel Imported successfully
2025-03-16 08:46:14,792:INFO:Starting cross validation
2025-03-16 08:46:14,795:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-03-16 08:46:15,063:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:15,063:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:15,068:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:15,070:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:15,071:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:15,073:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:15,075:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:15,076:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:15,076:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:15,080:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:15,081:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:15,082:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:15,087:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:15,087:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:15,093:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:15,115:INFO:Calculating mean and std
2025-03-16 08:46:15,116:INFO:Creating metrics dataframe
2025-03-16 08:46:15,117:INFO:Uploading results into container
2025-03-16 08:46:15,118:INFO:Uploading model into container now
2025-03-16 08:46:15,118:INFO:_master_model_container: 19
2025-03-16 08:46:15,118:INFO:_display_container: 3
2025-03-16 08:46:15,118:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=43, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-03-16 08:46:15,118:INFO:create_model() successfully completed......................................
2025-03-16 08:46:15,192:INFO:SubProcess create_model() end ==================================
2025-03-16 08:46:15,192:INFO:Creating metrics dataframe
2025-03-16 08:46:15,200:INFO:Initializing Ridge Classifier
2025-03-16 08:46:15,200:INFO:Total runtime is 0.04084436098734538 minutes
2025-03-16 08:46:15,202:INFO:SubProcess create_model() called ==================================
2025-03-16 08:46:15,202:INFO:Initializing create_model()
2025-03-16 08:46:15,202:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DADF369180>, estimator=ridge, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DADF36B070>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-16 08:46:15,203:INFO:Checking exceptions
2025-03-16 08:46:15,203:INFO:Importing libraries
2025-03-16 08:46:15,203:INFO:Copying training dataset
2025-03-16 08:46:15,207:INFO:Defining folds
2025-03-16 08:46:15,207:INFO:Declaring metric variables
2025-03-16 08:46:15,209:INFO:Importing untrained model
2025-03-16 08:46:15,212:INFO:Ridge Classifier Imported successfully
2025-03-16 08:46:15,217:INFO:Starting cross validation
2025-03-16 08:46:15,220:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-03-16 08:46:15,475:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:15,477:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:15,478:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:15,481:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:15,482:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:15,483:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:15,486:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:15,486:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:15,488:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:15,488:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:15,490:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:15,491:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:15,493:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:15,494:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:15,497:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:15,511:INFO:Calculating mean and std
2025-03-16 08:46:15,512:INFO:Creating metrics dataframe
2025-03-16 08:46:15,513:INFO:Uploading results into container
2025-03-16 08:46:15,514:INFO:Uploading model into container now
2025-03-16 08:46:15,514:INFO:_master_model_container: 20
2025-03-16 08:46:15,514:INFO:_display_container: 3
2025-03-16 08:46:15,515:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=43, solver='auto',
                tol=0.0001)
2025-03-16 08:46:15,515:INFO:create_model() successfully completed......................................
2025-03-16 08:46:15,589:INFO:SubProcess create_model() end ==================================
2025-03-16 08:46:15,589:INFO:Creating metrics dataframe
2025-03-16 08:46:15,595:INFO:Initializing Random Forest Classifier
2025-03-16 08:46:15,595:INFO:Total runtime is 0.04743373394012452 minutes
2025-03-16 08:46:15,598:INFO:SubProcess create_model() called ==================================
2025-03-16 08:46:15,598:INFO:Initializing create_model()
2025-03-16 08:46:15,598:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DADF369180>, estimator=rf, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DADF36B070>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-16 08:46:15,598:INFO:Checking exceptions
2025-03-16 08:46:15,598:INFO:Importing libraries
2025-03-16 08:46:15,598:INFO:Copying training dataset
2025-03-16 08:46:15,603:INFO:Defining folds
2025-03-16 08:46:15,603:INFO:Declaring metric variables
2025-03-16 08:46:15,605:INFO:Importing untrained model
2025-03-16 08:46:15,608:INFO:Random Forest Classifier Imported successfully
2025-03-16 08:46:15,612:INFO:Starting cross validation
2025-03-16 08:46:15,615:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-03-16 08:46:16,100:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:16,105:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:16,112:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:16,113:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:16,113:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:16,114:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:16,118:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:16,119:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:16,119:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:16,124:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:16,124:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:16,125:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:16,128:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:16,133:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:16,139:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:16,154:INFO:Calculating mean and std
2025-03-16 08:46:16,155:INFO:Creating metrics dataframe
2025-03-16 08:46:16,157:INFO:Uploading results into container
2025-03-16 08:46:16,157:INFO:Uploading model into container now
2025-03-16 08:46:16,157:INFO:_master_model_container: 21
2025-03-16 08:46:16,157:INFO:_display_container: 3
2025-03-16 08:46:16,158:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=43, verbose=0,
                       warm_start=False)
2025-03-16 08:46:16,158:INFO:create_model() successfully completed......................................
2025-03-16 08:46:16,233:INFO:SubProcess create_model() end ==================================
2025-03-16 08:46:16,233:INFO:Creating metrics dataframe
2025-03-16 08:46:16,240:INFO:Initializing Quadratic Discriminant Analysis
2025-03-16 08:46:16,240:INFO:Total runtime is 0.05818761189778646 minutes
2025-03-16 08:46:16,242:INFO:SubProcess create_model() called ==================================
2025-03-16 08:46:16,243:INFO:Initializing create_model()
2025-03-16 08:46:16,243:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DADF369180>, estimator=qda, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DADF36B070>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-16 08:46:16,243:INFO:Checking exceptions
2025-03-16 08:46:16,243:INFO:Importing libraries
2025-03-16 08:46:16,243:INFO:Copying training dataset
2025-03-16 08:46:16,247:INFO:Defining folds
2025-03-16 08:46:16,247:INFO:Declaring metric variables
2025-03-16 08:46:16,249:INFO:Importing untrained model
2025-03-16 08:46:16,251:INFO:Quadratic Discriminant Analysis Imported successfully
2025-03-16 08:46:16,256:INFO:Starting cross validation
2025-03-16 08:46:16,259:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-03-16 08:46:16,461:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-16 08:46:16,469:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-16 08:46:16,473:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-16 08:46:16,475:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-16 08:46:16,487:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-16 08:46:16,528:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:16,532:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:16,533:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:16,533:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:16,538:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:16,539:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:16,541:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:16,541:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:16,543:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:16,545:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:16,547:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:16,547:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:16,552:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:16,555:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:16,560:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:16,581:INFO:Calculating mean and std
2025-03-16 08:46:16,582:INFO:Creating metrics dataframe
2025-03-16 08:46:16,584:INFO:Uploading results into container
2025-03-16 08:46:16,584:INFO:Uploading model into container now
2025-03-16 08:46:16,584:INFO:_master_model_container: 22
2025-03-16 08:46:16,584:INFO:_display_container: 3
2025-03-16 08:46:16,585:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-03-16 08:46:16,585:INFO:create_model() successfully completed......................................
2025-03-16 08:46:16,658:INFO:SubProcess create_model() end ==================================
2025-03-16 08:46:16,659:INFO:Creating metrics dataframe
2025-03-16 08:46:16,665:INFO:Initializing Ada Boost Classifier
2025-03-16 08:46:16,665:INFO:Total runtime is 0.0652706265449524 minutes
2025-03-16 08:46:16,668:INFO:SubProcess create_model() called ==================================
2025-03-16 08:46:16,668:INFO:Initializing create_model()
2025-03-16 08:46:16,668:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DADF369180>, estimator=ada, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DADF36B070>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-16 08:46:16,668:INFO:Checking exceptions
2025-03-16 08:46:16,668:INFO:Importing libraries
2025-03-16 08:46:16,668:INFO:Copying training dataset
2025-03-16 08:46:16,672:INFO:Defining folds
2025-03-16 08:46:16,672:INFO:Declaring metric variables
2025-03-16 08:46:16,674:INFO:Importing untrained model
2025-03-16 08:46:16,676:INFO:Ada Boost Classifier Imported successfully
2025-03-16 08:46:16,681:INFO:Starting cross validation
2025-03-16 08:46:16,684:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-03-16 08:46:16,870:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-16 08:46:16,879:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-16 08:46:16,887:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-16 08:46:16,889:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-16 08:46:16,890:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-16 08:46:17,166:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:17,168:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:17,171:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:17,171:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:17,176:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:17,177:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:17,177:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:17,177:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:17,178:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:17,183:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:17,184:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:17,186:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:17,192:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:17,192:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:17,212:INFO:Calculating mean and std
2025-03-16 08:46:17,213:INFO:Creating metrics dataframe
2025-03-16 08:46:17,214:INFO:Uploading results into container
2025-03-16 08:46:17,215:INFO:Uploading model into container now
2025-03-16 08:46:17,215:INFO:_master_model_container: 23
2025-03-16 08:46:17,215:INFO:_display_container: 3
2025-03-16 08:46:17,215:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=43)
2025-03-16 08:46:17,215:INFO:create_model() successfully completed......................................
2025-03-16 08:46:17,290:INFO:SubProcess create_model() end ==================================
2025-03-16 08:46:17,290:INFO:Creating metrics dataframe
2025-03-16 08:46:17,297:INFO:Initializing Gradient Boosting Classifier
2025-03-16 08:46:17,297:INFO:Total runtime is 0.07579269409179688 minutes
2025-03-16 08:46:17,299:INFO:SubProcess create_model() called ==================================
2025-03-16 08:46:17,299:INFO:Initializing create_model()
2025-03-16 08:46:17,299:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DADF369180>, estimator=gbc, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DADF36B070>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-16 08:46:17,300:INFO:Checking exceptions
2025-03-16 08:46:17,300:INFO:Importing libraries
2025-03-16 08:46:17,300:INFO:Copying training dataset
2025-03-16 08:46:17,304:INFO:Defining folds
2025-03-16 08:46:17,304:INFO:Declaring metric variables
2025-03-16 08:46:17,306:INFO:Importing untrained model
2025-03-16 08:46:17,309:INFO:Gradient Boosting Classifier Imported successfully
2025-03-16 08:46:17,314:INFO:Starting cross validation
2025-03-16 08:46:17,317:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-03-16 08:46:18,087:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:18,092:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:18,093:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:18,094:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:18,096:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:18,098:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:18,099:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:18,100:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:18,101:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:18,101:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:18,105:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:18,106:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:18,106:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:18,109:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:18,115:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:18,132:INFO:Calculating mean and std
2025-03-16 08:46:18,133:INFO:Creating metrics dataframe
2025-03-16 08:46:18,135:INFO:Uploading results into container
2025-03-16 08:46:18,135:INFO:Uploading model into container now
2025-03-16 08:46:18,135:INFO:_master_model_container: 24
2025-03-16 08:46:18,135:INFO:_display_container: 3
2025-03-16 08:46:18,136:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=43, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-03-16 08:46:18,136:INFO:create_model() successfully completed......................................
2025-03-16 08:46:18,213:INFO:SubProcess create_model() end ==================================
2025-03-16 08:46:18,213:INFO:Creating metrics dataframe
2025-03-16 08:46:18,220:INFO:Initializing Linear Discriminant Analysis
2025-03-16 08:46:18,220:INFO:Total runtime is 0.09117838144302369 minutes
2025-03-16 08:46:18,222:INFO:SubProcess create_model() called ==================================
2025-03-16 08:46:18,222:INFO:Initializing create_model()
2025-03-16 08:46:18,222:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DADF369180>, estimator=lda, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DADF36B070>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-16 08:46:18,223:INFO:Checking exceptions
2025-03-16 08:46:18,223:INFO:Importing libraries
2025-03-16 08:46:18,223:INFO:Copying training dataset
2025-03-16 08:46:18,227:INFO:Defining folds
2025-03-16 08:46:18,227:INFO:Declaring metric variables
2025-03-16 08:46:18,229:INFO:Importing untrained model
2025-03-16 08:46:18,232:INFO:Linear Discriminant Analysis Imported successfully
2025-03-16 08:46:18,237:INFO:Starting cross validation
2025-03-16 08:46:18,240:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-03-16 08:46:18,498:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:18,504:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:18,506:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:18,509:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:18,509:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:18,511:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:18,511:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:18,513:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:18,514:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:18,516:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:18,517:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:18,519:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:18,520:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:18,522:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:18,525:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:18,543:INFO:Calculating mean and std
2025-03-16 08:46:18,543:INFO:Creating metrics dataframe
2025-03-16 08:46:18,545:INFO:Uploading results into container
2025-03-16 08:46:18,546:INFO:Uploading model into container now
2025-03-16 08:46:18,546:INFO:_master_model_container: 25
2025-03-16 08:46:18,546:INFO:_display_container: 3
2025-03-16 08:46:18,547:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-03-16 08:46:18,547:INFO:create_model() successfully completed......................................
2025-03-16 08:46:18,621:INFO:SubProcess create_model() end ==================================
2025-03-16 08:46:18,621:INFO:Creating metrics dataframe
2025-03-16 08:46:18,628:INFO:Initializing Extra Trees Classifier
2025-03-16 08:46:18,629:INFO:Total runtime is 0.0980045239130656 minutes
2025-03-16 08:46:18,631:INFO:SubProcess create_model() called ==================================
2025-03-16 08:46:18,631:INFO:Initializing create_model()
2025-03-16 08:46:18,631:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DADF369180>, estimator=et, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DADF36B070>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-16 08:46:18,631:INFO:Checking exceptions
2025-03-16 08:46:18,631:INFO:Importing libraries
2025-03-16 08:46:18,631:INFO:Copying training dataset
2025-03-16 08:46:18,635:INFO:Defining folds
2025-03-16 08:46:18,635:INFO:Declaring metric variables
2025-03-16 08:46:18,638:INFO:Importing untrained model
2025-03-16 08:46:18,640:INFO:Extra Trees Classifier Imported successfully
2025-03-16 08:46:18,645:INFO:Starting cross validation
2025-03-16 08:46:18,647:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-03-16 08:46:19,102:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:19,109:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:19,118:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:19,134:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:19,135:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:19,135:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:19,139:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:19,141:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:19,145:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:19,147:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:19,147:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:19,197:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:19,202:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:19,208:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:19,223:INFO:Calculating mean and std
2025-03-16 08:46:19,224:INFO:Creating metrics dataframe
2025-03-16 08:46:19,226:INFO:Uploading results into container
2025-03-16 08:46:19,226:INFO:Uploading model into container now
2025-03-16 08:46:19,226:INFO:_master_model_container: 26
2025-03-16 08:46:19,227:INFO:_display_container: 3
2025-03-16 08:46:19,227:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=43, verbose=0,
                     warm_start=False)
2025-03-16 08:46:19,227:INFO:create_model() successfully completed......................................
2025-03-16 08:46:19,302:INFO:SubProcess create_model() end ==================================
2025-03-16 08:46:19,303:INFO:Creating metrics dataframe
2025-03-16 08:46:19,310:INFO:Initializing Light Gradient Boosting Machine
2025-03-16 08:46:19,310:INFO:Total runtime is 0.10934566656748455 minutes
2025-03-16 08:46:19,313:INFO:SubProcess create_model() called ==================================
2025-03-16 08:46:19,313:INFO:Initializing create_model()
2025-03-16 08:46:19,313:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DADF369180>, estimator=lightgbm, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DADF36B070>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-16 08:46:19,313:INFO:Checking exceptions
2025-03-16 08:46:19,313:INFO:Importing libraries
2025-03-16 08:46:19,314:INFO:Copying training dataset
2025-03-16 08:46:19,318:INFO:Defining folds
2025-03-16 08:46:19,318:INFO:Declaring metric variables
2025-03-16 08:46:19,320:INFO:Importing untrained model
2025-03-16 08:46:19,322:INFO:Light Gradient Boosting Machine Imported successfully
2025-03-16 08:46:19,327:INFO:Starting cross validation
2025-03-16 08:46:19,330:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-03-16 08:46:19,855:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:19,858:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:19,864:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:19,868:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:19,868:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:19,873:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:19,877:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:19,878:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:19,889:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:19,950:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:19,960:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:19,968:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:19,971:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:19,979:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:19,988:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:20,012:INFO:Calculating mean and std
2025-03-16 08:46:20,013:INFO:Creating metrics dataframe
2025-03-16 08:46:20,015:INFO:Uploading results into container
2025-03-16 08:46:20,015:INFO:Uploading model into container now
2025-03-16 08:46:20,016:INFO:_master_model_container: 27
2025-03-16 08:46:20,016:INFO:_display_container: 3
2025-03-16 08:46:20,017:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=43, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-03-16 08:46:20,017:INFO:create_model() successfully completed......................................
2025-03-16 08:46:20,106:INFO:SubProcess create_model() end ==================================
2025-03-16 08:46:20,106:INFO:Creating metrics dataframe
2025-03-16 08:46:20,114:INFO:Initializing Dummy Classifier
2025-03-16 08:46:20,114:INFO:Total runtime is 0.12274820009867352 minutes
2025-03-16 08:46:20,116:INFO:SubProcess create_model() called ==================================
2025-03-16 08:46:20,117:INFO:Initializing create_model()
2025-03-16 08:46:20,117:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DADF369180>, estimator=dummy, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DADF36B070>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-16 08:46:20,117:INFO:Checking exceptions
2025-03-16 08:46:20,117:INFO:Importing libraries
2025-03-16 08:46:20,117:INFO:Copying training dataset
2025-03-16 08:46:20,122:INFO:Defining folds
2025-03-16 08:46:20,122:INFO:Declaring metric variables
2025-03-16 08:46:20,124:INFO:Importing untrained model
2025-03-16 08:46:20,127:INFO:Dummy Classifier Imported successfully
2025-03-16 08:46:20,132:INFO:Starting cross validation
2025-03-16 08:46:20,135:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-03-16 08:46:20,369:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:20,374:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:20,377:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-16 08:46:20,380:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:20,384:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:20,389:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:20,389:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:20,390:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:20,392:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:20,393:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-16 08:46:20,395:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:20,395:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:20,395:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:20,397:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:20,397:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-16 08:46:20,398:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-16 08:46:20,400:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:20,400:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-16 08:46:20,400:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:20,402:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:46:20,421:INFO:Calculating mean and std
2025-03-16 08:46:20,421:INFO:Creating metrics dataframe
2025-03-16 08:46:20,423:INFO:Uploading results into container
2025-03-16 08:46:20,423:INFO:Uploading model into container now
2025-03-16 08:46:20,424:INFO:_master_model_container: 28
2025-03-16 08:46:20,424:INFO:_display_container: 3
2025-03-16 08:46:20,424:INFO:DummyClassifier(constant=None, random_state=43, strategy='prior')
2025-03-16 08:46:20,424:INFO:create_model() successfully completed......................................
2025-03-16 08:46:20,498:INFO:SubProcess create_model() end ==================================
2025-03-16 08:46:20,498:INFO:Creating metrics dataframe
2025-03-16 08:46:20,506:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning:

Styler.applymap has been deprecated. Use Styler.map instead.


2025-03-16 08:46:20,512:INFO:Initializing create_model()
2025-03-16 08:46:20,512:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DADF369180>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=43, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-16 08:46:20,512:INFO:Checking exceptions
2025-03-16 08:46:20,514:INFO:Importing libraries
2025-03-16 08:46:20,514:INFO:Copying training dataset
2025-03-16 08:46:20,518:INFO:Defining folds
2025-03-16 08:46:20,518:INFO:Declaring metric variables
2025-03-16 08:46:20,518:INFO:Importing untrained model
2025-03-16 08:46:20,518:INFO:Declaring custom model
2025-03-16 08:46:20,519:INFO:Gradient Boosting Classifier Imported successfully
2025-03-16 08:46:20,521:INFO:Cross validation set to False
2025-03-16 08:46:20,521:INFO:Fitting Model
2025-03-16 08:46:21,284:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=43, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-03-16 08:46:21,285:INFO:create_model() successfully completed......................................
2025-03-16 08:46:21,379:INFO:_master_model_container: 28
2025-03-16 08:46:21,379:INFO:_display_container: 3
2025-03-16 08:46:21,380:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=43, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-03-16 08:46:21,380:INFO:compare_models() successfully completed......................................
2025-03-16 08:48:52,344:INFO:Initializing compare_models()
2025-03-16 08:48:52,344:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DADF369180>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001DADF369180>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2025-03-16 08:48:52,344:INFO:Checking exceptions
2025-03-16 08:48:52,346:INFO:Preparing display monitor
2025-03-16 08:48:52,364:INFO:Initializing Logistic Regression
2025-03-16 08:48:52,364:INFO:Total runtime is 0.0 minutes
2025-03-16 08:48:52,367:INFO:SubProcess create_model() called ==================================
2025-03-16 08:48:52,368:INFO:Initializing create_model()
2025-03-16 08:48:52,368:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DADF369180>, estimator=lr, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DA9B5C8CA0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-16 08:48:52,368:INFO:Checking exceptions
2025-03-16 08:48:52,368:INFO:Importing libraries
2025-03-16 08:48:52,368:INFO:Copying training dataset
2025-03-16 08:48:52,375:INFO:Defining folds
2025-03-16 08:48:52,375:INFO:Declaring metric variables
2025-03-16 08:48:52,380:INFO:Importing untrained model
2025-03-16 08:48:52,385:INFO:Logistic Regression Imported successfully
2025-03-16 08:48:52,393:INFO:Starting cross validation
2025-03-16 08:48:52,398:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-03-16 08:48:52,680:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:52,686:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:52,695:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:52,706:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:52,706:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:52,712:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:52,713:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:52,714:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:52,717:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:52,718:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:52,719:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:52,719:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:52,724:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:52,725:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:52,734:INFO:Calculating mean and std
2025-03-16 08:48:52,734:INFO:Creating metrics dataframe
2025-03-16 08:48:52,736:INFO:Uploading results into container
2025-03-16 08:48:52,736:INFO:Uploading model into container now
2025-03-16 08:48:52,736:INFO:_master_model_container: 29
2025-03-16 08:48:52,737:INFO:_display_container: 4
2025-03-16 08:48:52,737:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=43, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-03-16 08:48:52,737:INFO:create_model() successfully completed......................................
2025-03-16 08:48:52,818:INFO:SubProcess create_model() end ==================================
2025-03-16 08:48:52,818:INFO:Creating metrics dataframe
2025-03-16 08:48:52,823:INFO:Initializing K Neighbors Classifier
2025-03-16 08:48:52,823:INFO:Total runtime is 0.007651845614115397 minutes
2025-03-16 08:48:52,826:INFO:SubProcess create_model() called ==================================
2025-03-16 08:48:52,826:INFO:Initializing create_model()
2025-03-16 08:48:52,826:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DADF369180>, estimator=knn, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DA9B5C8CA0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-16 08:48:52,826:INFO:Checking exceptions
2025-03-16 08:48:52,826:INFO:Importing libraries
2025-03-16 08:48:52,826:INFO:Copying training dataset
2025-03-16 08:48:52,831:INFO:Defining folds
2025-03-16 08:48:52,831:INFO:Declaring metric variables
2025-03-16 08:48:52,833:INFO:Importing untrained model
2025-03-16 08:48:52,836:INFO:K Neighbors Classifier Imported successfully
2025-03-16 08:48:52,841:INFO:Starting cross validation
2025-03-16 08:48:52,844:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-03-16 08:48:53,167:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:53,172:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:53,174:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:53,178:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:53,178:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:53,180:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:53,184:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:53,185:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:53,190:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:53,222:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:53,227:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:53,232:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:53,232:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:53,238:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:53,244:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:53,257:INFO:Calculating mean and std
2025-03-16 08:48:53,257:INFO:Creating metrics dataframe
2025-03-16 08:48:53,259:INFO:Uploading results into container
2025-03-16 08:48:53,259:INFO:Uploading model into container now
2025-03-16 08:48:53,259:INFO:_master_model_container: 30
2025-03-16 08:48:53,259:INFO:_display_container: 4
2025-03-16 08:48:53,260:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-03-16 08:48:53,260:INFO:create_model() successfully completed......................................
2025-03-16 08:48:53,335:INFO:SubProcess create_model() end ==================================
2025-03-16 08:48:53,335:INFO:Creating metrics dataframe
2025-03-16 08:48:53,341:INFO:Initializing Naive Bayes
2025-03-16 08:48:53,341:INFO:Total runtime is 0.016295234362284344 minutes
2025-03-16 08:48:53,344:INFO:SubProcess create_model() called ==================================
2025-03-16 08:48:53,344:INFO:Initializing create_model()
2025-03-16 08:48:53,344:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DADF369180>, estimator=nb, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DA9B5C8CA0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-16 08:48:53,344:INFO:Checking exceptions
2025-03-16 08:48:53,344:INFO:Importing libraries
2025-03-16 08:48:53,344:INFO:Copying training dataset
2025-03-16 08:48:53,348:INFO:Defining folds
2025-03-16 08:48:53,348:INFO:Declaring metric variables
2025-03-16 08:48:53,350:INFO:Importing untrained model
2025-03-16 08:48:53,353:INFO:Naive Bayes Imported successfully
2025-03-16 08:48:53,359:INFO:Starting cross validation
2025-03-16 08:48:53,362:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-03-16 08:48:53,611:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:53,617:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:53,618:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:53,621:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:53,622:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:53,627:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:53,627:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:53,633:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:53,633:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:53,636:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:53,636:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:53,640:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:53,643:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:53,645:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:53,648:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:53,665:INFO:Calculating mean and std
2025-03-16 08:48:53,665:INFO:Creating metrics dataframe
2025-03-16 08:48:53,667:INFO:Uploading results into container
2025-03-16 08:48:53,668:INFO:Uploading model into container now
2025-03-16 08:48:53,668:INFO:_master_model_container: 31
2025-03-16 08:48:53,668:INFO:_display_container: 4
2025-03-16 08:48:53,668:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-03-16 08:48:53,668:INFO:create_model() successfully completed......................................
2025-03-16 08:48:53,746:INFO:SubProcess create_model() end ==================================
2025-03-16 08:48:53,747:INFO:Creating metrics dataframe
2025-03-16 08:48:53,753:INFO:Initializing Decision Tree Classifier
2025-03-16 08:48:53,753:INFO:Total runtime is 0.023161832491556802 minutes
2025-03-16 08:48:53,756:INFO:SubProcess create_model() called ==================================
2025-03-16 08:48:53,756:INFO:Initializing create_model()
2025-03-16 08:48:53,756:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DADF369180>, estimator=dt, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DA9B5C8CA0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-16 08:48:53,756:INFO:Checking exceptions
2025-03-16 08:48:53,756:INFO:Importing libraries
2025-03-16 08:48:53,756:INFO:Copying training dataset
2025-03-16 08:48:53,761:INFO:Defining folds
2025-03-16 08:48:53,761:INFO:Declaring metric variables
2025-03-16 08:48:53,763:INFO:Importing untrained model
2025-03-16 08:48:53,765:INFO:Decision Tree Classifier Imported successfully
2025-03-16 08:48:53,770:INFO:Starting cross validation
2025-03-16 08:48:53,774:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-03-16 08:48:54,042:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:54,047:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:54,051:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:54,053:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:54,054:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:54,055:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:54,056:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:54,058:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:54,060:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:54,061:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:54,062:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:54,064:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:54,065:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:54,066:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:54,069:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:54,092:INFO:Calculating mean and std
2025-03-16 08:48:54,093:INFO:Creating metrics dataframe
2025-03-16 08:48:54,095:INFO:Uploading results into container
2025-03-16 08:48:54,095:INFO:Uploading model into container now
2025-03-16 08:48:54,096:INFO:_master_model_container: 32
2025-03-16 08:48:54,096:INFO:_display_container: 4
2025-03-16 08:48:54,096:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=43, splitter='best')
2025-03-16 08:48:54,096:INFO:create_model() successfully completed......................................
2025-03-16 08:48:54,175:INFO:SubProcess create_model() end ==================================
2025-03-16 08:48:54,175:INFO:Creating metrics dataframe
2025-03-16 08:48:54,181:INFO:Initializing SVM - Linear Kernel
2025-03-16 08:48:54,181:INFO:Total runtime is 0.030280303955078122 minutes
2025-03-16 08:48:54,183:INFO:SubProcess create_model() called ==================================
2025-03-16 08:48:54,183:INFO:Initializing create_model()
2025-03-16 08:48:54,183:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DADF369180>, estimator=svm, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DA9B5C8CA0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-16 08:48:54,184:INFO:Checking exceptions
2025-03-16 08:48:54,184:INFO:Importing libraries
2025-03-16 08:48:54,184:INFO:Copying training dataset
2025-03-16 08:48:54,188:INFO:Defining folds
2025-03-16 08:48:54,188:INFO:Declaring metric variables
2025-03-16 08:48:54,190:INFO:Importing untrained model
2025-03-16 08:48:54,193:INFO:SVM - Linear Kernel Imported successfully
2025-03-16 08:48:54,198:INFO:Starting cross validation
2025-03-16 08:48:54,201:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-03-16 08:48:54,474:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:54,475:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:54,479:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:54,480:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:54,480:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:54,481:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:54,485:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:54,485:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:54,486:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:54,486:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:54,491:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:54,494:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:54,496:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:54,504:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:54,510:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:54,534:INFO:Calculating mean and std
2025-03-16 08:48:54,534:INFO:Creating metrics dataframe
2025-03-16 08:48:54,536:INFO:Uploading results into container
2025-03-16 08:48:54,537:INFO:Uploading model into container now
2025-03-16 08:48:54,537:INFO:_master_model_container: 33
2025-03-16 08:48:54,537:INFO:_display_container: 4
2025-03-16 08:48:54,538:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=43, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-03-16 08:48:54,538:INFO:create_model() successfully completed......................................
2025-03-16 08:48:54,616:INFO:SubProcess create_model() end ==================================
2025-03-16 08:48:54,616:INFO:Creating metrics dataframe
2025-03-16 08:48:54,622:INFO:Initializing Ridge Classifier
2025-03-16 08:48:54,622:INFO:Total runtime is 0.037638282775878905 minutes
2025-03-16 08:48:54,625:INFO:SubProcess create_model() called ==================================
2025-03-16 08:48:54,625:INFO:Initializing create_model()
2025-03-16 08:48:54,625:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DADF369180>, estimator=ridge, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DA9B5C8CA0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-16 08:48:54,625:INFO:Checking exceptions
2025-03-16 08:48:54,625:INFO:Importing libraries
2025-03-16 08:48:54,625:INFO:Copying training dataset
2025-03-16 08:48:54,630:INFO:Defining folds
2025-03-16 08:48:54,630:INFO:Declaring metric variables
2025-03-16 08:48:54,633:INFO:Importing untrained model
2025-03-16 08:48:54,635:INFO:Ridge Classifier Imported successfully
2025-03-16 08:48:54,640:INFO:Starting cross validation
2025-03-16 08:48:54,644:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-03-16 08:48:54,913:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:54,918:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:54,919:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:54,921:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:54,923:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:54,924:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:54,924:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:54,925:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:54,927:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:54,929:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:54,930:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:54,932:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:54,934:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:54,939:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:54,940:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:54,961:INFO:Calculating mean and std
2025-03-16 08:48:54,962:INFO:Creating metrics dataframe
2025-03-16 08:48:54,964:INFO:Uploading results into container
2025-03-16 08:48:54,964:INFO:Uploading model into container now
2025-03-16 08:48:54,964:INFO:_master_model_container: 34
2025-03-16 08:48:54,964:INFO:_display_container: 4
2025-03-16 08:48:54,965:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=43, solver='auto',
                tol=0.0001)
2025-03-16 08:48:54,965:INFO:create_model() successfully completed......................................
2025-03-16 08:48:55,046:INFO:SubProcess create_model() end ==================================
2025-03-16 08:48:55,046:INFO:Creating metrics dataframe
2025-03-16 08:48:55,053:INFO:Initializing Random Forest Classifier
2025-03-16 08:48:55,053:INFO:Total runtime is 0.0448186715443929 minutes
2025-03-16 08:48:55,055:INFO:SubProcess create_model() called ==================================
2025-03-16 08:48:55,056:INFO:Initializing create_model()
2025-03-16 08:48:55,056:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DADF369180>, estimator=rf, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DA9B5C8CA0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-16 08:48:55,056:INFO:Checking exceptions
2025-03-16 08:48:55,056:INFO:Importing libraries
2025-03-16 08:48:55,056:INFO:Copying training dataset
2025-03-16 08:48:55,061:INFO:Defining folds
2025-03-16 08:48:55,061:INFO:Declaring metric variables
2025-03-16 08:48:55,063:INFO:Importing untrained model
2025-03-16 08:48:55,066:INFO:Random Forest Classifier Imported successfully
2025-03-16 08:48:55,071:INFO:Starting cross validation
2025-03-16 08:48:55,074:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-03-16 08:48:55,581:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:55,582:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:55,587:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:55,589:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:55,594:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:55,595:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:55,597:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:55,603:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:55,611:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:55,612:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:55,612:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:55,617:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:55,618:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:55,622:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:55,624:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:55,637:INFO:Calculating mean and std
2025-03-16 08:48:55,638:INFO:Creating metrics dataframe
2025-03-16 08:48:55,640:INFO:Uploading results into container
2025-03-16 08:48:55,640:INFO:Uploading model into container now
2025-03-16 08:48:55,640:INFO:_master_model_container: 35
2025-03-16 08:48:55,641:INFO:_display_container: 4
2025-03-16 08:48:55,641:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=43, verbose=0,
                       warm_start=False)
2025-03-16 08:48:55,641:INFO:create_model() successfully completed......................................
2025-03-16 08:48:55,754:INFO:SubProcess create_model() end ==================================
2025-03-16 08:48:55,754:INFO:Creating metrics dataframe
2025-03-16 08:48:55,760:INFO:Initializing Quadratic Discriminant Analysis
2025-03-16 08:48:55,760:INFO:Total runtime is 0.056611541906992593 minutes
2025-03-16 08:48:55,763:INFO:SubProcess create_model() called ==================================
2025-03-16 08:48:55,763:INFO:Initializing create_model()
2025-03-16 08:48:55,763:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DADF369180>, estimator=qda, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DA9B5C8CA0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-16 08:48:55,763:INFO:Checking exceptions
2025-03-16 08:48:55,763:INFO:Importing libraries
2025-03-16 08:48:55,763:INFO:Copying training dataset
2025-03-16 08:48:55,767:INFO:Defining folds
2025-03-16 08:48:55,768:INFO:Declaring metric variables
2025-03-16 08:48:55,770:INFO:Importing untrained model
2025-03-16 08:48:55,772:INFO:Quadratic Discriminant Analysis Imported successfully
2025-03-16 08:48:55,778:INFO:Starting cross validation
2025-03-16 08:48:55,781:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-03-16 08:48:56,019:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-16 08:48:56,027:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-16 08:48:56,028:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-16 08:48:56,029:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-16 08:48:56,033:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-16 08:48:56,087:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:56,089:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:56,089:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:56,094:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:56,095:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:56,097:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:56,100:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:56,100:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:56,101:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:56,103:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:56,105:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:56,107:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:56,110:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:56,112:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:56,126:INFO:Calculating mean and std
2025-03-16 08:48:56,126:INFO:Creating metrics dataframe
2025-03-16 08:48:56,128:INFO:Uploading results into container
2025-03-16 08:48:56,129:INFO:Uploading model into container now
2025-03-16 08:48:56,129:INFO:_master_model_container: 36
2025-03-16 08:48:56,129:INFO:_display_container: 4
2025-03-16 08:48:56,130:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-03-16 08:48:56,130:INFO:create_model() successfully completed......................................
2025-03-16 08:48:56,217:INFO:SubProcess create_model() end ==================================
2025-03-16 08:48:56,217:INFO:Creating metrics dataframe
2025-03-16 08:48:56,224:INFO:Initializing Ada Boost Classifier
2025-03-16 08:48:56,224:INFO:Total runtime is 0.06433114210764566 minutes
2025-03-16 08:48:56,227:INFO:SubProcess create_model() called ==================================
2025-03-16 08:48:56,227:INFO:Initializing create_model()
2025-03-16 08:48:56,227:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DADF369180>, estimator=ada, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DA9B5C8CA0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-16 08:48:56,227:INFO:Checking exceptions
2025-03-16 08:48:56,227:INFO:Importing libraries
2025-03-16 08:48:56,227:INFO:Copying training dataset
2025-03-16 08:48:56,232:INFO:Defining folds
2025-03-16 08:48:56,233:INFO:Declaring metric variables
2025-03-16 08:48:56,235:INFO:Importing untrained model
2025-03-16 08:48:56,237:INFO:Ada Boost Classifier Imported successfully
2025-03-16 08:48:56,243:INFO:Starting cross validation
2025-03-16 08:48:56,247:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-03-16 08:48:56,491:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-16 08:48:56,497:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-16 08:48:56,504:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-16 08:48:56,511:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-16 08:48:56,514:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-16 08:48:56,752:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:56,756:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:56,760:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:56,762:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:56,763:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:56,764:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:56,765:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:56,766:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:56,768:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:56,769:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:56,769:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:56,771:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:56,773:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:56,776:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:56,776:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:56,789:INFO:Calculating mean and std
2025-03-16 08:48:56,789:INFO:Creating metrics dataframe
2025-03-16 08:48:56,792:INFO:Uploading results into container
2025-03-16 08:48:56,792:INFO:Uploading model into container now
2025-03-16 08:48:56,792:INFO:_master_model_container: 37
2025-03-16 08:48:56,793:INFO:_display_container: 4
2025-03-16 08:48:56,793:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=43)
2025-03-16 08:48:56,793:INFO:create_model() successfully completed......................................
2025-03-16 08:48:56,881:INFO:SubProcess create_model() end ==================================
2025-03-16 08:48:56,882:INFO:Creating metrics dataframe
2025-03-16 08:48:56,889:INFO:Initializing Gradient Boosting Classifier
2025-03-16 08:48:56,889:INFO:Total runtime is 0.07541617552439371 minutes
2025-03-16 08:48:56,891:INFO:SubProcess create_model() called ==================================
2025-03-16 08:48:56,891:INFO:Initializing create_model()
2025-03-16 08:48:56,891:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DADF369180>, estimator=gbc, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DA9B5C8CA0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-16 08:48:56,892:INFO:Checking exceptions
2025-03-16 08:48:56,892:INFO:Importing libraries
2025-03-16 08:48:56,892:INFO:Copying training dataset
2025-03-16 08:48:56,896:INFO:Defining folds
2025-03-16 08:48:56,896:INFO:Declaring metric variables
2025-03-16 08:48:56,898:INFO:Importing untrained model
2025-03-16 08:48:56,901:INFO:Gradient Boosting Classifier Imported successfully
2025-03-16 08:48:56,909:INFO:Starting cross validation
2025-03-16 08:48:56,912:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-03-16 08:48:57,702:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:57,703:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:57,706:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:57,706:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:57,708:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:57,708:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:57,711:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:57,713:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:57,714:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:57,715:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:57,717:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:57,719:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:57,730:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:57,735:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:57,741:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:57,758:INFO:Calculating mean and std
2025-03-16 08:48:57,759:INFO:Creating metrics dataframe
2025-03-16 08:48:57,761:INFO:Uploading results into container
2025-03-16 08:48:57,761:INFO:Uploading model into container now
2025-03-16 08:48:57,762:INFO:_master_model_container: 38
2025-03-16 08:48:57,762:INFO:_display_container: 4
2025-03-16 08:48:57,762:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=43, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-03-16 08:48:57,762:INFO:create_model() successfully completed......................................
2025-03-16 08:48:57,840:INFO:SubProcess create_model() end ==================================
2025-03-16 08:48:57,840:INFO:Creating metrics dataframe
2025-03-16 08:48:57,847:INFO:Initializing Linear Discriminant Analysis
2025-03-16 08:48:57,847:INFO:Total runtime is 0.09138676325480143 minutes
2025-03-16 08:48:57,849:INFO:SubProcess create_model() called ==================================
2025-03-16 08:48:57,850:INFO:Initializing create_model()
2025-03-16 08:48:57,850:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DADF369180>, estimator=lda, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DA9B5C8CA0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-16 08:48:57,850:INFO:Checking exceptions
2025-03-16 08:48:57,850:INFO:Importing libraries
2025-03-16 08:48:57,850:INFO:Copying training dataset
2025-03-16 08:48:57,855:INFO:Defining folds
2025-03-16 08:48:57,855:INFO:Declaring metric variables
2025-03-16 08:48:57,857:INFO:Importing untrained model
2025-03-16 08:48:57,860:INFO:Linear Discriminant Analysis Imported successfully
2025-03-16 08:48:57,865:INFO:Starting cross validation
2025-03-16 08:48:57,868:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-03-16 08:48:58,120:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:58,126:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:58,132:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:58,135:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:58,137:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:58,137:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:58,139:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:58,140:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:58,142:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:58,143:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:58,145:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:58,146:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:58,148:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:58,148:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:58,151:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:58,170:INFO:Calculating mean and std
2025-03-16 08:48:58,171:INFO:Creating metrics dataframe
2025-03-16 08:48:58,173:INFO:Uploading results into container
2025-03-16 08:48:58,173:INFO:Uploading model into container now
2025-03-16 08:48:58,173:INFO:_master_model_container: 39
2025-03-16 08:48:58,173:INFO:_display_container: 4
2025-03-16 08:48:58,174:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-03-16 08:48:58,174:INFO:create_model() successfully completed......................................
2025-03-16 08:48:58,250:INFO:SubProcess create_model() end ==================================
2025-03-16 08:48:58,250:INFO:Creating metrics dataframe
2025-03-16 08:48:58,257:INFO:Initializing Extra Trees Classifier
2025-03-16 08:48:58,257:INFO:Total runtime is 0.09822201331456501 minutes
2025-03-16 08:48:58,260:INFO:SubProcess create_model() called ==================================
2025-03-16 08:48:58,260:INFO:Initializing create_model()
2025-03-16 08:48:58,260:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DADF369180>, estimator=et, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DA9B5C8CA0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-16 08:48:58,260:INFO:Checking exceptions
2025-03-16 08:48:58,260:INFO:Importing libraries
2025-03-16 08:48:58,260:INFO:Copying training dataset
2025-03-16 08:48:58,264:INFO:Defining folds
2025-03-16 08:48:58,264:INFO:Declaring metric variables
2025-03-16 08:48:58,266:INFO:Importing untrained model
2025-03-16 08:48:58,271:INFO:Extra Trees Classifier Imported successfully
2025-03-16 08:48:58,276:INFO:Starting cross validation
2025-03-16 08:48:58,279:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-03-16 08:48:58,745:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:58,745:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:58,751:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:58,751:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:58,757:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:58,759:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:58,762:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:58,771:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:58,776:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:58,777:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:58,778:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:58,782:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:58,783:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:58,788:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:58,788:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:58,801:INFO:Calculating mean and std
2025-03-16 08:48:58,801:INFO:Creating metrics dataframe
2025-03-16 08:48:58,804:INFO:Uploading results into container
2025-03-16 08:48:58,804:INFO:Uploading model into container now
2025-03-16 08:48:58,805:INFO:_master_model_container: 40
2025-03-16 08:48:58,805:INFO:_display_container: 4
2025-03-16 08:48:58,805:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=43, verbose=0,
                     warm_start=False)
2025-03-16 08:48:58,805:INFO:create_model() successfully completed......................................
2025-03-16 08:48:58,890:INFO:SubProcess create_model() end ==================================
2025-03-16 08:48:58,890:INFO:Creating metrics dataframe
2025-03-16 08:48:58,898:INFO:Initializing Light Gradient Boosting Machine
2025-03-16 08:48:58,898:INFO:Total runtime is 0.10889875094095865 minutes
2025-03-16 08:48:58,901:INFO:SubProcess create_model() called ==================================
2025-03-16 08:48:58,901:INFO:Initializing create_model()
2025-03-16 08:48:58,901:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DADF369180>, estimator=lightgbm, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DA9B5C8CA0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-16 08:48:58,901:INFO:Checking exceptions
2025-03-16 08:48:58,901:INFO:Importing libraries
2025-03-16 08:48:58,901:INFO:Copying training dataset
2025-03-16 08:48:58,905:INFO:Defining folds
2025-03-16 08:48:58,905:INFO:Declaring metric variables
2025-03-16 08:48:58,907:INFO:Importing untrained model
2025-03-16 08:48:58,910:INFO:Light Gradient Boosting Machine Imported successfully
2025-03-16 08:48:58,917:INFO:Starting cross validation
2025-03-16 08:48:58,920:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-03-16 08:48:59,448:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:59,452:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:59,458:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:59,461:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:59,461:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:59,463:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:59,467:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:59,470:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:59,470:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:59,472:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:59,479:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:59,481:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:59,591:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:59,598:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:59,606:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:48:59,626:INFO:Calculating mean and std
2025-03-16 08:48:59,626:INFO:Creating metrics dataframe
2025-03-16 08:48:59,629:INFO:Uploading results into container
2025-03-16 08:48:59,629:INFO:Uploading model into container now
2025-03-16 08:48:59,630:INFO:_master_model_container: 41
2025-03-16 08:48:59,630:INFO:_display_container: 4
2025-03-16 08:48:59,631:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=43, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-03-16 08:48:59,631:INFO:create_model() successfully completed......................................
2025-03-16 08:48:59,723:INFO:SubProcess create_model() end ==================================
2025-03-16 08:48:59,723:INFO:Creating metrics dataframe
2025-03-16 08:48:59,731:INFO:Initializing Dummy Classifier
2025-03-16 08:48:59,731:INFO:Total runtime is 0.12278445561726886 minutes
2025-03-16 08:48:59,733:INFO:SubProcess create_model() called ==================================
2025-03-16 08:48:59,734:INFO:Initializing create_model()
2025-03-16 08:48:59,734:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DADF369180>, estimator=dummy, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DA9B5C8CA0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-16 08:48:59,734:INFO:Checking exceptions
2025-03-16 08:48:59,734:INFO:Importing libraries
2025-03-16 08:48:59,734:INFO:Copying training dataset
2025-03-16 08:48:59,738:INFO:Defining folds
2025-03-16 08:48:59,738:INFO:Declaring metric variables
2025-03-16 08:48:59,741:INFO:Importing untrained model
2025-03-16 08:48:59,743:INFO:Dummy Classifier Imported successfully
2025-03-16 08:48:59,749:INFO:Starting cross validation
2025-03-16 08:48:59,752:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-03-16 08:49:00,000:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:00,004:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:00,006:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:00,009:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:00,010:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:00,010:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-16 08:49:00,013:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:00,013:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-16 08:49:00,014:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:00,016:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:00,016:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:00,017:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:00,020:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-16 08:49:00,021:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:00,023:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:00,024:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:00,025:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-16 08:49:00,028:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-16 08:49:00,028:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:00,030:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:00,053:INFO:Calculating mean and std
2025-03-16 08:49:00,053:INFO:Creating metrics dataframe
2025-03-16 08:49:00,056:INFO:Uploading results into container
2025-03-16 08:49:00,056:INFO:Uploading model into container now
2025-03-16 08:49:00,057:INFO:_master_model_container: 42
2025-03-16 08:49:00,057:INFO:_display_container: 4
2025-03-16 08:49:00,057:INFO:DummyClassifier(constant=None, random_state=43, strategy='prior')
2025-03-16 08:49:00,057:INFO:create_model() successfully completed......................................
2025-03-16 08:49:00,140:INFO:SubProcess create_model() end ==================================
2025-03-16 08:49:00,141:INFO:Creating metrics dataframe
2025-03-16 08:49:00,149:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning:

Styler.applymap has been deprecated. Use Styler.map instead.


2025-03-16 08:49:00,155:INFO:Initializing create_model()
2025-03-16 08:49:00,155:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DADF369180>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=43, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-16 08:49:00,155:INFO:Checking exceptions
2025-03-16 08:49:00,156:INFO:Importing libraries
2025-03-16 08:49:00,156:INFO:Copying training dataset
2025-03-16 08:49:00,160:INFO:Defining folds
2025-03-16 08:49:00,160:INFO:Declaring metric variables
2025-03-16 08:49:00,160:INFO:Importing untrained model
2025-03-16 08:49:00,161:INFO:Declaring custom model
2025-03-16 08:49:00,161:INFO:Gradient Boosting Classifier Imported successfully
2025-03-16 08:49:00,163:INFO:Cross validation set to False
2025-03-16 08:49:00,163:INFO:Fitting Model
2025-03-16 08:49:00,936:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=43, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-03-16 08:49:00,936:INFO:create_model() successfully completed......................................
2025-03-16 08:49:01,035:INFO:_master_model_container: 42
2025-03-16 08:49:01,035:INFO:_display_container: 4
2025-03-16 08:49:01,036:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=43, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-03-16 08:49:01,036:INFO:compare_models() successfully completed......................................
2025-03-16 08:49:16,557:INFO:Initializing compare_models()
2025-03-16 08:49:16,557:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DADF369180>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001DADF369180>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2025-03-16 08:49:16,558:INFO:Checking exceptions
2025-03-16 08:49:16,560:INFO:Preparing display monitor
2025-03-16 08:49:16,578:INFO:Initializing Logistic Regression
2025-03-16 08:49:16,578:INFO:Total runtime is 0.0 minutes
2025-03-16 08:49:16,582:INFO:SubProcess create_model() called ==================================
2025-03-16 08:49:16,582:INFO:Initializing create_model()
2025-03-16 08:49:16,582:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DADF369180>, estimator=lr, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DADF4A2410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-16 08:49:16,582:INFO:Checking exceptions
2025-03-16 08:49:16,582:INFO:Importing libraries
2025-03-16 08:49:16,582:INFO:Copying training dataset
2025-03-16 08:49:16,586:INFO:Defining folds
2025-03-16 08:49:16,586:INFO:Declaring metric variables
2025-03-16 08:49:16,588:INFO:Importing untrained model
2025-03-16 08:49:16,591:INFO:Logistic Regression Imported successfully
2025-03-16 08:49:16,596:INFO:Starting cross validation
2025-03-16 08:49:16,599:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-03-16 08:49:16,887:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:16,893:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:16,899:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:16,899:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:16,900:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:16,900:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:16,900:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:16,905:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:16,905:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:16,905:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:16,907:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:16,910:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:16,910:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:16,911:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:16,914:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:16,935:INFO:Calculating mean and std
2025-03-16 08:49:16,936:INFO:Creating metrics dataframe
2025-03-16 08:49:16,937:INFO:Uploading results into container
2025-03-16 08:49:16,938:INFO:Uploading model into container now
2025-03-16 08:49:16,938:INFO:_master_model_container: 43
2025-03-16 08:49:16,938:INFO:_display_container: 5
2025-03-16 08:49:16,938:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=43, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-03-16 08:49:16,938:INFO:create_model() successfully completed......................................
2025-03-16 08:49:17,021:INFO:SubProcess create_model() end ==================================
2025-03-16 08:49:17,022:INFO:Creating metrics dataframe
2025-03-16 08:49:17,026:INFO:Initializing K Neighbors Classifier
2025-03-16 08:49:17,026:INFO:Total runtime is 0.007454601923624674 minutes
2025-03-16 08:49:17,029:INFO:SubProcess create_model() called ==================================
2025-03-16 08:49:17,029:INFO:Initializing create_model()
2025-03-16 08:49:17,029:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DADF369180>, estimator=knn, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DADF4A2410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-16 08:49:17,029:INFO:Checking exceptions
2025-03-16 08:49:17,029:INFO:Importing libraries
2025-03-16 08:49:17,029:INFO:Copying training dataset
2025-03-16 08:49:17,034:INFO:Defining folds
2025-03-16 08:49:17,034:INFO:Declaring metric variables
2025-03-16 08:49:17,037:INFO:Importing untrained model
2025-03-16 08:49:17,039:INFO:K Neighbors Classifier Imported successfully
2025-03-16 08:49:17,044:INFO:Starting cross validation
2025-03-16 08:49:17,047:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-03-16 08:49:17,360:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:17,366:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:17,371:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:17,378:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:17,379:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:17,385:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:17,385:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:17,390:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:17,392:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:17,440:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:17,446:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:17,449:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:17,453:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:17,455:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:17,459:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:17,475:INFO:Calculating mean and std
2025-03-16 08:49:17,475:INFO:Creating metrics dataframe
2025-03-16 08:49:17,477:INFO:Uploading results into container
2025-03-16 08:49:17,477:INFO:Uploading model into container now
2025-03-16 08:49:17,477:INFO:_master_model_container: 44
2025-03-16 08:49:17,477:INFO:_display_container: 5
2025-03-16 08:49:17,477:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-03-16 08:49:17,478:INFO:create_model() successfully completed......................................
2025-03-16 08:49:17,554:INFO:SubProcess create_model() end ==================================
2025-03-16 08:49:17,554:INFO:Creating metrics dataframe
2025-03-16 08:49:17,559:INFO:Initializing Naive Bayes
2025-03-16 08:49:17,560:INFO:Total runtime is 0.016362651189168295 minutes
2025-03-16 08:49:17,562:INFO:SubProcess create_model() called ==================================
2025-03-16 08:49:17,562:INFO:Initializing create_model()
2025-03-16 08:49:17,562:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DADF369180>, estimator=nb, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DADF4A2410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-16 08:49:17,562:INFO:Checking exceptions
2025-03-16 08:49:17,562:INFO:Importing libraries
2025-03-16 08:49:17,563:INFO:Copying training dataset
2025-03-16 08:49:17,567:INFO:Defining folds
2025-03-16 08:49:17,567:INFO:Declaring metric variables
2025-03-16 08:49:17,570:INFO:Importing untrained model
2025-03-16 08:49:17,573:INFO:Naive Bayes Imported successfully
2025-03-16 08:49:17,578:INFO:Starting cross validation
2025-03-16 08:49:17,581:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-03-16 08:49:17,849:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:17,851:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:17,853:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:17,854:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:17,857:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:17,859:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:17,859:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:17,859:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:17,860:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:17,862:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:17,864:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:17,864:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:17,865:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:17,869:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:17,870:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:17,885:INFO:Calculating mean and std
2025-03-16 08:49:17,886:INFO:Creating metrics dataframe
2025-03-16 08:49:17,887:INFO:Uploading results into container
2025-03-16 08:49:17,888:INFO:Uploading model into container now
2025-03-16 08:49:17,888:INFO:_master_model_container: 45
2025-03-16 08:49:17,888:INFO:_display_container: 5
2025-03-16 08:49:17,888:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-03-16 08:49:17,888:INFO:create_model() successfully completed......................................
2025-03-16 08:49:17,971:INFO:SubProcess create_model() end ==================================
2025-03-16 08:49:17,972:INFO:Creating metrics dataframe
2025-03-16 08:49:17,977:INFO:Initializing Decision Tree Classifier
2025-03-16 08:49:17,977:INFO:Total runtime is 0.02331531047821045 minutes
2025-03-16 08:49:17,979:INFO:SubProcess create_model() called ==================================
2025-03-16 08:49:17,980:INFO:Initializing create_model()
2025-03-16 08:49:17,980:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DADF369180>, estimator=dt, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DADF4A2410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-16 08:49:17,980:INFO:Checking exceptions
2025-03-16 08:49:17,980:INFO:Importing libraries
2025-03-16 08:49:17,980:INFO:Copying training dataset
2025-03-16 08:49:17,984:INFO:Defining folds
2025-03-16 08:49:17,984:INFO:Declaring metric variables
2025-03-16 08:49:17,986:INFO:Importing untrained model
2025-03-16 08:49:17,989:INFO:Decision Tree Classifier Imported successfully
2025-03-16 08:49:17,995:INFO:Starting cross validation
2025-03-16 08:49:17,998:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-03-16 08:49:18,260:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:18,266:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:18,270:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:18,271:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:18,273:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:18,274:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:18,275:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:18,278:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:18,281:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:18,282:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:18,282:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:18,284:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:18,286:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:18,290:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:18,291:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:18,311:INFO:Calculating mean and std
2025-03-16 08:49:18,311:INFO:Creating metrics dataframe
2025-03-16 08:49:18,313:INFO:Uploading results into container
2025-03-16 08:49:18,314:INFO:Uploading model into container now
2025-03-16 08:49:18,314:INFO:_master_model_container: 46
2025-03-16 08:49:18,314:INFO:_display_container: 5
2025-03-16 08:49:18,314:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=43, splitter='best')
2025-03-16 08:49:18,315:INFO:create_model() successfully completed......................................
2025-03-16 08:49:18,391:INFO:SubProcess create_model() end ==================================
2025-03-16 08:49:18,391:INFO:Creating metrics dataframe
2025-03-16 08:49:18,396:INFO:Initializing SVM - Linear Kernel
2025-03-16 08:49:18,396:INFO:Total runtime is 0.030299826463063558 minutes
2025-03-16 08:49:18,399:INFO:SubProcess create_model() called ==================================
2025-03-16 08:49:18,399:INFO:Initializing create_model()
2025-03-16 08:49:18,399:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DADF369180>, estimator=svm, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DADF4A2410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-16 08:49:18,399:INFO:Checking exceptions
2025-03-16 08:49:18,399:INFO:Importing libraries
2025-03-16 08:49:18,399:INFO:Copying training dataset
2025-03-16 08:49:18,403:INFO:Defining folds
2025-03-16 08:49:18,403:INFO:Declaring metric variables
2025-03-16 08:49:18,405:INFO:Importing untrained model
2025-03-16 08:49:18,408:INFO:SVM - Linear Kernel Imported successfully
2025-03-16 08:49:18,413:INFO:Starting cross validation
2025-03-16 08:49:18,415:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-03-16 08:49:18,691:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:18,691:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:18,693:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:18,694:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:18,696:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:18,696:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:18,699:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:18,699:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:18,700:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:18,701:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:18,702:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:18,704:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:18,705:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:18,705:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:18,710:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:18,724:INFO:Calculating mean and std
2025-03-16 08:49:18,725:INFO:Creating metrics dataframe
2025-03-16 08:49:18,727:INFO:Uploading results into container
2025-03-16 08:49:18,727:INFO:Uploading model into container now
2025-03-16 08:49:18,727:INFO:_master_model_container: 47
2025-03-16 08:49:18,727:INFO:_display_container: 5
2025-03-16 08:49:18,728:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=43, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-03-16 08:49:18,728:INFO:create_model() successfully completed......................................
2025-03-16 08:49:18,805:INFO:SubProcess create_model() end ==================================
2025-03-16 08:49:18,805:INFO:Creating metrics dataframe
2025-03-16 08:49:18,810:INFO:Initializing Ridge Classifier
2025-03-16 08:49:18,811:INFO:Total runtime is 0.037201762199401855 minutes
2025-03-16 08:49:18,813:INFO:SubProcess create_model() called ==================================
2025-03-16 08:49:18,813:INFO:Initializing create_model()
2025-03-16 08:49:18,813:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DADF369180>, estimator=ridge, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DADF4A2410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-16 08:49:18,813:INFO:Checking exceptions
2025-03-16 08:49:18,813:INFO:Importing libraries
2025-03-16 08:49:18,814:INFO:Copying training dataset
2025-03-16 08:49:18,818:INFO:Defining folds
2025-03-16 08:49:18,818:INFO:Declaring metric variables
2025-03-16 08:49:18,820:INFO:Importing untrained model
2025-03-16 08:49:18,822:INFO:Ridge Classifier Imported successfully
2025-03-16 08:49:18,827:INFO:Starting cross validation
2025-03-16 08:49:18,830:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-03-16 08:49:19,091:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:19,092:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:19,095:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:19,097:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:19,097:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:19,097:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:19,100:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:19,102:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:19,102:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:19,103:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:19,103:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:19,106:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:19,107:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:19,108:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:19,113:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:19,135:INFO:Calculating mean and std
2025-03-16 08:49:19,136:INFO:Creating metrics dataframe
2025-03-16 08:49:19,137:INFO:Uploading results into container
2025-03-16 08:49:19,138:INFO:Uploading model into container now
2025-03-16 08:49:19,138:INFO:_master_model_container: 48
2025-03-16 08:49:19,138:INFO:_display_container: 5
2025-03-16 08:49:19,138:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=43, solver='auto',
                tol=0.0001)
2025-03-16 08:49:19,139:INFO:create_model() successfully completed......................................
2025-03-16 08:49:19,218:INFO:SubProcess create_model() end ==================================
2025-03-16 08:49:19,218:INFO:Creating metrics dataframe
2025-03-16 08:49:19,224:INFO:Initializing Random Forest Classifier
2025-03-16 08:49:19,224:INFO:Total runtime is 0.04408693313598633 minutes
2025-03-16 08:49:19,227:INFO:SubProcess create_model() called ==================================
2025-03-16 08:49:19,228:INFO:Initializing create_model()
2025-03-16 08:49:19,228:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DADF369180>, estimator=rf, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DADF4A2410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-16 08:49:19,228:INFO:Checking exceptions
2025-03-16 08:49:19,228:INFO:Importing libraries
2025-03-16 08:49:19,228:INFO:Copying training dataset
2025-03-16 08:49:19,232:INFO:Defining folds
2025-03-16 08:49:19,232:INFO:Declaring metric variables
2025-03-16 08:49:19,234:INFO:Importing untrained model
2025-03-16 08:49:19,237:INFO:Random Forest Classifier Imported successfully
2025-03-16 08:49:19,243:INFO:Starting cross validation
2025-03-16 08:49:19,246:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-03-16 08:49:19,760:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:19,760:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:19,761:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:19,762:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:19,766:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:19,766:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:19,770:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:19,770:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:19,771:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:19,771:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:19,775:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:19,776:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:19,776:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:19,780:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:19,786:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:19,800:INFO:Calculating mean and std
2025-03-16 08:49:19,800:INFO:Creating metrics dataframe
2025-03-16 08:49:19,802:INFO:Uploading results into container
2025-03-16 08:49:19,803:INFO:Uploading model into container now
2025-03-16 08:49:19,803:INFO:_master_model_container: 49
2025-03-16 08:49:19,803:INFO:_display_container: 5
2025-03-16 08:49:19,804:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=43, verbose=0,
                       warm_start=False)
2025-03-16 08:49:19,804:INFO:create_model() successfully completed......................................
2025-03-16 08:49:19,880:INFO:SubProcess create_model() end ==================================
2025-03-16 08:49:19,880:INFO:Creating metrics dataframe
2025-03-16 08:49:19,886:INFO:Initializing Quadratic Discriminant Analysis
2025-03-16 08:49:19,887:INFO:Total runtime is 0.05513407389322916 minutes
2025-03-16 08:49:19,889:INFO:SubProcess create_model() called ==================================
2025-03-16 08:49:19,889:INFO:Initializing create_model()
2025-03-16 08:49:19,889:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DADF369180>, estimator=qda, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DADF4A2410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-16 08:49:19,889:INFO:Checking exceptions
2025-03-16 08:49:19,889:INFO:Importing libraries
2025-03-16 08:49:19,889:INFO:Copying training dataset
2025-03-16 08:49:19,893:INFO:Defining folds
2025-03-16 08:49:19,893:INFO:Declaring metric variables
2025-03-16 08:49:19,896:INFO:Importing untrained model
2025-03-16 08:49:19,898:INFO:Quadratic Discriminant Analysis Imported successfully
2025-03-16 08:49:19,904:INFO:Starting cross validation
2025-03-16 08:49:19,907:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-03-16 08:49:20,091:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-16 08:49:20,109:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-16 08:49:20,115:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-16 08:49:20,117:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-16 08:49:20,119:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-16 08:49:20,150:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:20,156:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:20,161:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:20,174:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:20,176:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:20,178:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:20,179:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:20,181:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:20,182:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:20,184:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:20,187:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:20,188:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:20,190:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:20,191:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:20,197:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:20,213:INFO:Calculating mean and std
2025-03-16 08:49:20,214:INFO:Creating metrics dataframe
2025-03-16 08:49:20,215:INFO:Uploading results into container
2025-03-16 08:49:20,216:INFO:Uploading model into container now
2025-03-16 08:49:20,216:INFO:_master_model_container: 50
2025-03-16 08:49:20,216:INFO:_display_container: 5
2025-03-16 08:49:20,217:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-03-16 08:49:20,217:INFO:create_model() successfully completed......................................
2025-03-16 08:49:20,292:INFO:SubProcess create_model() end ==================================
2025-03-16 08:49:20,292:INFO:Creating metrics dataframe
2025-03-16 08:49:20,298:INFO:Initializing Ada Boost Classifier
2025-03-16 08:49:20,298:INFO:Total runtime is 0.0619997501373291 minutes
2025-03-16 08:49:20,301:INFO:SubProcess create_model() called ==================================
2025-03-16 08:49:20,302:INFO:Initializing create_model()
2025-03-16 08:49:20,302:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DADF369180>, estimator=ada, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DADF4A2410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-16 08:49:20,302:INFO:Checking exceptions
2025-03-16 08:49:20,302:INFO:Importing libraries
2025-03-16 08:49:20,302:INFO:Copying training dataset
2025-03-16 08:49:20,306:INFO:Defining folds
2025-03-16 08:49:20,306:INFO:Declaring metric variables
2025-03-16 08:49:20,308:INFO:Importing untrained model
2025-03-16 08:49:20,311:INFO:Ada Boost Classifier Imported successfully
2025-03-16 08:49:20,315:INFO:Starting cross validation
2025-03-16 08:49:20,320:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-03-16 08:49:20,505:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-16 08:49:20,511:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-16 08:49:20,521:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-16 08:49:20,529:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-16 08:49:20,531:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-16 08:49:20,767:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:20,768:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:20,773:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:20,774:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:20,776:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:20,778:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:20,779:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:20,781:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:20,784:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:20,786:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:20,786:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:20,791:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:20,792:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:20,797:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:20,798:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:20,813:INFO:Calculating mean and std
2025-03-16 08:49:20,814:INFO:Creating metrics dataframe
2025-03-16 08:49:20,816:INFO:Uploading results into container
2025-03-16 08:49:20,816:INFO:Uploading model into container now
2025-03-16 08:49:20,816:INFO:_master_model_container: 51
2025-03-16 08:49:20,816:INFO:_display_container: 5
2025-03-16 08:49:20,817:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=43)
2025-03-16 08:49:20,817:INFO:create_model() successfully completed......................................
2025-03-16 08:49:20,893:INFO:SubProcess create_model() end ==================================
2025-03-16 08:49:20,893:INFO:Creating metrics dataframe
2025-03-16 08:49:20,899:INFO:Initializing Gradient Boosting Classifier
2025-03-16 08:49:20,899:INFO:Total runtime is 0.07200233538945516 minutes
2025-03-16 08:49:20,902:INFO:SubProcess create_model() called ==================================
2025-03-16 08:49:20,902:INFO:Initializing create_model()
2025-03-16 08:49:20,903:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DADF369180>, estimator=gbc, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DADF4A2410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-16 08:49:20,903:INFO:Checking exceptions
2025-03-16 08:49:20,903:INFO:Importing libraries
2025-03-16 08:49:20,903:INFO:Copying training dataset
2025-03-16 08:49:20,907:INFO:Defining folds
2025-03-16 08:49:20,907:INFO:Declaring metric variables
2025-03-16 08:49:20,909:INFO:Importing untrained model
2025-03-16 08:49:20,912:INFO:Gradient Boosting Classifier Imported successfully
2025-03-16 08:49:20,916:INFO:Starting cross validation
2025-03-16 08:49:20,919:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-03-16 08:49:21,680:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:21,686:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:21,691:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:21,698:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:21,699:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:21,701:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:21,704:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:21,705:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:21,706:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:21,709:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:21,710:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:21,712:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:21,714:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:21,719:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:21,725:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:21,741:INFO:Calculating mean and std
2025-03-16 08:49:21,742:INFO:Creating metrics dataframe
2025-03-16 08:49:21,743:INFO:Uploading results into container
2025-03-16 08:49:21,744:INFO:Uploading model into container now
2025-03-16 08:49:21,744:INFO:_master_model_container: 52
2025-03-16 08:49:21,744:INFO:_display_container: 5
2025-03-16 08:49:21,745:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=43, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-03-16 08:49:21,745:INFO:create_model() successfully completed......................................
2025-03-16 08:49:21,821:INFO:SubProcess create_model() end ==================================
2025-03-16 08:49:21,822:INFO:Creating metrics dataframe
2025-03-16 08:49:21,828:INFO:Initializing Linear Discriminant Analysis
2025-03-16 08:49:21,829:INFO:Total runtime is 0.0875054399172465 minutes
2025-03-16 08:49:21,831:INFO:SubProcess create_model() called ==================================
2025-03-16 08:49:21,831:INFO:Initializing create_model()
2025-03-16 08:49:21,831:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DADF369180>, estimator=lda, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DADF4A2410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-16 08:49:21,831:INFO:Checking exceptions
2025-03-16 08:49:21,831:INFO:Importing libraries
2025-03-16 08:49:21,831:INFO:Copying training dataset
2025-03-16 08:49:21,835:INFO:Defining folds
2025-03-16 08:49:21,835:INFO:Declaring metric variables
2025-03-16 08:49:21,837:INFO:Importing untrained model
2025-03-16 08:49:21,840:INFO:Linear Discriminant Analysis Imported successfully
2025-03-16 08:49:21,844:INFO:Starting cross validation
2025-03-16 08:49:21,847:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-03-16 08:49:22,097:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:22,103:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:22,106:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:22,108:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:22,110:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:22,110:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:22,111:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:22,116:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:22,117:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:22,117:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:22,118:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:22,122:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:22,124:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:22,125:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:22,131:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:22,152:INFO:Calculating mean and std
2025-03-16 08:49:22,153:INFO:Creating metrics dataframe
2025-03-16 08:49:22,155:INFO:Uploading results into container
2025-03-16 08:49:22,155:INFO:Uploading model into container now
2025-03-16 08:49:22,156:INFO:_master_model_container: 53
2025-03-16 08:49:22,156:INFO:_display_container: 5
2025-03-16 08:49:22,156:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-03-16 08:49:22,156:INFO:create_model() successfully completed......................................
2025-03-16 08:49:22,233:INFO:SubProcess create_model() end ==================================
2025-03-16 08:49:22,233:INFO:Creating metrics dataframe
2025-03-16 08:49:22,240:INFO:Initializing Extra Trees Classifier
2025-03-16 08:49:22,240:INFO:Total runtime is 0.09436381657918294 minutes
2025-03-16 08:49:22,242:INFO:SubProcess create_model() called ==================================
2025-03-16 08:49:22,242:INFO:Initializing create_model()
2025-03-16 08:49:22,242:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DADF369180>, estimator=et, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DADF4A2410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-16 08:49:22,243:INFO:Checking exceptions
2025-03-16 08:49:22,243:INFO:Importing libraries
2025-03-16 08:49:22,243:INFO:Copying training dataset
2025-03-16 08:49:22,247:INFO:Defining folds
2025-03-16 08:49:22,247:INFO:Declaring metric variables
2025-03-16 08:49:22,249:INFO:Importing untrained model
2025-03-16 08:49:22,252:INFO:Extra Trees Classifier Imported successfully
2025-03-16 08:49:22,257:INFO:Starting cross validation
2025-03-16 08:49:22,262:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-03-16 08:49:22,759:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:22,759:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:22,759:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:22,759:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:22,764:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:22,765:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:22,765:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:22,765:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:22,770:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:22,770:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:22,770:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:22,771:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:22,775:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:22,781:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:22,786:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:22,800:INFO:Calculating mean and std
2025-03-16 08:49:22,801:INFO:Creating metrics dataframe
2025-03-16 08:49:22,803:INFO:Uploading results into container
2025-03-16 08:49:22,803:INFO:Uploading model into container now
2025-03-16 08:49:22,804:INFO:_master_model_container: 54
2025-03-16 08:49:22,804:INFO:_display_container: 5
2025-03-16 08:49:22,804:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=43, verbose=0,
                     warm_start=False)
2025-03-16 08:49:22,804:INFO:create_model() successfully completed......................................
2025-03-16 08:49:22,885:INFO:SubProcess create_model() end ==================================
2025-03-16 08:49:22,885:INFO:Creating metrics dataframe
2025-03-16 08:49:22,892:INFO:Initializing Light Gradient Boosting Machine
2025-03-16 08:49:22,892:INFO:Total runtime is 0.10522072712580363 minutes
2025-03-16 08:49:22,895:INFO:SubProcess create_model() called ==================================
2025-03-16 08:49:22,895:INFO:Initializing create_model()
2025-03-16 08:49:22,895:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DADF369180>, estimator=lightgbm, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DADF4A2410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-16 08:49:22,895:INFO:Checking exceptions
2025-03-16 08:49:22,896:INFO:Importing libraries
2025-03-16 08:49:22,896:INFO:Copying training dataset
2025-03-16 08:49:22,900:INFO:Defining folds
2025-03-16 08:49:22,900:INFO:Declaring metric variables
2025-03-16 08:49:22,902:INFO:Importing untrained model
2025-03-16 08:49:22,905:INFO:Light Gradient Boosting Machine Imported successfully
2025-03-16 08:49:22,910:INFO:Starting cross validation
2025-03-16 08:49:22,914:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-03-16 08:49:23,445:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:23,455:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:23,458:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:23,464:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:23,466:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:23,467:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:23,475:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:23,476:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:23,477:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:23,485:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:23,485:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:23,494:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:23,586:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:23,594:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:23,602:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:23,622:INFO:Calculating mean and std
2025-03-16 08:49:23,623:INFO:Creating metrics dataframe
2025-03-16 08:49:23,625:INFO:Uploading results into container
2025-03-16 08:49:23,626:INFO:Uploading model into container now
2025-03-16 08:49:23,626:INFO:_master_model_container: 55
2025-03-16 08:49:23,627:INFO:_display_container: 5
2025-03-16 08:49:23,627:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=43, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-03-16 08:49:23,628:INFO:create_model() successfully completed......................................
2025-03-16 08:49:23,718:INFO:SubProcess create_model() end ==================================
2025-03-16 08:49:23,719:INFO:Creating metrics dataframe
2025-03-16 08:49:23,726:INFO:Initializing Dummy Classifier
2025-03-16 08:49:23,726:INFO:Total runtime is 0.11912308931350708 minutes
2025-03-16 08:49:23,729:INFO:SubProcess create_model() called ==================================
2025-03-16 08:49:23,729:INFO:Initializing create_model()
2025-03-16 08:49:23,729:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DADF369180>, estimator=dummy, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DADF4A2410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-16 08:49:23,729:INFO:Checking exceptions
2025-03-16 08:49:23,729:INFO:Importing libraries
2025-03-16 08:49:23,729:INFO:Copying training dataset
2025-03-16 08:49:23,733:INFO:Defining folds
2025-03-16 08:49:23,733:INFO:Declaring metric variables
2025-03-16 08:49:23,735:INFO:Importing untrained model
2025-03-16 08:49:23,738:INFO:Dummy Classifier Imported successfully
2025-03-16 08:49:23,743:INFO:Starting cross validation
2025-03-16 08:49:23,746:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-03-16 08:49:23,996:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:24,001:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:24,001:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:24,003:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:24,004:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-16 08:49:24,007:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:24,007:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:24,007:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:24,007:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:24,010:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-16 08:49:24,012:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:24,012:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:24,013:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:24,015:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-16 08:49:24,016:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:24,016:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-16 08:49:24,018:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:24,019:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:24,020:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-16 08:49:24,024:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:49:24,035:INFO:Calculating mean and std
2025-03-16 08:49:24,035:INFO:Creating metrics dataframe
2025-03-16 08:49:24,037:INFO:Uploading results into container
2025-03-16 08:49:24,038:INFO:Uploading model into container now
2025-03-16 08:49:24,038:INFO:_master_model_container: 56
2025-03-16 08:49:24,038:INFO:_display_container: 5
2025-03-16 08:49:24,039:INFO:DummyClassifier(constant=None, random_state=43, strategy='prior')
2025-03-16 08:49:24,039:INFO:create_model() successfully completed......................................
2025-03-16 08:49:24,114:INFO:SubProcess create_model() end ==================================
2025-03-16 08:49:24,114:INFO:Creating metrics dataframe
2025-03-16 08:49:24,122:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning:

Styler.applymap has been deprecated. Use Styler.map instead.


2025-03-16 08:49:24,128:INFO:Initializing create_model()
2025-03-16 08:49:24,128:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DADF369180>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=43, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-16 08:49:24,128:INFO:Checking exceptions
2025-03-16 08:49:24,129:INFO:Importing libraries
2025-03-16 08:49:24,129:INFO:Copying training dataset
2025-03-16 08:49:24,134:INFO:Defining folds
2025-03-16 08:49:24,134:INFO:Declaring metric variables
2025-03-16 08:49:24,134:INFO:Importing untrained model
2025-03-16 08:49:24,134:INFO:Declaring custom model
2025-03-16 08:49:24,134:INFO:Gradient Boosting Classifier Imported successfully
2025-03-16 08:49:24,137:INFO:Cross validation set to False
2025-03-16 08:49:24,137:INFO:Fitting Model
2025-03-16 08:49:24,899:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=43, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-03-16 08:49:24,900:INFO:create_model() successfully completed......................................
2025-03-16 08:49:25,003:INFO:_master_model_container: 56
2025-03-16 08:49:25,003:INFO:_display_container: 5
2025-03-16 08:49:25,004:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=43, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-03-16 08:49:25,004:INFO:compare_models() successfully completed......................................
2025-03-16 08:52:15,200:INFO:gpu_param set to False
2025-03-16 08:52:15,263:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-16 08:52:15,263:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-16 08:52:15,315:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-16 08:52:15,315:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-16 08:53:50,356:INFO:Initializing create_model()
2025-03-16 08:53:50,356:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DADF369180>, estimator=knn, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_neighbors': 5, 'metric': 'manhattan'})
2025-03-16 08:53:50,356:INFO:Checking exceptions
2025-03-16 08:53:50,371:INFO:Importing libraries
2025-03-16 08:53:50,371:INFO:Copying training dataset
2025-03-16 08:53:50,379:INFO:Defining folds
2025-03-16 08:53:50,379:INFO:Declaring metric variables
2025-03-16 08:53:50,383:INFO:Importing untrained model
2025-03-16 08:53:50,385:INFO:K Neighbors Classifier Imported successfully
2025-03-16 08:53:50,391:INFO:Starting cross validation
2025-03-16 08:53:50,394:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-03-16 08:53:50,902:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:53:50,903:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:53:50,907:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:53:50,908:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:53:50,910:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:53:50,914:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:53:50,915:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:53:50,917:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:53:50,919:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:53:50,923:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:53:50,924:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:53:50,929:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:53:50,954:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:53:50,960:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:53:50,965:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 08:53:50,985:INFO:Calculating mean and std
2025-03-16 08:53:50,985:INFO:Creating metrics dataframe
2025-03-16 08:53:50,989:INFO:Finalizing model
2025-03-16 08:53:51,154:INFO:Uploading results into container
2025-03-16 08:53:51,155:INFO:Uploading model into container now
2025-03-16 08:53:51,161:INFO:_master_model_container: 57
2025-03-16 08:53:51,162:INFO:_display_container: 6
2025-03-16 08:53:51,162:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='manhattan',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-03-16 08:53:51,162:INFO:create_model() successfully completed......................................
2025-03-16 08:54:19,005:INFO:Initializing evaluate_model()
2025-03-16 08:54:19,005:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DADF369180>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='manhattan',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2025-03-16 08:54:19,018:INFO:Initializing plot_model()
2025-03-16 08:54:19,018:INFO:plot_model(plot=pipeline, fold=KFold(n_splits=5, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='manhattan',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DADF369180>, system=True)
2025-03-16 08:54:19,018:INFO:Checking exceptions
2025-03-16 08:54:19,022:INFO:Preloading libraries
2025-03-16 08:54:19,022:INFO:Copying training dataset
2025-03-16 08:54:19,022:INFO:Plot type: pipeline
2025-03-16 08:54:19,610:INFO:Visual Rendered Successfully
2025-03-16 08:54:19,694:INFO:plot_model() successfully completed......................................
2025-03-16 08:54:22,781:INFO:Initializing plot_model()
2025-03-16 08:54:22,781:INFO:plot_model(plot=parameter, fold=KFold(n_splits=5, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='manhattan',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DADF369180>, system=True)
2025-03-16 08:54:22,781:INFO:Checking exceptions
2025-03-16 08:54:22,783:INFO:Preloading libraries
2025-03-16 08:54:22,784:INFO:Copying training dataset
2025-03-16 08:54:22,784:INFO:Plot type: parameter
2025-03-16 08:54:22,786:INFO:Visual Rendered Successfully
2025-03-16 08:54:22,868:INFO:plot_model() successfully completed......................................
2025-03-16 08:54:24,552:INFO:Initializing plot_model()
2025-03-16 08:54:24,552:INFO:plot_model(plot=pipeline, fold=KFold(n_splits=5, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='manhattan',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DADF369180>, system=True)
2025-03-16 08:54:24,552:INFO:Checking exceptions
2025-03-16 08:54:24,555:INFO:Preloading libraries
2025-03-16 08:54:24,555:INFO:Copying training dataset
2025-03-16 08:54:24,555:INFO:Plot type: pipeline
2025-03-16 08:54:24,685:INFO:Visual Rendered Successfully
2025-03-16 08:54:24,796:INFO:plot_model() successfully completed......................................
2025-03-16 08:54:26,555:INFO:Initializing plot_model()
2025-03-16 08:54:26,556:INFO:plot_model(plot=auc, fold=KFold(n_splits=5, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='manhattan',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DADF369180>, system=True)
2025-03-16 08:54:26,556:INFO:Checking exceptions
2025-03-16 08:54:26,558:INFO:Preloading libraries
2025-03-16 08:54:26,559:INFO:Copying training dataset
2025-03-16 08:54:26,559:INFO:Plot type: auc
2025-03-16 08:54:26,841:INFO:Fitting Model
2025-03-16 08:54:26,841:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\base.py:493: UserWarning:

X does not have valid feature names, but KNeighborsClassifier was fitted with feature names


2025-03-16 08:54:26,841:INFO:Scoring test/hold-out set
2025-03-16 08:54:27,330:INFO:Visual Rendered Successfully
2025-03-16 08:54:27,402:INFO:plot_model() successfully completed......................................
2025-03-16 08:54:49,011:INFO:Initializing plot_model()
2025-03-16 08:54:49,011:INFO:plot_model(plot=confusion_matrix, fold=KFold(n_splits=5, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='manhattan',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DADF369180>, system=True)
2025-03-16 08:54:49,011:INFO:Checking exceptions
2025-03-16 08:54:49,013:INFO:Preloading libraries
2025-03-16 08:54:49,014:INFO:Copying training dataset
2025-03-16 08:54:49,014:INFO:Plot type: confusion_matrix
2025-03-16 08:54:49,297:INFO:Fitting Model
2025-03-16 08:54:49,297:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\base.py:493: UserWarning:

X does not have valid feature names, but KNeighborsClassifier was fitted with feature names


2025-03-16 08:54:49,297:INFO:Scoring test/hold-out set
2025-03-16 08:54:49,496:INFO:Visual Rendered Successfully
2025-03-16 08:54:49,573:INFO:plot_model() successfully completed......................................
2025-03-16 08:54:57,120:INFO:Initializing plot_model()
2025-03-16 08:54:57,120:INFO:plot_model(plot=learning, fold=KFold(n_splits=5, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='manhattan',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DADF369180>, system=True)
2025-03-16 08:54:57,121:INFO:Checking exceptions
2025-03-16 08:54:57,123:INFO:Preloading libraries
2025-03-16 08:54:57,123:INFO:Copying training dataset
2025-03-16 08:54:57,124:INFO:Plot type: learning
2025-03-16 08:54:57,410:INFO:Fitting Model
2025-03-16 08:55:00,500:INFO:Visual Rendered Successfully
2025-03-16 08:55:00,576:INFO:plot_model() successfully completed......................................
2025-03-16 08:55:00,709:INFO:Initializing plot_model()
2025-03-16 08:55:00,709:INFO:plot_model(plot=manifold, fold=KFold(n_splits=5, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='manhattan',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DADF369180>, system=True)
2025-03-16 08:55:00,709:INFO:Checking exceptions
2025-03-16 08:55:00,712:INFO:Preloading libraries
2025-03-16 08:55:00,712:INFO:Copying training dataset
2025-03-16 08:55:00,712:INFO:Plot type: manifold
2025-03-16 08:55:01,030:INFO:Fitting & Transforming Model
2025-03-16 08:55:11,266:INFO:Visual Rendered Successfully
2025-03-16 08:55:11,339:INFO:plot_model() successfully completed......................................
2025-03-16 08:55:11,440:INFO:Initializing plot_model()
2025-03-16 08:55:11,440:INFO:plot_model(plot=learning, fold=KFold(n_splits=5, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='manhattan',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DADF369180>, system=True)
2025-03-16 08:55:11,440:INFO:Checking exceptions
2025-03-16 08:55:11,442:INFO:Preloading libraries
2025-03-16 08:55:11,443:INFO:Copying training dataset
2025-03-16 08:55:11,443:INFO:Plot type: learning
2025-03-16 08:55:11,740:INFO:Fitting Model
2025-03-16 08:55:13,813:INFO:Visual Rendered Successfully
2025-03-16 08:55:13,883:INFO:plot_model() successfully completed......................................
2025-03-16 08:55:18,229:INFO:Initializing plot_model()
2025-03-16 08:55:18,229:INFO:plot_model(plot=manifold, fold=KFold(n_splits=5, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='manhattan',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DADF369180>, system=True)
2025-03-16 08:55:18,229:INFO:Checking exceptions
2025-03-16 08:55:18,233:INFO:Preloading libraries
2025-03-16 08:55:18,233:INFO:Copying training dataset
2025-03-16 08:55:18,233:INFO:Plot type: manifold
2025-03-16 08:55:18,565:INFO:Fitting & Transforming Model
2025-03-16 08:55:28,772:INFO:Visual Rendered Successfully
2025-03-16 08:55:28,856:INFO:plot_model() successfully completed......................................
2025-03-16 08:55:31,872:INFO:Initializing plot_model()
2025-03-16 08:55:31,873:INFO:plot_model(plot=learning, fold=KFold(n_splits=5, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='manhattan',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DADF369180>, system=True)
2025-03-16 08:55:31,873:INFO:Checking exceptions
2025-03-16 08:55:31,875:INFO:Preloading libraries
2025-03-16 08:55:31,876:INFO:Copying training dataset
2025-03-16 08:55:31,876:INFO:Plot type: learning
2025-03-16 08:55:32,156:INFO:Fitting Model
2025-03-16 08:55:34,161:INFO:Visual Rendered Successfully
2025-03-16 08:55:34,243:INFO:plot_model() successfully completed......................................
2025-03-16 08:55:50,432:INFO:Initializing plot_model()
2025-03-16 08:55:50,432:INFO:plot_model(plot=class_report, fold=KFold(n_splits=5, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='manhattan',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DADF369180>, system=True)
2025-03-16 08:55:50,432:INFO:Checking exceptions
2025-03-16 08:55:50,435:INFO:Preloading libraries
2025-03-16 08:55:50,436:INFO:Copying training dataset
2025-03-16 08:55:50,436:INFO:Plot type: class_report
2025-03-16 08:55:50,718:INFO:Fitting Model
2025-03-16 08:55:50,718:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\base.py:493: UserWarning:

X does not have valid feature names, but KNeighborsClassifier was fitted with feature names


2025-03-16 08:55:50,718:INFO:Scoring test/hold-out set
2025-03-16 08:55:50,977:INFO:Visual Rendered Successfully
2025-03-16 08:55:51,052:INFO:plot_model() successfully completed......................................
2025-03-16 08:56:09,136:INFO:Initializing plot_model()
2025-03-16 08:56:09,136:INFO:plot_model(plot=boundary, fold=KFold(n_splits=5, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='manhattan',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DADF369180>, system=True)
2025-03-16 08:56:09,136:INFO:Checking exceptions
2025-03-16 08:56:09,138:INFO:Preloading libraries
2025-03-16 08:56:09,139:INFO:Copying training dataset
2025-03-16 08:56:09,139:INFO:Plot type: boundary
2025-03-16 08:56:09,284:INFO:Fitting StandardScaler()
2025-03-16 08:56:09,288:INFO:Fitting PCA()
2025-03-16 08:56:09,439:INFO:Fitting Model
2025-03-16 08:56:14,326:INFO:Visual Rendered Successfully
2025-03-16 08:56:14,435:INFO:plot_model() successfully completed......................................
2025-03-16 08:56:44,684:INFO:Initializing evaluate_model()
2025-03-16 08:56:44,684:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DADF369180>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=43, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2025-03-16 08:56:44,692:INFO:Initializing plot_model()
2025-03-16 08:56:44,692:INFO:plot_model(plot=pipeline, fold=KFold(n_splits=5, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=43, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DADF369180>, system=True)
2025-03-16 08:56:44,692:INFO:Checking exceptions
2025-03-16 08:56:44,695:INFO:Preloading libraries
2025-03-16 08:56:44,701:INFO:Copying training dataset
2025-03-16 08:56:44,701:INFO:Plot type: pipeline
2025-03-16 08:56:44,822:INFO:Visual Rendered Successfully
2025-03-16 08:56:44,911:INFO:plot_model() successfully completed......................................
2025-03-16 08:56:48,879:INFO:Initializing plot_model()
2025-03-16 08:56:48,879:INFO:plot_model(plot=confusion_matrix, fold=KFold(n_splits=5, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=43, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DADF369180>, system=True)
2025-03-16 08:56:48,879:INFO:Checking exceptions
2025-03-16 08:56:48,882:INFO:Preloading libraries
2025-03-16 08:56:48,887:INFO:Copying training dataset
2025-03-16 08:56:48,887:INFO:Plot type: confusion_matrix
2025-03-16 08:56:49,177:INFO:Fitting Model
2025-03-16 08:56:49,177:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\base.py:493: UserWarning:

X does not have valid feature names, but GradientBoostingClassifier was fitted with feature names


2025-03-16 08:56:49,178:INFO:Scoring test/hold-out set
2025-03-16 08:56:49,255:INFO:Visual Rendered Successfully
2025-03-16 08:56:49,351:INFO:plot_model() successfully completed......................................
2025-03-16 08:56:51,743:INFO:Initializing plot_model()
2025-03-16 08:56:51,743:INFO:plot_model(plot=learning, fold=KFold(n_splits=5, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=43, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DADF369180>, system=True)
2025-03-16 08:56:51,743:INFO:Checking exceptions
2025-03-16 08:56:51,746:INFO:Preloading libraries
2025-03-16 08:56:51,751:INFO:Copying training dataset
2025-03-16 08:56:51,751:INFO:Plot type: learning
2025-03-16 08:56:52,038:INFO:Fitting Model
2025-03-16 08:56:54,300:INFO:Visual Rendered Successfully
2025-03-16 08:56:54,393:INFO:plot_model() successfully completed......................................
2025-03-16 08:56:56,319:INFO:Initializing plot_model()
2025-03-16 08:56:56,319:INFO:plot_model(plot=manifold, fold=KFold(n_splits=5, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=43, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DADF369180>, system=True)
2025-03-16 08:56:56,319:INFO:Checking exceptions
2025-03-16 08:56:56,322:INFO:Preloading libraries
2025-03-16 08:56:56,327:INFO:Copying training dataset
2025-03-16 08:56:56,327:INFO:Plot type: manifold
2025-03-16 08:56:56,617:INFO:Fitting & Transforming Model
2025-03-16 08:57:06,360:INFO:Visual Rendered Successfully
2025-03-16 08:57:06,435:INFO:plot_model() successfully completed......................................
2025-03-16 08:57:17,607:INFO:Initializing plot_model()
2025-03-16 08:57:17,607:INFO:plot_model(plot=rfe, fold=KFold(n_splits=5, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=43, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DADF369180>, system=True)
2025-03-16 08:57:17,607:INFO:Checking exceptions
2025-03-16 08:57:17,610:INFO:Preloading libraries
2025-03-16 08:57:17,615:INFO:Copying training dataset
2025-03-16 08:57:17,615:INFO:Plot type: rfe
2025-03-16 08:57:17,893:INFO:Fitting Model
2025-03-16 09:05:44,885:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-16 09:05:44,886:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-16 09:05:44,886:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-16 09:05:44,886:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-16 09:05:45,200:INFO:PyCaret ClassificationExperiment
2025-03-16 09:05:45,200:INFO:Logging name: clf-default-name
2025-03-16 09:05:45,200:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-03-16 09:05:45,200:INFO:version 3.3.2
2025-03-16 09:05:45,200:INFO:Initializing setup()
2025-03-16 09:05:45,201:INFO:self.USI: bba8
2025-03-16 09:05:45,201:INFO:self._variable_keys: {'exp_name_log', 'idx', 'n_jobs_param', 'gpu_param', 'target_param', 'gpu_n_jobs_param', 'X', 'is_multiclass', 'html_param', 'y_train', 'data', 'pipeline', 'exp_id', 'USI', 'fold_groups_param', '_available_plots', 'X_test', 'seed', 'y', 'fold_shuffle_param', 'log_plots_param', 'fix_imbalance', 'memory', 'y_test', 'fold_generator', 'logging_param', '_ml_usecase', 'X_train'}
2025-03-16 09:05:45,201:INFO:Checking environment
2025-03-16 09:05:45,201:INFO:python_version: 3.10.16
2025-03-16 09:05:45,201:INFO:python_build: ('main', 'Dec 11 2024 16:19:12')
2025-03-16 09:05:45,201:INFO:machine: AMD64
2025-03-16 09:05:45,201:INFO:platform: Windows-10-10.0.26100-SP0
2025-03-16 09:05:45,206:INFO:Memory: svmem(total=17085845504, available=6000418816, percent=64.9, used=11085426688, free=6000418816)
2025-03-16 09:05:45,206:INFO:Physical Core: 8
2025-03-16 09:05:45,206:INFO:Logical Core: 16
2025-03-16 09:05:45,206:INFO:Checking libraries
2025-03-16 09:05:45,206:INFO:System:
2025-03-16 09:05:45,206:INFO:    python: 3.10.16 | packaged by Anaconda, Inc. | (main, Dec 11 2024, 16:19:12) [MSC v.1929 64 bit (AMD64)]
2025-03-16 09:05:45,206:INFO:executable: g:\ML\envs\pycaret_env\python.exe
2025-03-16 09:05:45,206:INFO:   machine: Windows-10-10.0.26100-SP0
2025-03-16 09:05:45,207:INFO:PyCaret required dependencies:
2025-03-16 09:05:45,225:INFO:                 pip: 25.0
2025-03-16 09:05:45,226:INFO:          setuptools: 75.8.0
2025-03-16 09:05:45,226:INFO:             pycaret: 3.3.2
2025-03-16 09:05:45,226:INFO:             IPython: 8.34.0
2025-03-16 09:05:45,226:INFO:          ipywidgets: 8.1.5
2025-03-16 09:05:45,226:INFO:                tqdm: 4.67.1
2025-03-16 09:05:45,226:INFO:               numpy: 1.26.4
2025-03-16 09:05:45,226:INFO:              pandas: 2.1.4
2025-03-16 09:05:45,226:INFO:              jinja2: 3.1.6
2025-03-16 09:05:45,226:INFO:               scipy: 1.11.4
2025-03-16 09:05:45,226:INFO:              joblib: 1.3.2
2025-03-16 09:05:45,226:INFO:             sklearn: 1.4.2
2025-03-16 09:05:45,226:INFO:                pyod: 2.0.3
2025-03-16 09:05:45,226:INFO:            imblearn: 0.13.0
2025-03-16 09:05:45,226:INFO:   category_encoders: 2.7.0
2025-03-16 09:05:45,226:INFO:            lightgbm: 4.6.0
2025-03-16 09:05:45,226:INFO:               numba: 0.61.0
2025-03-16 09:05:45,226:INFO:            requests: 2.32.3
2025-03-16 09:05:45,226:INFO:          matplotlib: 3.7.5
2025-03-16 09:05:45,226:INFO:          scikitplot: 0.3.7
2025-03-16 09:05:45,226:INFO:         yellowbrick: 1.5
2025-03-16 09:05:45,226:INFO:              plotly: 5.24.1
2025-03-16 09:05:45,226:INFO:    plotly-resampler: Not installed
2025-03-16 09:05:45,226:INFO:             kaleido: 0.2.1
2025-03-16 09:05:45,226:INFO:           schemdraw: 0.15
2025-03-16 09:05:45,226:INFO:         statsmodels: 0.14.4
2025-03-16 09:05:45,226:INFO:              sktime: 0.26.0
2025-03-16 09:05:45,226:INFO:               tbats: 1.1.3
2025-03-16 09:05:45,226:INFO:            pmdarima: 2.0.4
2025-03-16 09:05:45,226:INFO:              psutil: 7.0.0
2025-03-16 09:05:45,227:INFO:          markupsafe: 3.0.2
2025-03-16 09:05:45,227:INFO:             pickle5: Not installed
2025-03-16 09:05:45,227:INFO:         cloudpickle: 3.1.1
2025-03-16 09:05:45,227:INFO:         deprecation: 2.1.0
2025-03-16 09:05:45,227:INFO:              xxhash: 3.5.0
2025-03-16 09:05:45,227:INFO:           wurlitzer: Not installed
2025-03-16 09:05:45,227:INFO:PyCaret optional dependencies:
2025-03-16 09:05:45,237:INFO:                shap: Not installed
2025-03-16 09:05:45,237:INFO:           interpret: Not installed
2025-03-16 09:05:45,237:INFO:                umap: Not installed
2025-03-16 09:05:45,237:INFO:     ydata_profiling: Not installed
2025-03-16 09:05:45,237:INFO:  explainerdashboard: Not installed
2025-03-16 09:05:45,237:INFO:             autoviz: Not installed
2025-03-16 09:05:45,237:INFO:           fairlearn: Not installed
2025-03-16 09:05:45,237:INFO:          deepchecks: Not installed
2025-03-16 09:05:45,237:INFO:             xgboost: Not installed
2025-03-16 09:05:45,237:INFO:            catboost: Not installed
2025-03-16 09:05:45,237:INFO:              kmodes: Not installed
2025-03-16 09:05:45,237:INFO:             mlxtend: Not installed
2025-03-16 09:05:45,237:INFO:       statsforecast: Not installed
2025-03-16 09:05:45,237:INFO:        tune_sklearn: Not installed
2025-03-16 09:05:45,237:INFO:                 ray: Not installed
2025-03-16 09:05:45,237:INFO:            hyperopt: Not installed
2025-03-16 09:05:45,237:INFO:              optuna: Not installed
2025-03-16 09:05:45,237:INFO:               skopt: Not installed
2025-03-16 09:05:45,237:INFO:              mlflow: Not installed
2025-03-16 09:05:45,237:INFO:              gradio: Not installed
2025-03-16 09:05:45,237:INFO:             fastapi: Not installed
2025-03-16 09:05:45,238:INFO:             uvicorn: Not installed
2025-03-16 09:05:45,238:INFO:              m2cgen: Not installed
2025-03-16 09:05:45,238:INFO:           evidently: Not installed
2025-03-16 09:05:45,238:INFO:               fugue: Not installed
2025-03-16 09:05:45,238:INFO:           streamlit: Not installed
2025-03-16 09:05:45,238:INFO:             prophet: Not installed
2025-03-16 09:05:45,238:INFO:None
2025-03-16 09:05:45,238:INFO:Set up data.
2025-03-16 09:05:45,254:INFO:Set up folding strategy.
2025-03-16 09:05:45,254:INFO:Set up train/test split.
2025-03-16 09:05:45,264:INFO:Set up index.
2025-03-16 09:05:45,265:INFO:Assigning column types.
2025-03-16 09:05:45,268:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-03-16 09:05:45,301:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-16 09:05:45,303:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-16 09:05:45,327:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-16 09:05:45,327:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-16 09:05:45,359:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-16 09:05:45,360:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-16 09:05:45,380:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-16 09:05:45,380:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-16 09:05:45,380:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-03-16 09:05:45,412:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-16 09:05:45,431:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-16 09:05:45,431:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-16 09:05:45,463:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-16 09:05:45,482:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-16 09:05:45,482:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-16 09:05:45,482:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-03-16 09:05:45,533:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-16 09:05:45,533:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-16 09:05:45,587:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-16 09:05:45,587:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-16 09:05:45,589:INFO:Preparing preprocessing pipeline...
2025-03-16 09:05:45,590:INFO:Set up label encoding.
2025-03-16 09:05:45,590:INFO:Set up simple imputation.
2025-03-16 09:05:45,595:INFO:Set up encoding of ordinal features.
2025-03-16 09:05:45,602:INFO:Set up encoding of categorical features.
2025-03-16 09:05:45,602:INFO:Set up variance threshold.
2025-03-16 09:05:45,602:INFO:Set up feature normalization.
2025-03-16 09:05:45,855:INFO:Finished creating preprocessing pipeline.
2025-03-16 09:05:45,904:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\thinu\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'MonthlyCharges',
                                             'TotalCharges'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fi...
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('low_variance',
                 TransformerWrapper(exclude=[], include=None,
                                    transformer=VarianceThreshold(threshold=0.1))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=MinMaxScaler(clip=False,
                                                             copy=True,
                                                             feature_range=(0,
                                                                            1))))],
         verbose=False)
2025-03-16 09:05:45,904:INFO:Creating final display dataframe.
2025-03-16 09:05:46,206:INFO:Setup _display_container:                     Description             Value
0                    Session id                43
1                        Target             Churn
2                   Target type            Binary
3                Target mapping     No: 0, Yes: 1
4           Original data shape        (6339, 21)
5        Transformed data shape        (6339, 39)
6   Transformed train set shape        (5071, 39)
7    Transformed test set shape        (1268, 39)
8               Ignore features                 1
9              Ordinal features                 1
10             Numeric features                 3
11         Categorical features                16
12     Rows with missing values              0.5%
13                   Preprocess              True
14              Imputation type            simple
15           Numeric imputation              mean
16       Categorical imputation              mode
17     Maximum one-hot encoding               100
18              Encoding method              None
19       Low variance threshold               0.1
20                    Normalize              True
21             Normalize method            minmax
22               Fold Generator             KFold
23                  Fold Number                 5
24                     CPU Jobs                -1
25                      Use GPU             False
26               Log Experiment             False
27              Experiment Name  clf-default-name
28                          USI              bba8
2025-03-16 09:05:46,267:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-16 09:05:46,267:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-16 09:05:46,329:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-16 09:05:46,329:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-16 09:05:46,331:INFO:setup() successfully completed in 1.13s...............
2025-03-16 09:05:46,356:INFO:Initializing get_config()
2025-03-16 09:05:46,356:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E8EC04CFD0>, variable=None)
2025-03-16 09:05:46,369:INFO:Initializing get_config()
2025-03-16 09:05:46,369:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E8EC04CFD0>, variable=X_train)
2025-03-16 09:05:46,370:INFO:Variable: 'X_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_train_transformed' instead.
2025-03-16 09:05:46,370:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\pycaret\internal\pycaret_experiment\pycaret_experiment.py:321: UserWarning:

Variable: 'X_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_train_transformed' instead.


2025-03-16 09:05:46,382:INFO:Variable:  returned as       gender SeniorCitizen Partner Dependents  tenure PhoneService MultipleLines InternetService  \
2790    Male            No     Yes         No    18.0          Yes            No     Fiber optic   
6109    Male            No      No         No     1.0          Yes            No              No   
2585    Male            No     Yes         No    40.0          Yes            No     Fiber optic   
1181    Male            No      No         No    54.0          Yes           Yes     Fiber optic   
565   Female            No      No         No    28.0          Yes            No             DSL   
...      ...           ...     ...        ...     ...          ...           ...             ...   
1825    Male           Yes     Yes        Yes    20.0          Yes            No     Fiber optic   
4586    Male            No      No         No    36.0          Yes           Yes     Fiber optic   
4670  Female            No     Yes         No    72.0          Yes           Yes             DSL   
4974  Female           Yes     Yes        Yes    23.0          Yes            No     Fiber optic   
4508  Female            No     Yes        Yes    72.0          Yes            No              No   

           OnlineSecurity         OnlineBackup     DeviceProtection          TechSupport  \
2790                   No                   No                  Yes                  Yes   
6109  No internet service  No internet service  No internet service  No internet service   
2585                   No                  Yes                  Yes                   No   
1181                   No                   No                  Yes                   No   
565                    No                  Yes                   No                  Yes   
...                   ...                  ...                  ...                  ...   
1825                  Yes                   No                  Yes                  Yes   
4586                   No                   No                   No                   No   
4670                  Yes                  Yes                  Yes                  Yes   
4974                   No                  Yes                  Yes                   No   
4508  No internet service  No internet service  No internet service  No internet service   

              StreamingTV      StreamingMovies        Contract PaperlessBilling  \
2790                   No                   No  Month-to-month               No   
6109  No internet service  No internet service  Month-to-month               No   
2585                   No                   No        One year               No   
1181                   No                  Yes  Month-to-month               No   
565                    No                   No  Month-to-month               No   
...                   ...                  ...             ...              ...   
1825                   No                  Yes        One year               No   
4586                   No                  Yes  Month-to-month              Yes   
4670                  Yes                  Yes        Two year              Yes   
4974                   No                  Yes  Month-to-month              Yes   
4508  No internet service  No internet service        Two year               No   

                  PaymentMethod  MonthlyCharges  TotalCharges  
2790           Electronic check       78.199997   1468.750000  
6109           Electronic check       20.650000     20.650000  
2585           Electronic check       80.800003   3132.750000  
1181    Credit card (automatic)       89.400002   4869.500000  
565   Bank transfer (automatic)       54.650002   1517.500000  
...                         ...             ...           ...  
1825    Credit card (automatic)       94.300003   1818.300049  
4586           Electronic check       84.900002   3067.199951  
4670           Electronic check       92.400002   6786.100098  
4974  Bank transfer (automatic)       88.449997   2130.550049  
4508  Bank transfer (automatic)       19.549999   1463.449951  

[5071 rows x 19 columns]
2025-03-16 09:05:46,382:INFO:get_config() successfully completed......................................
2025-03-16 09:05:46,414:INFO:Initializing get_config()
2025-03-16 09:05:46,414:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E8EC04CFD0>, variable=X_train_transformed)
2025-03-16 09:05:46,465:INFO:Variable: X_train returned as       gender  SeniorCitizen  Partner  Dependents    tenure  MultipleLines_No  MultipleLines_Yes  \
2790     1.0            0.0      1.0         0.0  0.250000               1.0                0.0   
6109     1.0            0.0      0.0         0.0  0.013889               1.0                0.0   
2585     1.0            0.0      1.0         0.0  0.555556               1.0                0.0   
1181     1.0            0.0      0.0         0.0  0.750000               0.0                1.0   
565      0.0            0.0      0.0         0.0  0.388889               1.0                0.0   
...      ...            ...      ...         ...       ...               ...                ...   
1825     1.0            1.0      1.0         1.0  0.277778               1.0                0.0   
4586     1.0            0.0      0.0         0.0  0.500000               0.0                1.0   
4670     0.0            0.0      1.0         0.0  1.000000               0.0                1.0   
4974     0.0            1.0      1.0         1.0  0.319444               1.0                0.0   
4508     0.0            0.0      1.0         1.0  1.000000               1.0                0.0   

      InternetService_Fiber optic  InternetService_No  InternetService_DSL  OnlineSecurity_No  \
2790                          1.0                 0.0                  0.0                1.0   
6109                          0.0                 1.0                  0.0                0.0   
2585                          1.0                 0.0                  0.0                1.0   
1181                          1.0                 0.0                  0.0                1.0   
565                           0.0                 0.0                  1.0                1.0   
...                           ...                 ...                  ...                ...   
1825                          1.0                 0.0                  0.0                0.0   
4586                          1.0                 0.0                  0.0                1.0   
4670                          0.0                 0.0                  1.0                0.0   
4974                          1.0                 0.0                  0.0                1.0   
4508                          0.0                 1.0                  0.0                0.0   

      OnlineSecurity_No internet service  OnlineSecurity_Yes  OnlineBackup_No  \
2790                                 0.0                 0.0              1.0   
6109                                 1.0                 0.0              0.0   
2585                                 0.0                 0.0              0.0   
1181                                 0.0                 0.0              1.0   
565                                  0.0                 0.0              0.0   
...                                  ...                 ...              ...   
1825                                 0.0                 1.0              1.0   
4586                                 0.0                 0.0              1.0   
4670                                 0.0                 1.0              0.0   
4974                                 0.0                 0.0              0.0   
4508                                 1.0                 0.0              0.0   

      OnlineBackup_No internet service  OnlineBackup_Yes  DeviceProtection_Yes  \
2790                               0.0               0.0                   1.0   
6109                               1.0               0.0                   0.0   
2585                               0.0               1.0                   1.0   
1181                               0.0               0.0                   1.0   
565                                0.0               1.0                   0.0   
...                                ...               ...                   ...   
1825                               0.0               0.0                   1.0   
4586                               0.0               0.0                   0.0   
4670                               0.0               1.0                   1.0   
4974                               0.0               1.0                   1.0   
4508                               1.0               0.0                   0.0   

      DeviceProtection_No internet service  DeviceProtection_No  TechSupport_Yes  \
2790                                   0.0                  0.0              1.0   
6109                                   1.0                  0.0              0.0   
2585                                   0.0                  0.0              0.0   
1181                                   0.0                  0.0              0.0   
565                                    0.0                  1.0              1.0   
...                                    ...                  ...              ...   
1825                                   0.0                  0.0              1.0   
4586                                   0.0                  1.0              0.0   
4670                                   0.0                  0.0              1.0   
4974                                   0.0                  0.0              0.0   
4508                                   1.0                  0.0              0.0   

      TechSupport_No internet service  TechSupport_No  StreamingTV_No  \
2790                              0.0             0.0             1.0   
6109                              1.0             0.0             0.0   
2585                              0.0             1.0             1.0   
1181                              0.0             1.0             1.0   
565                               0.0             0.0             1.0   
...                               ...             ...             ...   
1825                              0.0             0.0             1.0   
4586                              0.0             1.0             1.0   
4670                              0.0             0.0             0.0   
4974                              0.0             1.0             1.0   
4508                              1.0             0.0             0.0   

      StreamingTV_No internet service  StreamingTV_Yes  StreamingMovies_No  \
2790                              0.0              0.0                 1.0   
6109                              1.0              0.0                 0.0   
2585                              0.0              0.0                 1.0   
1181                              0.0              0.0                 0.0   
565                               0.0              0.0                 1.0   
...                               ...              ...                 ...   
1825                              0.0              0.0                 0.0   
4586                              0.0              0.0                 0.0   
4670                              0.0              1.0                 0.0   
4974                              0.0              0.0                 0.0   
4508                              1.0              0.0                 0.0   

      StreamingMovies_No internet service  StreamingMovies_Yes  Contract_0.0  Contract_1.0  \
2790                                  0.0                  0.0           1.0           0.0   
6109                                  1.0                  0.0           1.0           0.0   
2585                                  0.0                  0.0           0.0           1.0   
1181                                  0.0                  1.0           1.0           0.0   
565                                   0.0                  0.0           1.0           0.0   
...                                   ...                  ...           ...           ...   
1825                                  0.0                  1.0           0.0           1.0   
4586                                  0.0                  1.0           1.0           0.0   
4670                                  0.0                  1.0           0.0           0.0   
4974                                  0.0                  1.0           1.0           0.0   
4508                                  1.0                  0.0           0.0           0.0   

      Contract_2.0  PaperlessBilling  PaymentMethod_Electronic check  \
2790           0.0               0.0                             1.0   
6109           0.0               0.0                             1.0   
2585           0.0               0.0                             1.0   
1181           0.0               0.0                             0.0   
565            0.0               0.0                             0.0   
...            ...               ...                             ...   
1825           0.0               0.0                             0.0   
4586           0.0               1.0                             1.0   
4670           1.0               1.0                             1.0   
4974           0.0               1.0                             0.0   
4508           1.0               0.0                             0.0   

      PaymentMethod_Credit card (automatic)  PaymentMethod_Bank transfer (automatic)  \
2790                                    0.0                                      0.0   
6109                                    0.0                                      0.0   
2585                                    0.0                                      0.0   
1181                                    1.0                                      0.0   
565                                     0.0                                      1.0   
...                                     ...                                      ...   
1825                                    1.0                                      0.0   
4586                                    0.0                                      0.0   
4670                                    0.0                                      0.0   
4974                                    0.0                                      1.0   
4508                                    0.0                                      1.0   

      PaymentMethod_Mailed check  MonthlyCharges  TotalCharges  
2790                         0.0        0.595914      0.167310  
6109                         0.0        0.022422      0.000208  
2585                         0.0        0.621824      0.359326  
1181                         0.0        0.707524      0.559737  
565                          0.0        0.361236      0.172935  
...                          ...             ...           ...  
1825                         0.0        0.756353      0.207646  
4586                         0.0        0.662681      0.351762  
4670                         0.0        0.737419      0.780901  
4974                         0.0        0.698057      0.243678  
4508                         0.0        0.011460      0.166698  

[5071 rows x 38 columns]
2025-03-16 09:05:46,465:INFO:get_config() successfully completed......................................
2025-03-16 09:05:46,509:INFO:Initializing get_config()
2025-03-16 09:05:46,509:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E8EC04CFD0>, variable=y_train)
2025-03-16 09:05:46,509:INFO:Variable: 'y_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'y_train_transformed' instead.
2025-03-16 09:05:46,509:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\pycaret\internal\pycaret_experiment\pycaret_experiment.py:321: UserWarning:

Variable: 'y_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'y_train_transformed' instead.


2025-03-16 09:05:46,513:INFO:Variable:  returned as 2790     No
6109     No
2585     No
1181     No
565      No
       ... 
1825     No
4586    Yes
4670     No
4974     No
4508     No
Name: Churn, Length: 5071, dtype: category
Categories (2, object): ['No', 'Yes']
2025-03-16 09:05:46,513:INFO:get_config() successfully completed......................................
2025-03-16 09:05:46,524:INFO:Initializing get_config()
2025-03-16 09:05:46,524:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E8EC04CFD0>, variable=y_train_transformed)
2025-03-16 09:05:46,559:INFO:Variable: y_train returned as 2790    0
6109    0
2585    0
1181    0
565     0
       ..
1825    0
4586    1
4670    0
4974    0
4508    0
Name: Churn, Length: 5071, dtype: int32
2025-03-16 09:05:46,559:INFO:get_config() successfully completed......................................
2025-03-16 09:05:46,572:INFO:Initializing compare_models()
2025-03-16 09:05:46,572:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E8EC04CFD0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001E8EC04CFD0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2025-03-16 09:05:46,572:INFO:Checking exceptions
2025-03-16 09:05:46,577:INFO:Preparing display monitor
2025-03-16 09:05:46,596:INFO:Initializing Logistic Regression
2025-03-16 09:05:46,597:INFO:Total runtime is 1.665353775024414e-05 minutes
2025-03-16 09:05:46,600:INFO:SubProcess create_model() called ==================================
2025-03-16 09:05:46,600:INFO:Initializing create_model()
2025-03-16 09:05:46,600:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E8EC04CFD0>, estimator=lr, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E8C8CC5630>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-16 09:05:46,601:INFO:Checking exceptions
2025-03-16 09:05:46,601:INFO:Importing libraries
2025-03-16 09:05:46,601:INFO:Copying training dataset
2025-03-16 09:05:46,610:INFO:Defining folds
2025-03-16 09:05:46,611:INFO:Declaring metric variables
2025-03-16 09:05:46,615:INFO:Importing untrained model
2025-03-16 09:05:46,618:INFO:Logistic Regression Imported successfully
2025-03-16 09:05:46,625:INFO:Starting cross validation
2025-03-16 09:05:46,628:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-03-16 09:05:48,975:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:48,982:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:48,992:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:49,002:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:49,013:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:49,022:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:49,030:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:49,038:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:49,042:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:49,043:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:49,045:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:49,048:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:49,049:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:49,056:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:49,056:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:49,082:INFO:Calculating mean and std
2025-03-16 09:05:49,084:INFO:Creating metrics dataframe
2025-03-16 09:05:49,087:INFO:Uploading results into container
2025-03-16 09:05:49,087:INFO:Uploading model into container now
2025-03-16 09:05:49,088:INFO:_master_model_container: 1
2025-03-16 09:05:49,088:INFO:_display_container: 2
2025-03-16 09:05:49,089:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=43, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-03-16 09:05:49,089:INFO:create_model() successfully completed......................................
2025-03-16 09:05:49,193:INFO:SubProcess create_model() end ==================================
2025-03-16 09:05:49,193:INFO:Creating metrics dataframe
2025-03-16 09:05:49,198:INFO:Initializing K Neighbors Classifier
2025-03-16 09:05:49,198:INFO:Total runtime is 0.04336038033167521 minutes
2025-03-16 09:05:49,201:INFO:SubProcess create_model() called ==================================
2025-03-16 09:05:49,201:INFO:Initializing create_model()
2025-03-16 09:05:49,201:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E8EC04CFD0>, estimator=knn, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E8C8CC5630>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-16 09:05:49,201:INFO:Checking exceptions
2025-03-16 09:05:49,201:INFO:Importing libraries
2025-03-16 09:05:49,202:INFO:Copying training dataset
2025-03-16 09:05:49,207:INFO:Defining folds
2025-03-16 09:05:49,207:INFO:Declaring metric variables
2025-03-16 09:05:49,210:INFO:Importing untrained model
2025-03-16 09:05:49,212:INFO:K Neighbors Classifier Imported successfully
2025-03-16 09:05:49,217:INFO:Starting cross validation
2025-03-16 09:05:49,220:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-03-16 09:05:51,225:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:51,229:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:51,230:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:51,232:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:51,234:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:51,234:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:51,236:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:51,237:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:51,238:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:51,240:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:51,240:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:51,243:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:51,243:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:51,246:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:51,249:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:51,267:INFO:Calculating mean and std
2025-03-16 09:05:51,269:INFO:Creating metrics dataframe
2025-03-16 09:05:51,272:INFO:Uploading results into container
2025-03-16 09:05:51,272:INFO:Uploading model into container now
2025-03-16 09:05:51,273:INFO:_master_model_container: 2
2025-03-16 09:05:51,273:INFO:_display_container: 2
2025-03-16 09:05:51,274:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-03-16 09:05:51,274:INFO:create_model() successfully completed......................................
2025-03-16 09:05:51,407:INFO:SubProcess create_model() end ==================================
2025-03-16 09:05:51,408:INFO:Creating metrics dataframe
2025-03-16 09:05:51,413:INFO:Initializing Naive Bayes
2025-03-16 09:05:51,413:INFO:Total runtime is 0.08027985095977783 minutes
2025-03-16 09:05:51,416:INFO:SubProcess create_model() called ==================================
2025-03-16 09:05:51,416:INFO:Initializing create_model()
2025-03-16 09:05:51,416:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E8EC04CFD0>, estimator=nb, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E8C8CC5630>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-16 09:05:51,416:INFO:Checking exceptions
2025-03-16 09:05:51,416:INFO:Importing libraries
2025-03-16 09:05:51,416:INFO:Copying training dataset
2025-03-16 09:05:51,421:INFO:Defining folds
2025-03-16 09:05:51,421:INFO:Declaring metric variables
2025-03-16 09:05:51,423:INFO:Importing untrained model
2025-03-16 09:05:51,426:INFO:Naive Bayes Imported successfully
2025-03-16 09:05:51,431:INFO:Starting cross validation
2025-03-16 09:05:51,434:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-03-16 09:05:53,297:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:53,303:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:53,310:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:53,318:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:53,324:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:53,330:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:53,336:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:53,341:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:53,343:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:53,348:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:53,348:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:53,354:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:53,378:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:53,385:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:53,390:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:53,403:INFO:Calculating mean and std
2025-03-16 09:05:53,405:INFO:Creating metrics dataframe
2025-03-16 09:05:53,408:INFO:Uploading results into container
2025-03-16 09:05:53,408:INFO:Uploading model into container now
2025-03-16 09:05:53,409:INFO:_master_model_container: 3
2025-03-16 09:05:53,409:INFO:_display_container: 2
2025-03-16 09:05:53,410:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-03-16 09:05:53,410:INFO:create_model() successfully completed......................................
2025-03-16 09:05:53,500:INFO:SubProcess create_model() end ==================================
2025-03-16 09:05:53,500:INFO:Creating metrics dataframe
2025-03-16 09:05:53,506:INFO:Initializing Decision Tree Classifier
2025-03-16 09:05:53,506:INFO:Total runtime is 0.11517021656036376 minutes
2025-03-16 09:05:53,508:INFO:SubProcess create_model() called ==================================
2025-03-16 09:05:53,508:INFO:Initializing create_model()
2025-03-16 09:05:53,509:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E8EC04CFD0>, estimator=dt, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E8C8CC5630>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-16 09:05:53,509:INFO:Checking exceptions
2025-03-16 09:05:53,509:INFO:Importing libraries
2025-03-16 09:05:53,509:INFO:Copying training dataset
2025-03-16 09:05:53,514:INFO:Defining folds
2025-03-16 09:05:53,514:INFO:Declaring metric variables
2025-03-16 09:05:53,516:INFO:Importing untrained model
2025-03-16 09:05:53,519:INFO:Decision Tree Classifier Imported successfully
2025-03-16 09:05:53,524:INFO:Starting cross validation
2025-03-16 09:05:53,528:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-03-16 09:05:53,798:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:53,801:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:53,804:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:53,808:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:53,810:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:53,810:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:53,812:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:53,813:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:53,815:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:53,818:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:53,821:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:53,824:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:55,227:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:55,233:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:55,239:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:55,249:INFO:Calculating mean and std
2025-03-16 09:05:55,251:INFO:Creating metrics dataframe
2025-03-16 09:05:55,254:INFO:Uploading results into container
2025-03-16 09:05:55,255:INFO:Uploading model into container now
2025-03-16 09:05:55,255:INFO:_master_model_container: 4
2025-03-16 09:05:55,256:INFO:_display_container: 2
2025-03-16 09:05:55,256:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=43, splitter='best')
2025-03-16 09:05:55,256:INFO:create_model() successfully completed......................................
2025-03-16 09:05:55,354:INFO:SubProcess create_model() end ==================================
2025-03-16 09:05:55,354:INFO:Creating metrics dataframe
2025-03-16 09:05:55,359:INFO:Initializing SVM - Linear Kernel
2025-03-16 09:05:55,360:INFO:Total runtime is 0.14605608383814492 minutes
2025-03-16 09:05:55,363:INFO:SubProcess create_model() called ==================================
2025-03-16 09:05:55,363:INFO:Initializing create_model()
2025-03-16 09:05:55,363:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E8EC04CFD0>, estimator=svm, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E8C8CC5630>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-16 09:05:55,363:INFO:Checking exceptions
2025-03-16 09:05:55,363:INFO:Importing libraries
2025-03-16 09:05:55,363:INFO:Copying training dataset
2025-03-16 09:05:55,368:INFO:Defining folds
2025-03-16 09:05:55,368:INFO:Declaring metric variables
2025-03-16 09:05:55,371:INFO:Importing untrained model
2025-03-16 09:05:55,374:INFO:SVM - Linear Kernel Imported successfully
2025-03-16 09:05:55,379:INFO:Starting cross validation
2025-03-16 09:05:55,382:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-03-16 09:05:55,659:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:55,662:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:55,664:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:55,664:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:55,665:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:55,669:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:55,670:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:55,671:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:55,673:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:55,674:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:55,676:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:55,679:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:55,681:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:55,684:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:55,693:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:55,708:INFO:Calculating mean and std
2025-03-16 09:05:55,709:INFO:Creating metrics dataframe
2025-03-16 09:05:55,710:INFO:Uploading results into container
2025-03-16 09:05:55,711:INFO:Uploading model into container now
2025-03-16 09:05:55,711:INFO:_master_model_container: 5
2025-03-16 09:05:55,711:INFO:_display_container: 2
2025-03-16 09:05:55,712:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=43, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-03-16 09:05:55,712:INFO:create_model() successfully completed......................................
2025-03-16 09:05:55,790:INFO:SubProcess create_model() end ==================================
2025-03-16 09:05:55,790:INFO:Creating metrics dataframe
2025-03-16 09:05:55,795:INFO:Initializing Ridge Classifier
2025-03-16 09:05:55,796:INFO:Total runtime is 0.15333634614944455 minutes
2025-03-16 09:05:55,798:INFO:SubProcess create_model() called ==================================
2025-03-16 09:05:55,798:INFO:Initializing create_model()
2025-03-16 09:05:55,798:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E8EC04CFD0>, estimator=ridge, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E8C8CC5630>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-16 09:05:55,799:INFO:Checking exceptions
2025-03-16 09:05:55,799:INFO:Importing libraries
2025-03-16 09:05:55,799:INFO:Copying training dataset
2025-03-16 09:05:55,804:INFO:Defining folds
2025-03-16 09:05:55,804:INFO:Declaring metric variables
2025-03-16 09:05:55,806:INFO:Importing untrained model
2025-03-16 09:05:55,809:INFO:Ridge Classifier Imported successfully
2025-03-16 09:05:55,815:INFO:Starting cross validation
2025-03-16 09:05:55,818:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-03-16 09:05:56,087:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:56,089:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:56,091:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:56,093:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:56,094:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:56,094:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:56,097:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:56,099:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:56,099:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:56,100:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:56,100:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:56,103:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:56,105:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:56,105:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:56,111:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:56,120:INFO:Calculating mean and std
2025-03-16 09:05:56,120:INFO:Creating metrics dataframe
2025-03-16 09:05:56,123:INFO:Uploading results into container
2025-03-16 09:05:56,123:INFO:Uploading model into container now
2025-03-16 09:05:56,123:INFO:_master_model_container: 6
2025-03-16 09:05:56,124:INFO:_display_container: 2
2025-03-16 09:05:56,124:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=43, solver='auto',
                tol=0.0001)
2025-03-16 09:05:56,124:INFO:create_model() successfully completed......................................
2025-03-16 09:05:56,196:INFO:SubProcess create_model() end ==================================
2025-03-16 09:05:56,196:INFO:Creating metrics dataframe
2025-03-16 09:05:56,202:INFO:Initializing Random Forest Classifier
2025-03-16 09:05:56,202:INFO:Total runtime is 0.16009643872578935 minutes
2025-03-16 09:05:56,204:INFO:SubProcess create_model() called ==================================
2025-03-16 09:05:56,205:INFO:Initializing create_model()
2025-03-16 09:05:56,205:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E8EC04CFD0>, estimator=rf, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E8C8CC5630>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-16 09:05:56,205:INFO:Checking exceptions
2025-03-16 09:05:56,205:INFO:Importing libraries
2025-03-16 09:05:56,205:INFO:Copying training dataset
2025-03-16 09:05:56,209:INFO:Defining folds
2025-03-16 09:05:56,209:INFO:Declaring metric variables
2025-03-16 09:05:56,211:INFO:Importing untrained model
2025-03-16 09:05:56,214:INFO:Random Forest Classifier Imported successfully
2025-03-16 09:05:56,218:INFO:Starting cross validation
2025-03-16 09:05:56,221:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-03-16 09:05:56,724:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:56,725:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:56,729:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:56,730:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:56,735:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:56,736:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:56,740:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:56,740:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:56,741:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:56,745:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:56,746:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:56,749:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:56,751:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:56,752:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:56,755:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:56,765:INFO:Calculating mean and std
2025-03-16 09:05:56,766:INFO:Creating metrics dataframe
2025-03-16 09:05:56,768:INFO:Uploading results into container
2025-03-16 09:05:56,769:INFO:Uploading model into container now
2025-03-16 09:05:56,769:INFO:_master_model_container: 7
2025-03-16 09:05:56,769:INFO:_display_container: 2
2025-03-16 09:05:56,769:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=43, verbose=0,
                       warm_start=False)
2025-03-16 09:05:56,770:INFO:create_model() successfully completed......................................
2025-03-16 09:05:56,851:INFO:SubProcess create_model() end ==================================
2025-03-16 09:05:56,851:INFO:Creating metrics dataframe
2025-03-16 09:05:56,857:INFO:Initializing Quadratic Discriminant Analysis
2025-03-16 09:05:56,857:INFO:Total runtime is 0.1710141817728678 minutes
2025-03-16 09:05:56,860:INFO:SubProcess create_model() called ==================================
2025-03-16 09:05:56,860:INFO:Initializing create_model()
2025-03-16 09:05:56,860:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E8EC04CFD0>, estimator=qda, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E8C8CC5630>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-16 09:05:56,860:INFO:Checking exceptions
2025-03-16 09:05:56,860:INFO:Importing libraries
2025-03-16 09:05:56,860:INFO:Copying training dataset
2025-03-16 09:05:56,864:INFO:Defining folds
2025-03-16 09:05:56,864:INFO:Declaring metric variables
2025-03-16 09:05:56,866:INFO:Importing untrained model
2025-03-16 09:05:56,869:INFO:Quadratic Discriminant Analysis Imported successfully
2025-03-16 09:05:56,874:INFO:Starting cross validation
2025-03-16 09:05:56,877:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-03-16 09:05:57,074:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-16 09:05:57,080:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-16 09:05:57,081:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-16 09:05:57,085:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-16 09:05:57,089:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-16 09:05:57,138:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:57,140:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:57,140:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:57,143:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:57,144:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:57,145:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:57,146:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:57,146:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:57,150:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:57,150:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:57,152:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:57,153:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:57,154:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:57,158:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:57,160:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:57,176:INFO:Calculating mean and std
2025-03-16 09:05:57,176:INFO:Creating metrics dataframe
2025-03-16 09:05:57,178:INFO:Uploading results into container
2025-03-16 09:05:57,179:INFO:Uploading model into container now
2025-03-16 09:05:57,179:INFO:_master_model_container: 8
2025-03-16 09:05:57,179:INFO:_display_container: 2
2025-03-16 09:05:57,179:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-03-16 09:05:57,180:INFO:create_model() successfully completed......................................
2025-03-16 09:05:57,253:INFO:SubProcess create_model() end ==================================
2025-03-16 09:05:57,253:INFO:Creating metrics dataframe
2025-03-16 09:05:57,260:INFO:Initializing Ada Boost Classifier
2025-03-16 09:05:57,260:INFO:Total runtime is 0.1777371247609456 minutes
2025-03-16 09:05:57,262:INFO:SubProcess create_model() called ==================================
2025-03-16 09:05:57,263:INFO:Initializing create_model()
2025-03-16 09:05:57,263:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E8EC04CFD0>, estimator=ada, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E8C8CC5630>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-16 09:05:57,263:INFO:Checking exceptions
2025-03-16 09:05:57,263:INFO:Importing libraries
2025-03-16 09:05:57,263:INFO:Copying training dataset
2025-03-16 09:05:57,267:INFO:Defining folds
2025-03-16 09:05:57,267:INFO:Declaring metric variables
2025-03-16 09:05:57,269:INFO:Importing untrained model
2025-03-16 09:05:57,272:INFO:Ada Boost Classifier Imported successfully
2025-03-16 09:05:57,277:INFO:Starting cross validation
2025-03-16 09:05:57,280:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-03-16 09:05:57,471:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-16 09:05:57,476:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-16 09:05:57,480:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-16 09:05:57,484:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-16 09:05:57,490:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-16 09:05:57,723:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:57,723:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:57,726:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:57,729:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:57,730:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:57,732:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:57,732:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:57,734:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:57,735:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:57,735:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:57,737:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:57,737:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:57,740:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:57,742:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:57,745:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:57,757:INFO:Calculating mean and std
2025-03-16 09:05:57,758:INFO:Creating metrics dataframe
2025-03-16 09:05:57,760:INFO:Uploading results into container
2025-03-16 09:05:57,760:INFO:Uploading model into container now
2025-03-16 09:05:57,761:INFO:_master_model_container: 9
2025-03-16 09:05:57,761:INFO:_display_container: 2
2025-03-16 09:05:57,761:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=43)
2025-03-16 09:05:57,761:INFO:create_model() successfully completed......................................
2025-03-16 09:05:57,839:INFO:SubProcess create_model() end ==================================
2025-03-16 09:05:57,839:INFO:Creating metrics dataframe
2025-03-16 09:05:57,846:INFO:Initializing Gradient Boosting Classifier
2025-03-16 09:05:57,847:INFO:Total runtime is 0.1875176429748535 minutes
2025-03-16 09:05:57,849:INFO:SubProcess create_model() called ==================================
2025-03-16 09:05:57,849:INFO:Initializing create_model()
2025-03-16 09:05:57,849:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E8EC04CFD0>, estimator=gbc, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E8C8CC5630>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-16 09:05:57,849:INFO:Checking exceptions
2025-03-16 09:05:57,849:INFO:Importing libraries
2025-03-16 09:05:57,850:INFO:Copying training dataset
2025-03-16 09:05:57,854:INFO:Defining folds
2025-03-16 09:05:57,854:INFO:Declaring metric variables
2025-03-16 09:05:57,856:INFO:Importing untrained model
2025-03-16 09:05:57,859:INFO:Gradient Boosting Classifier Imported successfully
2025-03-16 09:05:57,865:INFO:Starting cross validation
2025-03-16 09:05:57,868:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-03-16 09:05:58,653:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:58,658:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:58,659:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:58,664:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:58,665:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:58,670:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:58,683:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:58,685:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:58,686:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:58,689:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:58,690:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:58,691:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:58,694:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:58,696:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:58,697:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:58,707:INFO:Calculating mean and std
2025-03-16 09:05:58,707:INFO:Creating metrics dataframe
2025-03-16 09:05:58,709:INFO:Uploading results into container
2025-03-16 09:05:58,710:INFO:Uploading model into container now
2025-03-16 09:05:58,710:INFO:_master_model_container: 10
2025-03-16 09:05:58,710:INFO:_display_container: 2
2025-03-16 09:05:58,711:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=43, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-03-16 09:05:58,711:INFO:create_model() successfully completed......................................
2025-03-16 09:05:58,790:INFO:SubProcess create_model() end ==================================
2025-03-16 09:05:58,790:INFO:Creating metrics dataframe
2025-03-16 09:05:58,797:INFO:Initializing Linear Discriminant Analysis
2025-03-16 09:05:58,798:INFO:Total runtime is 0.20336983203887937 minutes
2025-03-16 09:05:58,800:INFO:SubProcess create_model() called ==================================
2025-03-16 09:05:58,800:INFO:Initializing create_model()
2025-03-16 09:05:58,800:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E8EC04CFD0>, estimator=lda, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E8C8CC5630>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-16 09:05:58,800:INFO:Checking exceptions
2025-03-16 09:05:58,801:INFO:Importing libraries
2025-03-16 09:05:58,801:INFO:Copying training dataset
2025-03-16 09:05:58,805:INFO:Defining folds
2025-03-16 09:05:58,805:INFO:Declaring metric variables
2025-03-16 09:05:58,807:INFO:Importing untrained model
2025-03-16 09:05:58,810:INFO:Linear Discriminant Analysis Imported successfully
2025-03-16 09:05:58,816:INFO:Starting cross validation
2025-03-16 09:05:58,821:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-03-16 09:05:59,067:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:59,073:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:59,080:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:59,084:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:59,087:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:59,089:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:59,090:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:59,092:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:59,093:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:59,095:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:59,096:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:59,097:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:59,098:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:59,101:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:59,103:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:59,118:INFO:Calculating mean and std
2025-03-16 09:05:59,118:INFO:Creating metrics dataframe
2025-03-16 09:05:59,121:INFO:Uploading results into container
2025-03-16 09:05:59,121:INFO:Uploading model into container now
2025-03-16 09:05:59,121:INFO:_master_model_container: 11
2025-03-16 09:05:59,121:INFO:_display_container: 2
2025-03-16 09:05:59,122:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-03-16 09:05:59,122:INFO:create_model() successfully completed......................................
2025-03-16 09:05:59,194:INFO:SubProcess create_model() end ==================================
2025-03-16 09:05:59,194:INFO:Creating metrics dataframe
2025-03-16 09:05:59,202:INFO:Initializing Extra Trees Classifier
2025-03-16 09:05:59,202:INFO:Total runtime is 0.21009322802225747 minutes
2025-03-16 09:05:59,204:INFO:SubProcess create_model() called ==================================
2025-03-16 09:05:59,204:INFO:Initializing create_model()
2025-03-16 09:05:59,204:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E8EC04CFD0>, estimator=et, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E8C8CC5630>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-16 09:05:59,205:INFO:Checking exceptions
2025-03-16 09:05:59,205:INFO:Importing libraries
2025-03-16 09:05:59,205:INFO:Copying training dataset
2025-03-16 09:05:59,209:INFO:Defining folds
2025-03-16 09:05:59,209:INFO:Declaring metric variables
2025-03-16 09:05:59,211:INFO:Importing untrained model
2025-03-16 09:05:59,214:INFO:Extra Trees Classifier Imported successfully
2025-03-16 09:05:59,220:INFO:Starting cross validation
2025-03-16 09:05:59,224:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-03-16 09:05:59,753:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:59,759:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:59,767:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:59,769:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:59,769:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:59,769:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:59,770:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:59,774:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:59,775:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:59,775:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:59,777:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:59,780:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:59,780:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:59,781:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:59,783:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:05:59,807:INFO:Calculating mean and std
2025-03-16 09:05:59,808:INFO:Creating metrics dataframe
2025-03-16 09:05:59,810:INFO:Uploading results into container
2025-03-16 09:05:59,810:INFO:Uploading model into container now
2025-03-16 09:05:59,810:INFO:_master_model_container: 12
2025-03-16 09:05:59,811:INFO:_display_container: 2
2025-03-16 09:05:59,811:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=43, verbose=0,
                     warm_start=False)
2025-03-16 09:05:59,811:INFO:create_model() successfully completed......................................
2025-03-16 09:05:59,887:INFO:SubProcess create_model() end ==================================
2025-03-16 09:05:59,887:INFO:Creating metrics dataframe
2025-03-16 09:05:59,894:INFO:Initializing Light Gradient Boosting Machine
2025-03-16 09:05:59,894:INFO:Total runtime is 0.2216215928395589 minutes
2025-03-16 09:05:59,897:INFO:SubProcess create_model() called ==================================
2025-03-16 09:05:59,897:INFO:Initializing create_model()
2025-03-16 09:05:59,897:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E8EC04CFD0>, estimator=lightgbm, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E8C8CC5630>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-16 09:05:59,897:INFO:Checking exceptions
2025-03-16 09:05:59,897:INFO:Importing libraries
2025-03-16 09:05:59,897:INFO:Copying training dataset
2025-03-16 09:05:59,901:INFO:Defining folds
2025-03-16 09:05:59,901:INFO:Declaring metric variables
2025-03-16 09:05:59,904:INFO:Importing untrained model
2025-03-16 09:05:59,906:INFO:Light Gradient Boosting Machine Imported successfully
2025-03-16 09:05:59,911:INFO:Starting cross validation
2025-03-16 09:05:59,914:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-03-16 09:06:00,430:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:06:00,441:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:06:00,445:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:06:00,450:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:06:00,455:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:06:00,460:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:06:00,463:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:06:00,469:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:06:00,503:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:06:00,513:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:06:00,522:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:06:00,566:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:06:00,575:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:06:00,583:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:06:00,603:INFO:Calculating mean and std
2025-03-16 09:06:00,604:INFO:Creating metrics dataframe
2025-03-16 09:06:00,606:INFO:Uploading results into container
2025-03-16 09:06:00,607:INFO:Uploading model into container now
2025-03-16 09:06:00,607:INFO:_master_model_container: 13
2025-03-16 09:06:00,608:INFO:_display_container: 2
2025-03-16 09:06:00,609:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=43, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-03-16 09:06:00,609:INFO:create_model() successfully completed......................................
2025-03-16 09:06:00,698:INFO:SubProcess create_model() end ==================================
2025-03-16 09:06:00,698:INFO:Creating metrics dataframe
2025-03-16 09:06:00,706:INFO:Initializing Dummy Classifier
2025-03-16 09:06:00,706:INFO:Total runtime is 0.23515650431315102 minutes
2025-03-16 09:06:00,709:INFO:SubProcess create_model() called ==================================
2025-03-16 09:06:00,709:INFO:Initializing create_model()
2025-03-16 09:06:00,709:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E8EC04CFD0>, estimator=dummy, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E8C8CC5630>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-16 09:06:00,709:INFO:Checking exceptions
2025-03-16 09:06:00,709:INFO:Importing libraries
2025-03-16 09:06:00,709:INFO:Copying training dataset
2025-03-16 09:06:00,714:INFO:Defining folds
2025-03-16 09:06:00,714:INFO:Declaring metric variables
2025-03-16 09:06:00,717:INFO:Importing untrained model
2025-03-16 09:06:00,720:INFO:Dummy Classifier Imported successfully
2025-03-16 09:06:00,725:INFO:Starting cross validation
2025-03-16 09:06:00,728:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-03-16 09:06:00,990:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:06:00,992:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:06:00,995:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:06:00,996:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:06:00,997:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:06:00,997:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:06:00,998:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-16 09:06:01,000:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:06:01,001:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:06:01,001:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-16 09:06:01,002:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:06:01,002:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:06:01,004:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:06:01,005:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-16 09:06:01,005:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-16 09:06:01,006:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:06:01,008:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:06:01,008:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:06:01,009:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-16 09:06:01,012:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:06:01,030:INFO:Calculating mean and std
2025-03-16 09:06:01,031:INFO:Creating metrics dataframe
2025-03-16 09:06:01,032:INFO:Uploading results into container
2025-03-16 09:06:01,033:INFO:Uploading model into container now
2025-03-16 09:06:01,033:INFO:_master_model_container: 14
2025-03-16 09:06:01,033:INFO:_display_container: 2
2025-03-16 09:06:01,034:INFO:DummyClassifier(constant=None, random_state=43, strategy='prior')
2025-03-16 09:06:01,034:INFO:create_model() successfully completed......................................
2025-03-16 09:06:01,110:INFO:SubProcess create_model() end ==================================
2025-03-16 09:06:01,110:INFO:Creating metrics dataframe
2025-03-16 09:06:01,118:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning:

Styler.applymap has been deprecated. Use Styler.map instead.


2025-03-16 09:06:01,124:INFO:Initializing create_model()
2025-03-16 09:06:01,124:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E8EC04CFD0>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=43, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-16 09:06:01,124:INFO:Checking exceptions
2025-03-16 09:06:01,125:INFO:Importing libraries
2025-03-16 09:06:01,125:INFO:Copying training dataset
2025-03-16 09:06:01,129:INFO:Defining folds
2025-03-16 09:06:01,129:INFO:Declaring metric variables
2025-03-16 09:06:01,129:INFO:Importing untrained model
2025-03-16 09:06:01,129:INFO:Declaring custom model
2025-03-16 09:06:01,130:INFO:Gradient Boosting Classifier Imported successfully
2025-03-16 09:06:01,132:INFO:Cross validation set to False
2025-03-16 09:06:01,132:INFO:Fitting Model
2025-03-16 09:06:01,899:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=43, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-03-16 09:06:01,899:INFO:create_model() successfully completed......................................
2025-03-16 09:06:01,991:INFO:_master_model_container: 14
2025-03-16 09:06:01,991:INFO:_display_container: 2
2025-03-16 09:06:01,992:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=43, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-03-16 09:06:01,992:INFO:compare_models() successfully completed......................................
2025-03-16 09:06:02,024:INFO:gpu_param set to False
2025-03-16 09:06:02,080:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-16 09:06:02,080:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-16 09:06:02,132:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-16 09:06:02,132:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-16 09:06:02,164:INFO:Initializing create_model()
2025-03-16 09:06:02,164:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E8EC04CFD0>, estimator=knn, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_neighbors': 5, 'metric': 'manhattan'})
2025-03-16 09:06:02,164:INFO:Checking exceptions
2025-03-16 09:06:02,179:INFO:Importing libraries
2025-03-16 09:06:02,179:INFO:Copying training dataset
2025-03-16 09:06:02,186:INFO:Defining folds
2025-03-16 09:06:02,186:INFO:Declaring metric variables
2025-03-16 09:06:02,189:INFO:Importing untrained model
2025-03-16 09:06:02,192:INFO:K Neighbors Classifier Imported successfully
2025-03-16 09:06:02,199:INFO:Starting cross validation
2025-03-16 09:06:02,204:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-03-16 09:06:02,741:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:06:02,746:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:06:02,746:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:06:02,748:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:06:02,751:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:06:02,751:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:06:02,752:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:06:02,753:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:06:02,755:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:06:02,756:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:06:02,758:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:06:02,761:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:06:02,762:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:06:02,764:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:06:02,764:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:06:02,783:INFO:Calculating mean and std
2025-03-16 09:06:02,783:INFO:Creating metrics dataframe
2025-03-16 09:06:02,787:INFO:Finalizing model
2025-03-16 09:06:02,949:INFO:Uploading results into container
2025-03-16 09:06:02,950:INFO:Uploading model into container now
2025-03-16 09:06:02,956:INFO:_master_model_container: 15
2025-03-16 09:06:02,956:INFO:_display_container: 3
2025-03-16 09:06:02,957:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='manhattan',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-03-16 09:06:02,957:INFO:create_model() successfully completed......................................
2025-03-16 09:06:03,062:INFO:Initializing evaluate_model()
2025-03-16 09:06:03,062:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E8EC04CFD0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='manhattan',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2025-03-16 09:06:03,071:INFO:Initializing plot_model()
2025-03-16 09:06:03,071:INFO:plot_model(plot=pipeline, fold=KFold(n_splits=5, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='manhattan',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E8EC04CFD0>, system=True)
2025-03-16 09:06:03,071:INFO:Checking exceptions
2025-03-16 09:06:03,073:INFO:Preloading libraries
2025-03-16 09:06:03,074:INFO:Copying training dataset
2025-03-16 09:06:03,074:INFO:Plot type: pipeline
2025-03-16 09:06:03,223:INFO:Visual Rendered Successfully
2025-03-16 09:06:03,314:INFO:plot_model() successfully completed......................................
2025-03-16 09:06:03,343:INFO:Initializing evaluate_model()
2025-03-16 09:06:03,343:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E8EC04CFD0>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=43, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2025-03-16 09:06:03,356:INFO:Initializing plot_model()
2025-03-16 09:06:03,356:INFO:plot_model(plot=pipeline, fold=KFold(n_splits=5, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=43, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E8EC04CFD0>, system=True)
2025-03-16 09:06:03,357:INFO:Checking exceptions
2025-03-16 09:06:03,361:INFO:Preloading libraries
2025-03-16 09:06:03,370:INFO:Copying training dataset
2025-03-16 09:06:03,370:INFO:Plot type: pipeline
2025-03-16 09:06:03,502:INFO:Visual Rendered Successfully
2025-03-16 09:06:03,588:INFO:plot_model() successfully completed......................................
2025-03-16 09:06:39,653:INFO:Initializing tune_model()
2025-03-16 09:06:39,653:INFO:tune_model(estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='manhattan',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E8EC04CFD0>)
2025-03-16 09:06:39,653:INFO:Checking exceptions
2025-03-16 09:06:39,672:INFO:Copying training dataset
2025-03-16 09:06:39,677:INFO:Checking base model
2025-03-16 09:06:39,677:INFO:Base model : K Neighbors Classifier
2025-03-16 09:06:39,680:INFO:Declaring metric variables
2025-03-16 09:06:39,684:INFO:Defining Hyperparameters
2025-03-16 09:06:39,788:INFO:Tuning with n_jobs=-1
2025-03-16 09:06:39,788:INFO:Initializing RandomizedSearchCV
2025-03-16 09:06:42,282:INFO:best_params: {'actual_estimator__weights': 'uniform', 'actual_estimator__n_neighbors': 30, 'actual_estimator__metric': 'minkowski'}
2025-03-16 09:06:42,282:INFO:Hyperparameter search completed
2025-03-16 09:06:42,283:INFO:SubProcess create_model() called ==================================
2025-03-16 09:06:42,283:INFO:Initializing create_model()
2025-03-16 09:06:42,283:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E8EC04CFD0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='manhattan',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E8C71BB700>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'weights': 'uniform', 'n_neighbors': 30, 'metric': 'minkowski'})
2025-03-16 09:06:42,283:INFO:Checking exceptions
2025-03-16 09:06:42,283:INFO:Importing libraries
2025-03-16 09:06:42,284:INFO:Copying training dataset
2025-03-16 09:06:42,288:INFO:Defining folds
2025-03-16 09:06:42,288:INFO:Declaring metric variables
2025-03-16 09:06:42,290:INFO:Importing untrained model
2025-03-16 09:06:42,290:INFO:Declaring custom model
2025-03-16 09:06:42,293:INFO:K Neighbors Classifier Imported successfully
2025-03-16 09:06:42,298:INFO:Starting cross validation
2025-03-16 09:06:42,300:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-03-16 09:06:42,623:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:06:42,628:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:06:42,633:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:06:42,635:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:06:42,637:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:06:42,641:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:06:42,641:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:06:42,642:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:06:42,643:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:06:42,646:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:06:42,647:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:06:42,648:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:06:42,649:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:06:42,652:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:06:42,654:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:06:42,674:INFO:Calculating mean and std
2025-03-16 09:06:42,675:INFO:Creating metrics dataframe
2025-03-16 09:06:42,679:INFO:Finalizing model
2025-03-16 09:06:42,840:INFO:Uploading results into container
2025-03-16 09:06:42,841:INFO:Uploading model into container now
2025-03-16 09:06:42,841:INFO:_master_model_container: 16
2025-03-16 09:06:42,841:INFO:_display_container: 4
2025-03-16 09:06:42,841:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=30, p=2,
                     weights='uniform')
2025-03-16 09:06:42,842:INFO:create_model() successfully completed......................................
2025-03-16 09:06:42,919:INFO:SubProcess create_model() end ==================================
2025-03-16 09:06:42,919:INFO:choose_better activated
2025-03-16 09:06:42,921:INFO:SubProcess create_model() called ==================================
2025-03-16 09:06:42,922:INFO:Initializing create_model()
2025-03-16 09:06:42,922:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E8EC04CFD0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='manhattan',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-16 09:06:42,922:INFO:Checking exceptions
2025-03-16 09:06:42,924:INFO:Importing libraries
2025-03-16 09:06:42,924:INFO:Copying training dataset
2025-03-16 09:06:42,928:INFO:Defining folds
2025-03-16 09:06:42,928:INFO:Declaring metric variables
2025-03-16 09:06:42,928:INFO:Importing untrained model
2025-03-16 09:06:42,928:INFO:Declaring custom model
2025-03-16 09:06:42,928:INFO:K Neighbors Classifier Imported successfully
2025-03-16 09:06:42,928:INFO:Starting cross validation
2025-03-16 09:06:42,931:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-03-16 09:06:43,396:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:06:43,397:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:06:43,400:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:06:43,401:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:06:43,403:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:06:43,404:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:06:43,405:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:06:43,406:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:06:43,407:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:06:43,408:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:06:43,409:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:06:43,411:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:06:43,411:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:06:43,412:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:06:43,416:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:06:43,431:INFO:Calculating mean and std
2025-03-16 09:06:43,431:INFO:Creating metrics dataframe
2025-03-16 09:06:43,433:INFO:Finalizing model
2025-03-16 09:06:43,589:INFO:Uploading results into container
2025-03-16 09:06:43,590:INFO:Uploading model into container now
2025-03-16 09:06:43,590:INFO:_master_model_container: 17
2025-03-16 09:06:43,590:INFO:_display_container: 5
2025-03-16 09:06:43,590:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='manhattan',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-03-16 09:06:43,591:INFO:create_model() successfully completed......................................
2025-03-16 09:06:43,664:INFO:SubProcess create_model() end ==================================
2025-03-16 09:06:43,664:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='manhattan',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform') result for Accuracy is 0.7586
2025-03-16 09:06:43,665:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=30, p=2,
                     weights='uniform') result for Accuracy is 0.7902
2025-03-16 09:06:43,665:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=30, p=2,
                     weights='uniform') is best model
2025-03-16 09:06:43,665:INFO:choose_better completed
2025-03-16 09:06:43,671:INFO:_master_model_container: 17
2025-03-16 09:06:43,671:INFO:_display_container: 4
2025-03-16 09:06:43,671:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=30, p=2,
                     weights='uniform')
2025-03-16 09:06:43,672:INFO:tune_model() successfully completed......................................
2025-03-16 09:07:57,379:INFO:Initializing evaluate_model()
2025-03-16 09:07:57,379:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E8EC04CFD0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=30, p=2,
                     weights='uniform'), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2025-03-16 09:07:57,388:INFO:Initializing plot_model()
2025-03-16 09:07:57,388:INFO:plot_model(plot=pipeline, fold=KFold(n_splits=5, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=30, p=2,
                     weights='uniform'), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E8EC04CFD0>, system=True)
2025-03-16 09:07:57,388:INFO:Checking exceptions
2025-03-16 09:07:57,390:INFO:Preloading libraries
2025-03-16 09:07:57,391:INFO:Copying training dataset
2025-03-16 09:07:57,391:INFO:Plot type: pipeline
2025-03-16 09:07:57,512:INFO:Visual Rendered Successfully
2025-03-16 09:07:57,593:INFO:plot_model() successfully completed......................................
2025-03-16 09:08:00,679:INFO:Initializing plot_model()
2025-03-16 09:08:00,679:INFO:plot_model(plot=feature, fold=KFold(n_splits=5, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=30, p=2,
                     weights='uniform'), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E8EC04CFD0>, system=True)
2025-03-16 09:08:00,679:INFO:Checking exceptions
2025-03-16 09:08:03,859:INFO:Initializing plot_model()
2025-03-16 09:08:03,859:INFO:plot_model(plot=feature_all, fold=KFold(n_splits=5, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=30, p=2,
                     weights='uniform'), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E8EC04CFD0>, system=True)
2025-03-16 09:08:03,859:INFO:Checking exceptions
2025-03-16 09:08:05,398:INFO:Initializing plot_model()
2025-03-16 09:08:05,398:INFO:plot_model(plot=parameter, fold=KFold(n_splits=5, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=30, p=2,
                     weights='uniform'), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E8EC04CFD0>, system=True)
2025-03-16 09:08:05,398:INFO:Checking exceptions
2025-03-16 09:08:05,400:INFO:Preloading libraries
2025-03-16 09:08:05,401:INFO:Copying training dataset
2025-03-16 09:08:05,401:INFO:Plot type: parameter
2025-03-16 09:08:05,403:INFO:Visual Rendered Successfully
2025-03-16 09:08:05,487:INFO:plot_model() successfully completed......................................
2025-03-16 09:08:07,643:INFO:Initializing plot_model()
2025-03-16 09:08:07,643:INFO:plot_model(plot=threshold, fold=KFold(n_splits=5, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=30, p=2,
                     weights='uniform'), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E8EC04CFD0>, system=True)
2025-03-16 09:08:07,643:INFO:Checking exceptions
2025-03-16 09:08:07,645:INFO:Preloading libraries
2025-03-16 09:08:07,646:INFO:Copying training dataset
2025-03-16 09:08:07,646:INFO:Plot type: threshold
2025-03-16 09:08:07,930:INFO:Fitting Model
2025-03-16 09:08:08,667:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\base.py:493: UserWarning:

X does not have valid feature names, but KNeighborsClassifier was fitted with feature names


2025-03-16 09:08:08,683:INFO:Scoring test/hold-out set
2025-03-16 09:08:08,947:INFO:Visual Rendered Successfully
2025-03-16 09:08:09,036:INFO:plot_model() successfully completed......................................
2025-03-16 09:08:11,038:INFO:Initializing plot_model()
2025-03-16 09:08:11,039:INFO:plot_model(plot=confusion_matrix, fold=KFold(n_splits=5, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=30, p=2,
                     weights='uniform'), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E8EC04CFD0>, system=True)
2025-03-16 09:08:11,039:INFO:Checking exceptions
2025-03-16 09:08:11,041:INFO:Preloading libraries
2025-03-16 09:08:11,042:INFO:Copying training dataset
2025-03-16 09:08:11,042:INFO:Plot type: confusion_matrix
2025-03-16 09:08:11,326:INFO:Fitting Model
2025-03-16 09:08:11,326:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\base.py:493: UserWarning:

X does not have valid feature names, but KNeighborsClassifier was fitted with feature names


2025-03-16 09:08:11,326:INFO:Scoring test/hold-out set
2025-03-16 09:08:11,504:INFO:Visual Rendered Successfully
2025-03-16 09:08:11,581:INFO:plot_model() successfully completed......................................
2025-03-16 09:08:46,295:INFO:Initializing tune_model()
2025-03-16 09:08:46,295:INFO:tune_model(estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=43, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E8EC04CFD0>)
2025-03-16 09:08:46,299:INFO:Checking exceptions
2025-03-16 09:08:46,313:INFO:Copying training dataset
2025-03-16 09:08:46,318:INFO:Checking base model
2025-03-16 09:08:46,318:INFO:Base model : Gradient Boosting Classifier
2025-03-16 09:08:46,320:INFO:Declaring metric variables
2025-03-16 09:08:46,324:INFO:Defining Hyperparameters
2025-03-16 09:08:46,435:INFO:Tuning with n_jobs=-1
2025-03-16 09:08:46,435:INFO:Initializing RandomizedSearchCV
2025-03-16 09:08:51,448:INFO:best_params: {'actual_estimator__subsample': 0.35, 'actual_estimator__n_estimators': 270, 'actual_estimator__min_samples_split': 7, 'actual_estimator__min_samples_leaf': 3, 'actual_estimator__min_impurity_decrease': 0.5, 'actual_estimator__max_features': 'log2', 'actual_estimator__max_depth': 8, 'actual_estimator__learning_rate': 0.1}
2025-03-16 09:08:51,449:INFO:Hyperparameter search completed
2025-03-16 09:08:51,449:INFO:SubProcess create_model() called ==================================
2025-03-16 09:08:51,450:INFO:Initializing create_model()
2025-03-16 09:08:51,450:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E8EC04CFD0>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=43, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E8EC31E140>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'subsample': 0.35, 'n_estimators': 270, 'min_samples_split': 7, 'min_samples_leaf': 3, 'min_impurity_decrease': 0.5, 'max_features': 'log2', 'max_depth': 8, 'learning_rate': 0.1})
2025-03-16 09:08:51,450:INFO:Checking exceptions
2025-03-16 09:08:51,450:INFO:Importing libraries
2025-03-16 09:08:51,450:INFO:Copying training dataset
2025-03-16 09:08:51,456:INFO:Defining folds
2025-03-16 09:08:51,456:INFO:Declaring metric variables
2025-03-16 09:08:51,458:INFO:Importing untrained model
2025-03-16 09:08:51,458:INFO:Declaring custom model
2025-03-16 09:08:51,461:INFO:Gradient Boosting Classifier Imported successfully
2025-03-16 09:08:51,466:INFO:Starting cross validation
2025-03-16 09:08:51,470:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-03-16 09:08:51,960:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:08:51,965:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:08:51,970:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:08:51,975:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:08:51,981:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:08:51,986:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:08:51,992:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:08:51,997:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:08:51,998:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:08:52,003:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:08:52,003:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:08:52,006:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:08:52,008:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:08:52,011:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:08:52,016:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:08:52,033:INFO:Calculating mean and std
2025-03-16 09:08:52,034:INFO:Creating metrics dataframe
2025-03-16 09:08:52,038:INFO:Finalizing model
2025-03-16 09:08:52,476:INFO:Uploading results into container
2025-03-16 09:08:52,477:INFO:Uploading model into container now
2025-03-16 09:08:52,478:INFO:_master_model_container: 18
2025-03-16 09:08:52,478:INFO:_display_container: 5
2025-03-16 09:08:52,478:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=8,
                           max_features='log2', max_leaf_nodes=None,
                           min_impurity_decrease=0.5, min_samples_leaf=3,
                           min_samples_split=7, min_weight_fraction_leaf=0.0,
                           n_estimators=270, n_iter_no_change=None,
                           random_state=43, subsample=0.35, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-03-16 09:08:52,478:INFO:create_model() successfully completed......................................
2025-03-16 09:08:52,563:INFO:SubProcess create_model() end ==================================
2025-03-16 09:08:52,564:INFO:choose_better activated
2025-03-16 09:08:52,566:INFO:SubProcess create_model() called ==================================
2025-03-16 09:08:52,567:INFO:Initializing create_model()
2025-03-16 09:08:52,567:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E8EC04CFD0>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=43, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-16 09:08:52,567:INFO:Checking exceptions
2025-03-16 09:08:52,569:INFO:Importing libraries
2025-03-16 09:08:52,569:INFO:Copying training dataset
2025-03-16 09:08:52,573:INFO:Defining folds
2025-03-16 09:08:52,573:INFO:Declaring metric variables
2025-03-16 09:08:52,573:INFO:Importing untrained model
2025-03-16 09:08:52,573:INFO:Declaring custom model
2025-03-16 09:08:52,574:INFO:Gradient Boosting Classifier Imported successfully
2025-03-16 09:08:52,574:INFO:Starting cross validation
2025-03-16 09:08:52,576:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-03-16 09:08:53,346:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:08:53,352:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:08:53,352:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:08:53,357:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:08:53,358:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:08:53,362:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:08:53,379:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:08:53,384:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:08:53,386:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:08:53,390:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:08:53,392:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:08:53,392:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:08:53,397:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:08:53,398:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:08:53,405:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 09:08:53,424:INFO:Calculating mean and std
2025-03-16 09:08:53,424:INFO:Creating metrics dataframe
2025-03-16 09:08:53,426:INFO:Finalizing model
2025-03-16 09:08:54,186:INFO:Uploading results into container
2025-03-16 09:08:54,187:INFO:Uploading model into container now
2025-03-16 09:08:54,187:INFO:_master_model_container: 19
2025-03-16 09:08:54,187:INFO:_display_container: 6
2025-03-16 09:08:54,187:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=43, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-03-16 09:08:54,187:INFO:create_model() successfully completed......................................
2025-03-16 09:08:54,269:INFO:SubProcess create_model() end ==================================
2025-03-16 09:08:54,270:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=43, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False) result for Accuracy is 0.8063
2025-03-16 09:08:54,270:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=8,
                           max_features='log2', max_leaf_nodes=None,
                           min_impurity_decrease=0.5, min_samples_leaf=3,
                           min_samples_split=7, min_weight_fraction_leaf=0.0,
                           n_estimators=270, n_iter_no_change=None,
                           random_state=43, subsample=0.35, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False) result for Accuracy is 0.804
2025-03-16 09:08:54,271:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=43, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False) is best model
2025-03-16 09:08:54,271:INFO:choose_better completed
2025-03-16 09:08:54,271:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2025-03-16 09:08:54,277:INFO:_master_model_container: 19
2025-03-16 09:08:54,278:INFO:_display_container: 5
2025-03-16 09:08:54,278:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=43, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-03-16 09:08:54,278:INFO:tune_model() successfully completed......................................
2025-03-16 11:34:52,600:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-16 11:34:52,600:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-16 11:34:52,600:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-16 11:34:52,600:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-16 11:34:53,576:INFO:PyCaret ClassificationExperiment
2025-03-16 11:34:53,576:INFO:Logging name: clf-default-name
2025-03-16 11:34:53,576:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-03-16 11:34:53,576:INFO:version 3.3.2
2025-03-16 11:34:53,576:INFO:Initializing setup()
2025-03-16 11:34:53,577:INFO:self.USI: d210
2025-03-16 11:34:53,577:INFO:self._variable_keys: {'log_plots_param', 'y_train', 'fold_generator', 'X_train', 'idx', 'fold_shuffle_param', 'is_multiclass', 'y_test', 'n_jobs_param', 'USI', 'memory', 'logging_param', 'fix_imbalance', 'y', 'gpu_n_jobs_param', 'fold_groups_param', '_ml_usecase', 'data', 'X_test', 'exp_name_log', 'html_param', 'pipeline', 'exp_id', 'X', 'target_param', 'seed', 'gpu_param', '_available_plots'}
2025-03-16 11:34:53,577:INFO:Checking environment
2025-03-16 11:34:53,577:INFO:python_version: 3.10.16
2025-03-16 11:34:53,577:INFO:python_build: ('main', 'Dec 11 2024 16:19:12')
2025-03-16 11:34:53,577:INFO:machine: AMD64
2025-03-16 11:34:53,577:INFO:platform: Windows-10-10.0.26100-SP0
2025-03-16 11:34:53,583:INFO:Memory: svmem(total=17085845504, available=4270989312, percent=75.0, used=12814856192, free=4270989312)
2025-03-16 11:34:53,583:INFO:Physical Core: 8
2025-03-16 11:34:53,583:INFO:Logical Core: 16
2025-03-16 11:34:53,583:INFO:Checking libraries
2025-03-16 11:34:53,583:INFO:System:
2025-03-16 11:34:53,583:INFO:    python: 3.10.16 | packaged by Anaconda, Inc. | (main, Dec 11 2024, 16:19:12) [MSC v.1929 64 bit (AMD64)]
2025-03-16 11:34:53,583:INFO:executable: g:\ML\envs\pycaret_env\python.exe
2025-03-16 11:34:53,583:INFO:   machine: Windows-10-10.0.26100-SP0
2025-03-16 11:34:53,583:INFO:PyCaret required dependencies:
2025-03-16 11:34:53,660:INFO:                 pip: 25.0
2025-03-16 11:34:53,660:INFO:          setuptools: 75.8.0
2025-03-16 11:34:53,660:INFO:             pycaret: 3.3.2
2025-03-16 11:34:53,660:INFO:             IPython: 8.34.0
2025-03-16 11:34:53,660:INFO:          ipywidgets: 8.1.5
2025-03-16 11:34:53,660:INFO:                tqdm: 4.67.1
2025-03-16 11:34:53,660:INFO:               numpy: 1.26.4
2025-03-16 11:34:53,660:INFO:              pandas: 2.1.4
2025-03-16 11:34:53,660:INFO:              jinja2: 3.1.6
2025-03-16 11:34:53,660:INFO:               scipy: 1.11.4
2025-03-16 11:34:53,660:INFO:              joblib: 1.3.2
2025-03-16 11:34:53,660:INFO:             sklearn: 1.4.2
2025-03-16 11:34:53,660:INFO:                pyod: 2.0.3
2025-03-16 11:34:53,661:INFO:            imblearn: 0.13.0
2025-03-16 11:34:53,661:INFO:   category_encoders: 2.7.0
2025-03-16 11:34:53,661:INFO:            lightgbm: 4.6.0
2025-03-16 11:34:53,661:INFO:               numba: 0.61.0
2025-03-16 11:34:53,661:INFO:            requests: 2.32.3
2025-03-16 11:34:53,661:INFO:          matplotlib: 3.7.5
2025-03-16 11:34:53,661:INFO:          scikitplot: 0.3.7
2025-03-16 11:34:53,661:INFO:         yellowbrick: 1.5
2025-03-16 11:34:53,661:INFO:              plotly: 5.24.1
2025-03-16 11:34:53,661:INFO:    plotly-resampler: Not installed
2025-03-16 11:34:53,661:INFO:             kaleido: 0.2.1
2025-03-16 11:34:53,661:INFO:           schemdraw: 0.15
2025-03-16 11:34:53,661:INFO:         statsmodels: 0.14.4
2025-03-16 11:34:53,661:INFO:              sktime: 0.26.0
2025-03-16 11:34:53,661:INFO:               tbats: 1.1.3
2025-03-16 11:34:53,661:INFO:            pmdarima: 2.0.4
2025-03-16 11:34:53,661:INFO:              psutil: 7.0.0
2025-03-16 11:34:53,661:INFO:          markupsafe: 3.0.2
2025-03-16 11:34:53,661:INFO:             pickle5: Not installed
2025-03-16 11:34:53,661:INFO:         cloudpickle: 3.1.1
2025-03-16 11:34:53,661:INFO:         deprecation: 2.1.0
2025-03-16 11:34:53,661:INFO:              xxhash: 3.5.0
2025-03-16 11:34:53,661:INFO:           wurlitzer: Not installed
2025-03-16 11:34:53,661:INFO:PyCaret optional dependencies:
2025-03-16 11:34:53,672:INFO:                shap: Not installed
2025-03-16 11:34:53,672:INFO:           interpret: Not installed
2025-03-16 11:34:53,672:INFO:                umap: Not installed
2025-03-16 11:34:53,672:INFO:     ydata_profiling: Not installed
2025-03-16 11:34:53,672:INFO:  explainerdashboard: Not installed
2025-03-16 11:34:53,672:INFO:             autoviz: Not installed
2025-03-16 11:34:53,672:INFO:           fairlearn: Not installed
2025-03-16 11:34:53,672:INFO:          deepchecks: Not installed
2025-03-16 11:34:53,673:INFO:             xgboost: Not installed
2025-03-16 11:34:53,673:INFO:            catboost: Not installed
2025-03-16 11:34:53,673:INFO:              kmodes: Not installed
2025-03-16 11:34:53,673:INFO:             mlxtend: Not installed
2025-03-16 11:34:53,673:INFO:       statsforecast: Not installed
2025-03-16 11:34:53,673:INFO:        tune_sklearn: Not installed
2025-03-16 11:34:53,673:INFO:                 ray: Not installed
2025-03-16 11:34:53,673:INFO:            hyperopt: Not installed
2025-03-16 11:34:53,673:INFO:              optuna: Not installed
2025-03-16 11:34:53,673:INFO:               skopt: Not installed
2025-03-16 11:34:53,673:INFO:              mlflow: Not installed
2025-03-16 11:34:53,673:INFO:              gradio: Not installed
2025-03-16 11:34:53,673:INFO:             fastapi: Not installed
2025-03-16 11:34:53,673:INFO:             uvicorn: Not installed
2025-03-16 11:34:53,673:INFO:              m2cgen: Not installed
2025-03-16 11:34:53,673:INFO:           evidently: Not installed
2025-03-16 11:34:53,673:INFO:               fugue: Not installed
2025-03-16 11:34:53,673:INFO:           streamlit: Not installed
2025-03-16 11:34:53,673:INFO:             prophet: Not installed
2025-03-16 11:34:53,673:INFO:None
2025-03-16 11:34:53,673:INFO:Set up data.
2025-03-16 11:34:53,691:INFO:Set up folding strategy.
2025-03-16 11:34:53,691:INFO:Set up train/test split.
2025-03-16 11:34:53,713:INFO:Set up index.
2025-03-16 11:34:53,713:INFO:Assigning column types.
2025-03-16 11:34:53,717:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-03-16 11:34:53,750:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-16 11:34:53,753:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-16 11:34:53,778:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-16 11:34:53,778:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-16 11:34:53,810:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-16 11:34:53,810:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-16 11:34:53,830:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-16 11:34:53,830:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-16 11:34:53,831:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-03-16 11:34:53,863:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-16 11:34:53,882:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-16 11:34:53,882:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-16 11:34:53,914:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-16 11:34:53,934:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-16 11:34:53,934:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-16 11:34:53,934:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-03-16 11:34:53,987:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-16 11:34:53,988:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-16 11:34:54,041:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-16 11:34:54,041:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-16 11:34:54,043:INFO:Preparing preprocessing pipeline...
2025-03-16 11:34:54,044:INFO:Set up label encoding.
2025-03-16 11:34:54,044:INFO:Set up simple imputation.
2025-03-16 11:34:54,048:INFO:Set up encoding of ordinal features.
2025-03-16 11:34:54,055:INFO:Set up encoding of categorical features.
2025-03-16 11:34:54,055:INFO:Set up variance threshold.
2025-03-16 11:34:54,055:INFO:Set up feature normalization.
2025-03-16 11:34:54,306:INFO:Finished creating preprocessing pipeline.
2025-03-16 11:34:54,355:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\thinu\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'MonthlyCharges',
                                             'TotalCharges'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fi...
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('low_variance',
                 TransformerWrapper(exclude=[], include=None,
                                    transformer=VarianceThreshold(threshold=0.1))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=MinMaxScaler(clip=False,
                                                             copy=True,
                                                             feature_range=(0,
                                                                            1))))],
         verbose=False)
2025-03-16 11:34:54,355:INFO:Creating final display dataframe.
2025-03-16 11:34:54,755:INFO:Setup _display_container:                     Description             Value
0                    Session id                43
1                        Target             Churn
2                   Target type            Binary
3                Target mapping     No: 0, Yes: 1
4           Original data shape        (6339, 21)
5        Transformed data shape        (6339, 39)
6   Transformed train set shape        (5071, 39)
7    Transformed test set shape        (1268, 39)
8               Ignore features                 1
9              Ordinal features                 1
10             Numeric features                 3
11         Categorical features                16
12     Rows with missing values              0.5%
13                   Preprocess              True
14              Imputation type            simple
15           Numeric imputation              mean
16       Categorical imputation              mode
17     Maximum one-hot encoding               100
18              Encoding method              None
19       Low variance threshold               0.1
20                    Normalize              True
21             Normalize method            minmax
22               Fold Generator             KFold
23                  Fold Number                 5
24                     CPU Jobs                -1
25                      Use GPU             False
26               Log Experiment             False
27              Experiment Name  clf-default-name
28                          USI              d210
2025-03-16 11:34:54,815:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-16 11:34:54,815:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-16 11:34:54,869:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-16 11:34:54,869:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-16 11:34:54,870:INFO:setup() successfully completed in 1.3s...............
2025-03-16 11:34:54,882:INFO:Initializing get_config()
2025-03-16 11:34:54,882:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001ED64015000>, variable=None)
2025-03-16 11:34:54,898:INFO:Initializing get_config()
2025-03-16 11:34:54,898:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001ED64015000>, variable=X_train)
2025-03-16 11:34:54,899:INFO:Variable: 'X_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_train_transformed' instead.
2025-03-16 11:34:54,899:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\pycaret\internal\pycaret_experiment\pycaret_experiment.py:321: UserWarning:

Variable: 'X_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_train_transformed' instead.


2025-03-16 11:34:54,907:INFO:Variable:  returned as       gender SeniorCitizen Partner Dependents  tenure PhoneService MultipleLines InternetService  \
2790    Male            No     Yes         No    18.0          Yes            No     Fiber optic   
6109    Male            No      No         No     1.0          Yes            No              No   
2585    Male            No     Yes         No    40.0          Yes            No     Fiber optic   
1181    Male            No      No         No    54.0          Yes           Yes     Fiber optic   
565   Female            No      No         No    28.0          Yes            No             DSL   
...      ...           ...     ...        ...     ...          ...           ...             ...   
1825    Male           Yes     Yes        Yes    20.0          Yes            No     Fiber optic   
4586    Male            No      No         No    36.0          Yes           Yes     Fiber optic   
4670  Female            No     Yes         No    72.0          Yes           Yes             DSL   
4974  Female           Yes     Yes        Yes    23.0          Yes            No     Fiber optic   
4508  Female            No     Yes        Yes    72.0          Yes            No              No   

           OnlineSecurity         OnlineBackup     DeviceProtection          TechSupport  \
2790                   No                   No                  Yes                  Yes   
6109  No internet service  No internet service  No internet service  No internet service   
2585                   No                  Yes                  Yes                   No   
1181                   No                   No                  Yes                   No   
565                    No                  Yes                   No                  Yes   
...                   ...                  ...                  ...                  ...   
1825                  Yes                   No                  Yes                  Yes   
4586                   No                   No                   No                   No   
4670                  Yes                  Yes                  Yes                  Yes   
4974                   No                  Yes                  Yes                   No   
4508  No internet service  No internet service  No internet service  No internet service   

              StreamingTV      StreamingMovies        Contract PaperlessBilling  \
2790                   No                   No  Month-to-month               No   
6109  No internet service  No internet service  Month-to-month               No   
2585                   No                   No        One year               No   
1181                   No                  Yes  Month-to-month               No   
565                    No                   No  Month-to-month               No   
...                   ...                  ...             ...              ...   
1825                   No                  Yes        One year               No   
4586                   No                  Yes  Month-to-month              Yes   
4670                  Yes                  Yes        Two year              Yes   
4974                   No                  Yes  Month-to-month              Yes   
4508  No internet service  No internet service        Two year               No   

                  PaymentMethod  MonthlyCharges  TotalCharges  
2790           Electronic check       78.199997   1468.750000  
6109           Electronic check       20.650000     20.650000  
2585           Electronic check       80.800003   3132.750000  
1181    Credit card (automatic)       89.400002   4869.500000  
565   Bank transfer (automatic)       54.650002   1517.500000  
...                         ...             ...           ...  
1825    Credit card (automatic)       94.300003   1818.300049  
4586           Electronic check       84.900002   3067.199951  
4670           Electronic check       92.400002   6786.100098  
4974  Bank transfer (automatic)       88.449997   2130.550049  
4508  Bank transfer (automatic)       19.549999   1463.449951  

[5071 rows x 19 columns]
2025-03-16 11:34:54,907:INFO:get_config() successfully completed......................................
2025-03-16 11:34:54,930:INFO:Initializing get_config()
2025-03-16 11:34:54,930:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001ED64015000>, variable=X_train_transformed)
2025-03-16 11:34:54,977:INFO:Variable: X_train returned as       gender  SeniorCitizen  Partner  Dependents    tenure  MultipleLines_No  MultipleLines_Yes  \
2790     1.0            0.0      1.0         0.0  0.250000               1.0                0.0   
6109     1.0            0.0      0.0         0.0  0.013889               1.0                0.0   
2585     1.0            0.0      1.0         0.0  0.555556               1.0                0.0   
1181     1.0            0.0      0.0         0.0  0.750000               0.0                1.0   
565      0.0            0.0      0.0         0.0  0.388889               1.0                0.0   
...      ...            ...      ...         ...       ...               ...                ...   
1825     1.0            1.0      1.0         1.0  0.277778               1.0                0.0   
4586     1.0            0.0      0.0         0.0  0.500000               0.0                1.0   
4670     0.0            0.0      1.0         0.0  1.000000               0.0                1.0   
4974     0.0            1.0      1.0         1.0  0.319444               1.0                0.0   
4508     0.0            0.0      1.0         1.0  1.000000               1.0                0.0   

      InternetService_Fiber optic  InternetService_No  InternetService_DSL  OnlineSecurity_No  \
2790                          1.0                 0.0                  0.0                1.0   
6109                          0.0                 1.0                  0.0                0.0   
2585                          1.0                 0.0                  0.0                1.0   
1181                          1.0                 0.0                  0.0                1.0   
565                           0.0                 0.0                  1.0                1.0   
...                           ...                 ...                  ...                ...   
1825                          1.0                 0.0                  0.0                0.0   
4586                          1.0                 0.0                  0.0                1.0   
4670                          0.0                 0.0                  1.0                0.0   
4974                          1.0                 0.0                  0.0                1.0   
4508                          0.0                 1.0                  0.0                0.0   

      OnlineSecurity_No internet service  OnlineSecurity_Yes  OnlineBackup_No  \
2790                                 0.0                 0.0              1.0   
6109                                 1.0                 0.0              0.0   
2585                                 0.0                 0.0              0.0   
1181                                 0.0                 0.0              1.0   
565                                  0.0                 0.0              0.0   
...                                  ...                 ...              ...   
1825                                 0.0                 1.0              1.0   
4586                                 0.0                 0.0              1.0   
4670                                 0.0                 1.0              0.0   
4974                                 0.0                 0.0              0.0   
4508                                 1.0                 0.0              0.0   

      OnlineBackup_No internet service  OnlineBackup_Yes  DeviceProtection_Yes  \
2790                               0.0               0.0                   1.0   
6109                               1.0               0.0                   0.0   
2585                               0.0               1.0                   1.0   
1181                               0.0               0.0                   1.0   
565                                0.0               1.0                   0.0   
...                                ...               ...                   ...   
1825                               0.0               0.0                   1.0   
4586                               0.0               0.0                   0.0   
4670                               0.0               1.0                   1.0   
4974                               0.0               1.0                   1.0   
4508                               1.0               0.0                   0.0   

      DeviceProtection_No internet service  DeviceProtection_No  TechSupport_Yes  \
2790                                   0.0                  0.0              1.0   
6109                                   1.0                  0.0              0.0   
2585                                   0.0                  0.0              0.0   
1181                                   0.0                  0.0              0.0   
565                                    0.0                  1.0              1.0   
...                                    ...                  ...              ...   
1825                                   0.0                  0.0              1.0   
4586                                   0.0                  1.0              0.0   
4670                                   0.0                  0.0              1.0   
4974                                   0.0                  0.0              0.0   
4508                                   1.0                  0.0              0.0   

      TechSupport_No internet service  TechSupport_No  StreamingTV_No  \
2790                              0.0             0.0             1.0   
6109                              1.0             0.0             0.0   
2585                              0.0             1.0             1.0   
1181                              0.0             1.0             1.0   
565                               0.0             0.0             1.0   
...                               ...             ...             ...   
1825                              0.0             0.0             1.0   
4586                              0.0             1.0             1.0   
4670                              0.0             0.0             0.0   
4974                              0.0             1.0             1.0   
4508                              1.0             0.0             0.0   

      StreamingTV_No internet service  StreamingTV_Yes  StreamingMovies_No  \
2790                              0.0              0.0                 1.0   
6109                              1.0              0.0                 0.0   
2585                              0.0              0.0                 1.0   
1181                              0.0              0.0                 0.0   
565                               0.0              0.0                 1.0   
...                               ...              ...                 ...   
1825                              0.0              0.0                 0.0   
4586                              0.0              0.0                 0.0   
4670                              0.0              1.0                 0.0   
4974                              0.0              0.0                 0.0   
4508                              1.0              0.0                 0.0   

      StreamingMovies_No internet service  StreamingMovies_Yes  Contract_0.0  Contract_1.0  \
2790                                  0.0                  0.0           1.0           0.0   
6109                                  1.0                  0.0           1.0           0.0   
2585                                  0.0                  0.0           0.0           1.0   
1181                                  0.0                  1.0           1.0           0.0   
565                                   0.0                  0.0           1.0           0.0   
...                                   ...                  ...           ...           ...   
1825                                  0.0                  1.0           0.0           1.0   
4586                                  0.0                  1.0           1.0           0.0   
4670                                  0.0                  1.0           0.0           0.0   
4974                                  0.0                  1.0           1.0           0.0   
4508                                  1.0                  0.0           0.0           0.0   

      Contract_2.0  PaperlessBilling  PaymentMethod_Electronic check  \
2790           0.0               0.0                             1.0   
6109           0.0               0.0                             1.0   
2585           0.0               0.0                             1.0   
1181           0.0               0.0                             0.0   
565            0.0               0.0                             0.0   
...            ...               ...                             ...   
1825           0.0               0.0                             0.0   
4586           0.0               1.0                             1.0   
4670           1.0               1.0                             1.0   
4974           0.0               1.0                             0.0   
4508           1.0               0.0                             0.0   

      PaymentMethod_Credit card (automatic)  PaymentMethod_Bank transfer (automatic)  \
2790                                    0.0                                      0.0   
6109                                    0.0                                      0.0   
2585                                    0.0                                      0.0   
1181                                    1.0                                      0.0   
565                                     0.0                                      1.0   
...                                     ...                                      ...   
1825                                    1.0                                      0.0   
4586                                    0.0                                      0.0   
4670                                    0.0                                      0.0   
4974                                    0.0                                      1.0   
4508                                    0.0                                      1.0   

      PaymentMethod_Mailed check  MonthlyCharges  TotalCharges  
2790                         0.0        0.595914      0.167310  
6109                         0.0        0.022422      0.000208  
2585                         0.0        0.621824      0.359326  
1181                         0.0        0.707524      0.559737  
565                          0.0        0.361236      0.172935  
...                          ...             ...           ...  
1825                         0.0        0.756353      0.207646  
4586                         0.0        0.662681      0.351762  
4670                         0.0        0.737419      0.780901  
4974                         0.0        0.698057      0.243678  
4508                         0.0        0.011460      0.166698  

[5071 rows x 38 columns]
2025-03-16 11:34:54,977:INFO:get_config() successfully completed......................................
2025-03-16 11:34:55,025:INFO:Initializing get_config()
2025-03-16 11:34:55,025:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001ED64015000>, variable=y_train)
2025-03-16 11:34:55,026:INFO:Variable: 'y_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'y_train_transformed' instead.
2025-03-16 11:34:55,026:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\pycaret\internal\pycaret_experiment\pycaret_experiment.py:321: UserWarning:

Variable: 'y_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'y_train_transformed' instead.


2025-03-16 11:34:55,028:INFO:Variable:  returned as 2790     No
6109     No
2585     No
1181     No
565      No
       ... 
1825     No
4586    Yes
4670     No
4974     No
4508     No
Name: Churn, Length: 5071, dtype: category
Categories (2, object): ['No', 'Yes']
2025-03-16 11:34:55,028:INFO:get_config() successfully completed......................................
2025-03-16 11:34:55,041:INFO:Initializing get_config()
2025-03-16 11:34:55,041:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001ED64015000>, variable=y_train_transformed)
2025-03-16 11:34:55,080:INFO:Variable: y_train returned as 2790    0
6109    0
2585    0
1181    0
565     0
       ..
1825    0
4586    1
4670    0
4974    0
4508    0
Name: Churn, Length: 5071, dtype: int32
2025-03-16 11:34:55,081:INFO:get_config() successfully completed......................................
2025-03-16 11:34:55,090:INFO:Initializing compare_models()
2025-03-16 11:34:55,090:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001ED64015000>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001ED64015000>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2025-03-16 11:34:55,090:INFO:Checking exceptions
2025-03-16 11:34:55,094:INFO:Preparing display monitor
2025-03-16 11:34:55,112:INFO:Initializing Logistic Regression
2025-03-16 11:34:55,112:INFO:Total runtime is 0.0 minutes
2025-03-16 11:34:55,115:INFO:SubProcess create_model() called ==================================
2025-03-16 11:34:55,115:INFO:Initializing create_model()
2025-03-16 11:34:55,115:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001ED64015000>, estimator=lr, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001ED20276590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-16 11:34:55,115:INFO:Checking exceptions
2025-03-16 11:34:55,115:INFO:Importing libraries
2025-03-16 11:34:55,115:INFO:Copying training dataset
2025-03-16 11:34:55,120:INFO:Defining folds
2025-03-16 11:34:55,120:INFO:Declaring metric variables
2025-03-16 11:34:55,123:INFO:Importing untrained model
2025-03-16 11:34:55,125:INFO:Logistic Regression Imported successfully
2025-03-16 11:34:55,130:INFO:Starting cross validation
2025-03-16 11:34:55,134:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-03-16 11:34:57,506:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:34:57,514:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:34:57,520:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:34:57,531:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:34:57,536:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:34:57,543:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:34:57,544:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:34:57,550:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:34:57,556:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:34:57,566:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:34:57,573:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:34:57,579:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:34:57,585:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:34:57,593:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:34:57,602:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:34:57,621:INFO:Calculating mean and std
2025-03-16 11:34:57,623:INFO:Creating metrics dataframe
2025-03-16 11:34:57,625:INFO:Uploading results into container
2025-03-16 11:34:57,626:INFO:Uploading model into container now
2025-03-16 11:34:57,627:INFO:_master_model_container: 1
2025-03-16 11:34:57,627:INFO:_display_container: 2
2025-03-16 11:34:57,628:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=43, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-03-16 11:34:57,628:INFO:create_model() successfully completed......................................
2025-03-16 11:34:57,717:INFO:SubProcess create_model() end ==================================
2025-03-16 11:34:57,717:INFO:Creating metrics dataframe
2025-03-16 11:34:57,722:INFO:Initializing K Neighbors Classifier
2025-03-16 11:34:57,722:INFO:Total runtime is 0.0435074249903361 minutes
2025-03-16 11:34:57,724:INFO:SubProcess create_model() called ==================================
2025-03-16 11:34:57,725:INFO:Initializing create_model()
2025-03-16 11:34:57,725:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001ED64015000>, estimator=knn, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001ED20276590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-16 11:34:57,725:INFO:Checking exceptions
2025-03-16 11:34:57,725:INFO:Importing libraries
2025-03-16 11:34:57,725:INFO:Copying training dataset
2025-03-16 11:34:57,730:INFO:Defining folds
2025-03-16 11:34:57,730:INFO:Declaring metric variables
2025-03-16 11:34:57,733:INFO:Importing untrained model
2025-03-16 11:34:57,736:INFO:K Neighbors Classifier Imported successfully
2025-03-16 11:34:57,740:INFO:Starting cross validation
2025-03-16 11:34:57,743:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-03-16 11:34:59,872:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:34:59,878:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:34:59,878:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:34:59,878:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:34:59,880:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:34:59,883:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:34:59,884:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:34:59,884:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:34:59,886:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:34:59,889:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:34:59,889:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:34:59,891:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:34:59,892:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:34:59,898:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:34:59,904:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:34:59,929:INFO:Calculating mean and std
2025-03-16 11:34:59,931:INFO:Creating metrics dataframe
2025-03-16 11:34:59,934:INFO:Uploading results into container
2025-03-16 11:34:59,935:INFO:Uploading model into container now
2025-03-16 11:34:59,935:INFO:_master_model_container: 2
2025-03-16 11:34:59,936:INFO:_display_container: 2
2025-03-16 11:34:59,936:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-03-16 11:34:59,936:INFO:create_model() successfully completed......................................
2025-03-16 11:35:00,047:INFO:SubProcess create_model() end ==================================
2025-03-16 11:35:00,047:INFO:Creating metrics dataframe
2025-03-16 11:35:00,052:INFO:Initializing Naive Bayes
2025-03-16 11:35:00,052:INFO:Total runtime is 0.08234266837437948 minutes
2025-03-16 11:35:00,055:INFO:SubProcess create_model() called ==================================
2025-03-16 11:35:00,056:INFO:Initializing create_model()
2025-03-16 11:35:00,056:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001ED64015000>, estimator=nb, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001ED20276590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-16 11:35:00,056:INFO:Checking exceptions
2025-03-16 11:35:00,056:INFO:Importing libraries
2025-03-16 11:35:00,056:INFO:Copying training dataset
2025-03-16 11:35:00,062:INFO:Defining folds
2025-03-16 11:35:00,062:INFO:Declaring metric variables
2025-03-16 11:35:00,064:INFO:Importing untrained model
2025-03-16 11:35:00,067:INFO:Naive Bayes Imported successfully
2025-03-16 11:35:00,072:INFO:Starting cross validation
2025-03-16 11:35:00,075:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-03-16 11:35:02,014:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:02,015:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:02,021:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:02,022:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:02,026:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:02,027:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:02,028:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:02,031:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:02,032:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:02,034:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:02,037:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:02,042:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:02,043:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:02,047:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:02,053:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:02,068:INFO:Calculating mean and std
2025-03-16 11:35:02,071:INFO:Creating metrics dataframe
2025-03-16 11:35:02,074:INFO:Uploading results into container
2025-03-16 11:35:02,075:INFO:Uploading model into container now
2025-03-16 11:35:02,076:INFO:_master_model_container: 3
2025-03-16 11:35:02,076:INFO:_display_container: 2
2025-03-16 11:35:02,077:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-03-16 11:35:02,077:INFO:create_model() successfully completed......................................
2025-03-16 11:35:02,194:INFO:SubProcess create_model() end ==================================
2025-03-16 11:35:02,195:INFO:Creating metrics dataframe
2025-03-16 11:35:02,200:INFO:Initializing Decision Tree Classifier
2025-03-16 11:35:02,200:INFO:Total runtime is 0.11813828945159913 minutes
2025-03-16 11:35:02,203:INFO:SubProcess create_model() called ==================================
2025-03-16 11:35:02,203:INFO:Initializing create_model()
2025-03-16 11:35:02,203:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001ED64015000>, estimator=dt, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001ED20276590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-16 11:35:02,203:INFO:Checking exceptions
2025-03-16 11:35:02,203:INFO:Importing libraries
2025-03-16 11:35:02,203:INFO:Copying training dataset
2025-03-16 11:35:02,208:INFO:Defining folds
2025-03-16 11:35:02,208:INFO:Declaring metric variables
2025-03-16 11:35:02,211:INFO:Importing untrained model
2025-03-16 11:35:02,214:INFO:Decision Tree Classifier Imported successfully
2025-03-16 11:35:02,221:INFO:Starting cross validation
2025-03-16 11:35:02,225:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-03-16 11:35:02,522:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:02,530:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:02,534:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:02,535:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:02,536:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:02,539:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:02,540:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:02,541:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:02,546:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:02,546:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:02,546:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:02,552:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:03,942:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:03,948:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:03,954:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:03,978:INFO:Calculating mean and std
2025-03-16 11:35:03,979:INFO:Creating metrics dataframe
2025-03-16 11:35:03,982:INFO:Uploading results into container
2025-03-16 11:35:03,982:INFO:Uploading model into container now
2025-03-16 11:35:03,982:INFO:_master_model_container: 4
2025-03-16 11:35:03,983:INFO:_display_container: 2
2025-03-16 11:35:03,983:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=43, splitter='best')
2025-03-16 11:35:03,983:INFO:create_model() successfully completed......................................
2025-03-16 11:35:04,066:INFO:SubProcess create_model() end ==================================
2025-03-16 11:35:04,066:INFO:Creating metrics dataframe
2025-03-16 11:35:04,072:INFO:Initializing SVM - Linear Kernel
2025-03-16 11:35:04,072:INFO:Total runtime is 0.14932958682378134 minutes
2025-03-16 11:35:04,075:INFO:SubProcess create_model() called ==================================
2025-03-16 11:35:04,075:INFO:Initializing create_model()
2025-03-16 11:35:04,075:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001ED64015000>, estimator=svm, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001ED20276590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-16 11:35:04,075:INFO:Checking exceptions
2025-03-16 11:35:04,075:INFO:Importing libraries
2025-03-16 11:35:04,075:INFO:Copying training dataset
2025-03-16 11:35:04,081:INFO:Defining folds
2025-03-16 11:35:04,081:INFO:Declaring metric variables
2025-03-16 11:35:04,084:INFO:Importing untrained model
2025-03-16 11:35:04,087:INFO:SVM - Linear Kernel Imported successfully
2025-03-16 11:35:04,092:INFO:Starting cross validation
2025-03-16 11:35:04,096:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-03-16 11:35:04,375:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:04,381:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:04,385:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:04,387:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:04,388:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:04,391:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:04,392:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:04,394:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:04,397:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:04,397:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:04,399:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:04,403:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:04,404:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:04,410:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:04,415:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:04,432:INFO:Calculating mean and std
2025-03-16 11:35:04,433:INFO:Creating metrics dataframe
2025-03-16 11:35:04,435:INFO:Uploading results into container
2025-03-16 11:35:04,435:INFO:Uploading model into container now
2025-03-16 11:35:04,435:INFO:_master_model_container: 5
2025-03-16 11:35:04,435:INFO:_display_container: 2
2025-03-16 11:35:04,436:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=43, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-03-16 11:35:04,436:INFO:create_model() successfully completed......................................
2025-03-16 11:35:04,510:INFO:SubProcess create_model() end ==================================
2025-03-16 11:35:04,510:INFO:Creating metrics dataframe
2025-03-16 11:35:04,516:INFO:Initializing Ridge Classifier
2025-03-16 11:35:04,516:INFO:Total runtime is 0.1567309617996216 minutes
2025-03-16 11:35:04,518:INFO:SubProcess create_model() called ==================================
2025-03-16 11:35:04,519:INFO:Initializing create_model()
2025-03-16 11:35:04,519:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001ED64015000>, estimator=ridge, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001ED20276590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-16 11:35:04,519:INFO:Checking exceptions
2025-03-16 11:35:04,519:INFO:Importing libraries
2025-03-16 11:35:04,519:INFO:Copying training dataset
2025-03-16 11:35:04,524:INFO:Defining folds
2025-03-16 11:35:04,524:INFO:Declaring metric variables
2025-03-16 11:35:04,526:INFO:Importing untrained model
2025-03-16 11:35:04,528:INFO:Ridge Classifier Imported successfully
2025-03-16 11:35:04,534:INFO:Starting cross validation
2025-03-16 11:35:04,536:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-03-16 11:35:04,810:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:04,817:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:04,818:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:04,819:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:04,820:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:04,822:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:04,823:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:04,824:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:04,825:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:04,826:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:04,828:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:04,829:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:04,831:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:04,838:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:04,858:INFO:Calculating mean and std
2025-03-16 11:35:04,859:INFO:Creating metrics dataframe
2025-03-16 11:35:04,861:INFO:Uploading results into container
2025-03-16 11:35:04,861:INFO:Uploading model into container now
2025-03-16 11:35:04,861:INFO:_master_model_container: 6
2025-03-16 11:35:04,862:INFO:_display_container: 2
2025-03-16 11:35:04,862:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=43, solver='auto',
                tol=0.0001)
2025-03-16 11:35:04,862:INFO:create_model() successfully completed......................................
2025-03-16 11:35:04,935:INFO:SubProcess create_model() end ==================================
2025-03-16 11:35:04,935:INFO:Creating metrics dataframe
2025-03-16 11:35:04,941:INFO:Initializing Random Forest Classifier
2025-03-16 11:35:04,942:INFO:Total runtime is 0.16384214957555135 minutes
2025-03-16 11:35:04,944:INFO:SubProcess create_model() called ==================================
2025-03-16 11:35:04,944:INFO:Initializing create_model()
2025-03-16 11:35:04,944:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001ED64015000>, estimator=rf, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001ED20276590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-16 11:35:04,945:INFO:Checking exceptions
2025-03-16 11:35:04,945:INFO:Importing libraries
2025-03-16 11:35:04,945:INFO:Copying training dataset
2025-03-16 11:35:04,949:INFO:Defining folds
2025-03-16 11:35:04,949:INFO:Declaring metric variables
2025-03-16 11:35:04,951:INFO:Importing untrained model
2025-03-16 11:35:04,954:INFO:Random Forest Classifier Imported successfully
2025-03-16 11:35:04,959:INFO:Starting cross validation
2025-03-16 11:35:04,961:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-03-16 11:35:05,466:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:05,466:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:05,473:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:05,474:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:05,480:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:05,480:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:05,481:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:05,486:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:05,492:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:05,498:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:05,498:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:05,503:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:05,504:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:05,509:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:05,509:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:05,521:INFO:Calculating mean and std
2025-03-16 11:35:05,522:INFO:Creating metrics dataframe
2025-03-16 11:35:05,524:INFO:Uploading results into container
2025-03-16 11:35:05,524:INFO:Uploading model into container now
2025-03-16 11:35:05,524:INFO:_master_model_container: 7
2025-03-16 11:35:05,524:INFO:_display_container: 2
2025-03-16 11:35:05,525:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=43, verbose=0,
                       warm_start=False)
2025-03-16 11:35:05,525:INFO:create_model() successfully completed......................................
2025-03-16 11:35:05,599:INFO:SubProcess create_model() end ==================================
2025-03-16 11:35:05,599:INFO:Creating metrics dataframe
2025-03-16 11:35:05,606:INFO:Initializing Quadratic Discriminant Analysis
2025-03-16 11:35:05,606:INFO:Total runtime is 0.174907910823822 minutes
2025-03-16 11:35:05,608:INFO:SubProcess create_model() called ==================================
2025-03-16 11:35:05,608:INFO:Initializing create_model()
2025-03-16 11:35:05,608:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001ED64015000>, estimator=qda, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001ED20276590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-16 11:35:05,609:INFO:Checking exceptions
2025-03-16 11:35:05,609:INFO:Importing libraries
2025-03-16 11:35:05,609:INFO:Copying training dataset
2025-03-16 11:35:05,613:INFO:Defining folds
2025-03-16 11:35:05,613:INFO:Declaring metric variables
2025-03-16 11:35:05,616:INFO:Importing untrained model
2025-03-16 11:35:05,618:INFO:Quadratic Discriminant Analysis Imported successfully
2025-03-16 11:35:05,623:INFO:Starting cross validation
2025-03-16 11:35:05,626:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-03-16 11:35:05,857:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-16 11:35:05,861:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-16 11:35:05,864:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-16 11:35:05,868:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-16 11:35:05,870:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-16 11:35:05,917:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:05,920:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:05,921:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:05,923:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:05,925:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:05,926:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:05,927:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:05,927:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:05,929:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:05,931:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:05,932:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:05,932:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:05,932:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:05,937:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:05,939:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:05,948:INFO:Calculating mean and std
2025-03-16 11:35:05,949:INFO:Creating metrics dataframe
2025-03-16 11:35:05,951:INFO:Uploading results into container
2025-03-16 11:35:05,951:INFO:Uploading model into container now
2025-03-16 11:35:05,951:INFO:_master_model_container: 8
2025-03-16 11:35:05,951:INFO:_display_container: 2
2025-03-16 11:35:05,952:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-03-16 11:35:05,952:INFO:create_model() successfully completed......................................
2025-03-16 11:35:06,028:INFO:SubProcess create_model() end ==================================
2025-03-16 11:35:06,028:INFO:Creating metrics dataframe
2025-03-16 11:35:06,035:INFO:Initializing Ada Boost Classifier
2025-03-16 11:35:06,035:INFO:Total runtime is 0.1820598522822062 minutes
2025-03-16 11:35:06,038:INFO:SubProcess create_model() called ==================================
2025-03-16 11:35:06,038:INFO:Initializing create_model()
2025-03-16 11:35:06,038:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001ED64015000>, estimator=ada, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001ED20276590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-16 11:35:06,038:INFO:Checking exceptions
2025-03-16 11:35:06,038:INFO:Importing libraries
2025-03-16 11:35:06,038:INFO:Copying training dataset
2025-03-16 11:35:06,042:INFO:Defining folds
2025-03-16 11:35:06,042:INFO:Declaring metric variables
2025-03-16 11:35:06,045:INFO:Importing untrained model
2025-03-16 11:35:06,047:INFO:Ada Boost Classifier Imported successfully
2025-03-16 11:35:06,052:INFO:Starting cross validation
2025-03-16 11:35:06,055:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-03-16 11:35:06,253:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-16 11:35:06,259:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-16 11:35:06,266:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-16 11:35:06,271:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-16 11:35:06,275:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-16 11:35:06,520:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:06,526:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:06,529:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:06,532:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:06,533:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:06,535:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:06,535:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:06,538:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:06,538:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:06,540:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:06,543:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:06,544:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:06,545:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:06,548:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:06,554:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:06,574:INFO:Calculating mean and std
2025-03-16 11:35:06,575:INFO:Creating metrics dataframe
2025-03-16 11:35:06,577:INFO:Uploading results into container
2025-03-16 11:35:06,577:INFO:Uploading model into container now
2025-03-16 11:35:06,577:INFO:_master_model_container: 9
2025-03-16 11:35:06,577:INFO:_display_container: 2
2025-03-16 11:35:06,578:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=43)
2025-03-16 11:35:06,578:INFO:create_model() successfully completed......................................
2025-03-16 11:35:06,653:INFO:SubProcess create_model() end ==================================
2025-03-16 11:35:06,654:INFO:Creating metrics dataframe
2025-03-16 11:35:06,661:INFO:Initializing Gradient Boosting Classifier
2025-03-16 11:35:06,661:INFO:Total runtime is 0.19249530235926307 minutes
2025-03-16 11:35:06,664:INFO:SubProcess create_model() called ==================================
2025-03-16 11:35:06,664:INFO:Initializing create_model()
2025-03-16 11:35:06,664:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001ED64015000>, estimator=gbc, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001ED20276590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-16 11:35:06,664:INFO:Checking exceptions
2025-03-16 11:35:06,664:INFO:Importing libraries
2025-03-16 11:35:06,664:INFO:Copying training dataset
2025-03-16 11:35:06,670:INFO:Defining folds
2025-03-16 11:35:06,670:INFO:Declaring metric variables
2025-03-16 11:35:06,672:INFO:Importing untrained model
2025-03-16 11:35:06,674:INFO:Gradient Boosting Classifier Imported successfully
2025-03-16 11:35:06,680:INFO:Starting cross validation
2025-03-16 11:35:06,683:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-03-16 11:35:07,467:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:07,472:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:07,479:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:07,484:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:07,489:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:07,495:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:07,495:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:07,496:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:07,500:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:07,502:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:07,505:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:07,506:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:07,507:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:07,511:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:07,516:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:07,534:INFO:Calculating mean and std
2025-03-16 11:35:07,534:INFO:Creating metrics dataframe
2025-03-16 11:35:07,536:INFO:Uploading results into container
2025-03-16 11:35:07,537:INFO:Uploading model into container now
2025-03-16 11:35:07,537:INFO:_master_model_container: 10
2025-03-16 11:35:07,537:INFO:_display_container: 2
2025-03-16 11:35:07,538:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=43, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-03-16 11:35:07,538:INFO:create_model() successfully completed......................................
2025-03-16 11:35:07,619:INFO:SubProcess create_model() end ==================================
2025-03-16 11:35:07,619:INFO:Creating metrics dataframe
2025-03-16 11:35:07,626:INFO:Initializing Linear Discriminant Analysis
2025-03-16 11:35:07,626:INFO:Total runtime is 0.2085645755132039 minutes
2025-03-16 11:35:07,628:INFO:SubProcess create_model() called ==================================
2025-03-16 11:35:07,629:INFO:Initializing create_model()
2025-03-16 11:35:07,629:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001ED64015000>, estimator=lda, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001ED20276590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-16 11:35:07,629:INFO:Checking exceptions
2025-03-16 11:35:07,629:INFO:Importing libraries
2025-03-16 11:35:07,629:INFO:Copying training dataset
2025-03-16 11:35:07,634:INFO:Defining folds
2025-03-16 11:35:07,634:INFO:Declaring metric variables
2025-03-16 11:35:07,636:INFO:Importing untrained model
2025-03-16 11:35:07,638:INFO:Linear Discriminant Analysis Imported successfully
2025-03-16 11:35:07,644:INFO:Starting cross validation
2025-03-16 11:35:07,647:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-03-16 11:35:07,911:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:07,920:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:07,924:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:07,926:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:07,927:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:07,929:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:07,930:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:07,933:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:07,935:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:07,935:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:07,936:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:07,939:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:07,940:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:07,940:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:07,946:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:07,961:INFO:Calculating mean and std
2025-03-16 11:35:07,961:INFO:Creating metrics dataframe
2025-03-16 11:35:07,963:INFO:Uploading results into container
2025-03-16 11:35:07,964:INFO:Uploading model into container now
2025-03-16 11:35:07,964:INFO:_master_model_container: 11
2025-03-16 11:35:07,964:INFO:_display_container: 2
2025-03-16 11:35:07,965:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-03-16 11:35:07,965:INFO:create_model() successfully completed......................................
2025-03-16 11:35:08,039:INFO:SubProcess create_model() end ==================================
2025-03-16 11:35:08,039:INFO:Creating metrics dataframe
2025-03-16 11:35:08,046:INFO:Initializing Extra Trees Classifier
2025-03-16 11:35:08,046:INFO:Total runtime is 0.2155658364295959 minutes
2025-03-16 11:35:08,049:INFO:SubProcess create_model() called ==================================
2025-03-16 11:35:08,049:INFO:Initializing create_model()
2025-03-16 11:35:08,049:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001ED64015000>, estimator=et, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001ED20276590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-16 11:35:08,049:INFO:Checking exceptions
2025-03-16 11:35:08,049:INFO:Importing libraries
2025-03-16 11:35:08,049:INFO:Copying training dataset
2025-03-16 11:35:08,053:INFO:Defining folds
2025-03-16 11:35:08,053:INFO:Declaring metric variables
2025-03-16 11:35:08,055:INFO:Importing untrained model
2025-03-16 11:35:08,058:INFO:Extra Trees Classifier Imported successfully
2025-03-16 11:35:08,063:INFO:Starting cross validation
2025-03-16 11:35:08,066:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-03-16 11:35:08,562:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:08,562:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:08,563:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:08,563:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:08,567:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:08,568:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:08,569:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:08,569:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:08,573:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:08,574:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:08,574:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:08,576:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:08,577:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:08,583:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:08,589:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:08,601:INFO:Calculating mean and std
2025-03-16 11:35:08,603:INFO:Creating metrics dataframe
2025-03-16 11:35:08,606:INFO:Uploading results into container
2025-03-16 11:35:08,606:INFO:Uploading model into container now
2025-03-16 11:35:08,607:INFO:_master_model_container: 12
2025-03-16 11:35:08,607:INFO:_display_container: 2
2025-03-16 11:35:08,608:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=43, verbose=0,
                     warm_start=False)
2025-03-16 11:35:08,608:INFO:create_model() successfully completed......................................
2025-03-16 11:35:08,705:INFO:SubProcess create_model() end ==================================
2025-03-16 11:35:08,705:INFO:Creating metrics dataframe
2025-03-16 11:35:08,713:INFO:Initializing Light Gradient Boosting Machine
2025-03-16 11:35:08,713:INFO:Total runtime is 0.22669290304183956 minutes
2025-03-16 11:35:08,716:INFO:SubProcess create_model() called ==================================
2025-03-16 11:35:08,717:INFO:Initializing create_model()
2025-03-16 11:35:08,717:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001ED64015000>, estimator=lightgbm, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001ED20276590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-16 11:35:08,717:INFO:Checking exceptions
2025-03-16 11:35:08,717:INFO:Importing libraries
2025-03-16 11:35:08,717:INFO:Copying training dataset
2025-03-16 11:35:08,722:INFO:Defining folds
2025-03-16 11:35:08,722:INFO:Declaring metric variables
2025-03-16 11:35:08,726:INFO:Importing untrained model
2025-03-16 11:35:08,729:INFO:Light Gradient Boosting Machine Imported successfully
2025-03-16 11:35:08,735:INFO:Starting cross validation
2025-03-16 11:35:08,739:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-03-16 11:35:09,303:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:09,308:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:09,312:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:09,316:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:09,317:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:09,321:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:09,325:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:09,326:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:09,334:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:09,334:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:09,342:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:09,352:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:09,429:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:09,437:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:09,445:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:09,469:INFO:Calculating mean and std
2025-03-16 11:35:09,470:INFO:Creating metrics dataframe
2025-03-16 11:35:09,472:INFO:Uploading results into container
2025-03-16 11:35:09,473:INFO:Uploading model into container now
2025-03-16 11:35:09,473:INFO:_master_model_container: 13
2025-03-16 11:35:09,473:INFO:_display_container: 2
2025-03-16 11:35:09,474:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=43, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-03-16 11:35:09,474:INFO:create_model() successfully completed......................................
2025-03-16 11:35:09,555:INFO:SubProcess create_model() end ==================================
2025-03-16 11:35:09,555:INFO:Creating metrics dataframe
2025-03-16 11:35:09,562:INFO:Initializing Dummy Classifier
2025-03-16 11:35:09,562:INFO:Total runtime is 0.24084510008494056 minutes
2025-03-16 11:35:09,565:INFO:SubProcess create_model() called ==================================
2025-03-16 11:35:09,565:INFO:Initializing create_model()
2025-03-16 11:35:09,565:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001ED64015000>, estimator=dummy, fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001ED20276590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-16 11:35:09,565:INFO:Checking exceptions
2025-03-16 11:35:09,565:INFO:Importing libraries
2025-03-16 11:35:09,565:INFO:Copying training dataset
2025-03-16 11:35:09,570:INFO:Defining folds
2025-03-16 11:35:09,571:INFO:Declaring metric variables
2025-03-16 11:35:09,573:INFO:Importing untrained model
2025-03-16 11:35:09,576:INFO:Dummy Classifier Imported successfully
2025-03-16 11:35:09,582:INFO:Starting cross validation
2025-03-16 11:35:09,585:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-03-16 11:35:09,831:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:09,838:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:09,839:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:09,841:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-16 11:35:09,844:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:09,844:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:09,845:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:09,847:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-16 11:35:09,848:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:09,850:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:09,851:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:09,852:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:09,854:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-16 11:35:09,855:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:09,857:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:09,857:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:09,858:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-16 11:35:09,860:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-16 11:35:09,860:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:09,863:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:09,881:INFO:Calculating mean and std
2025-03-16 11:35:09,882:INFO:Creating metrics dataframe
2025-03-16 11:35:09,884:INFO:Uploading results into container
2025-03-16 11:35:09,885:INFO:Uploading model into container now
2025-03-16 11:35:09,885:INFO:_master_model_container: 14
2025-03-16 11:35:09,885:INFO:_display_container: 2
2025-03-16 11:35:09,885:INFO:DummyClassifier(constant=None, random_state=43, strategy='prior')
2025-03-16 11:35:09,886:INFO:create_model() successfully completed......................................
2025-03-16 11:35:09,970:INFO:SubProcess create_model() end ==================================
2025-03-16 11:35:09,970:INFO:Creating metrics dataframe
2025-03-16 11:35:09,978:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning:

Styler.applymap has been deprecated. Use Styler.map instead.


2025-03-16 11:35:09,984:INFO:Initializing create_model()
2025-03-16 11:35:09,984:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001ED64015000>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=43, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-16 11:35:09,984:INFO:Checking exceptions
2025-03-16 11:35:09,985:INFO:Importing libraries
2025-03-16 11:35:09,985:INFO:Copying training dataset
2025-03-16 11:35:09,989:INFO:Defining folds
2025-03-16 11:35:09,990:INFO:Declaring metric variables
2025-03-16 11:35:09,990:INFO:Importing untrained model
2025-03-16 11:35:09,990:INFO:Declaring custom model
2025-03-16 11:35:09,990:INFO:Gradient Boosting Classifier Imported successfully
2025-03-16 11:35:09,992:INFO:Cross validation set to False
2025-03-16 11:35:09,993:INFO:Fitting Model
2025-03-16 11:35:10,763:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=43, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-03-16 11:35:10,763:INFO:create_model() successfully completed......................................
2025-03-16 11:35:10,861:INFO:_master_model_container: 14
2025-03-16 11:35:10,862:INFO:_display_container: 2
2025-03-16 11:35:10,862:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=43, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-03-16 11:35:10,862:INFO:compare_models() successfully completed......................................
2025-03-16 11:35:10,892:INFO:gpu_param set to False
2025-03-16 11:35:10,946:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-16 11:35:10,947:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-16 11:35:11,000:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-16 11:35:11,000:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-16 11:35:11,023:INFO:Initializing create_model()
2025-03-16 11:35:11,023:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001ED64015000>, estimator=knn, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_neighbors': 5, 'metric': 'manhattan'})
2025-03-16 11:35:11,023:INFO:Checking exceptions
2025-03-16 11:35:11,034:INFO:Importing libraries
2025-03-16 11:35:11,035:INFO:Copying training dataset
2025-03-16 11:35:11,039:INFO:Defining folds
2025-03-16 11:35:11,039:INFO:Declaring metric variables
2025-03-16 11:35:11,042:INFO:Importing untrained model
2025-03-16 11:35:11,045:INFO:K Neighbors Classifier Imported successfully
2025-03-16 11:35:11,050:INFO:Starting cross validation
2025-03-16 11:35:11,053:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-03-16 11:35:11,532:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:11,538:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:11,544:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:11,546:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:11,552:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:11,558:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:11,606:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:11,607:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:11,609:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:11,612:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:11,612:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:11,615:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:11,617:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:11,618:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:11,622:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:11,642:INFO:Calculating mean and std
2025-03-16 11:35:11,642:INFO:Creating metrics dataframe
2025-03-16 11:35:11,646:INFO:Finalizing model
2025-03-16 11:35:11,804:INFO:Uploading results into container
2025-03-16 11:35:11,804:INFO:Uploading model into container now
2025-03-16 11:35:11,810:INFO:_master_model_container: 15
2025-03-16 11:35:11,811:INFO:_display_container: 3
2025-03-16 11:35:11,811:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='manhattan',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-03-16 11:35:11,811:INFO:create_model() successfully completed......................................
2025-03-16 11:35:11,900:INFO:Initializing evaluate_model()
2025-03-16 11:35:11,900:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001ED64015000>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='manhattan',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2025-03-16 11:35:11,912:INFO:Initializing plot_model()
2025-03-16 11:35:11,912:INFO:plot_model(plot=pipeline, fold=KFold(n_splits=5, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='manhattan',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001ED64015000>, system=True)
2025-03-16 11:35:11,912:INFO:Checking exceptions
2025-03-16 11:35:11,916:INFO:Preloading libraries
2025-03-16 11:35:11,917:INFO:Copying training dataset
2025-03-16 11:35:11,917:INFO:Plot type: pipeline
2025-03-16 11:35:12,124:INFO:Visual Rendered Successfully
2025-03-16 11:35:12,200:INFO:plot_model() successfully completed......................................
2025-03-16 11:35:12,214:INFO:Initializing evaluate_model()
2025-03-16 11:35:12,214:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001ED64015000>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=43, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2025-03-16 11:35:12,223:INFO:Initializing plot_model()
2025-03-16 11:35:12,223:INFO:plot_model(plot=pipeline, fold=KFold(n_splits=5, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=43, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001ED64015000>, system=True)
2025-03-16 11:35:12,223:INFO:Checking exceptions
2025-03-16 11:35:12,226:INFO:Preloading libraries
2025-03-16 11:35:12,232:INFO:Copying training dataset
2025-03-16 11:35:12,232:INFO:Plot type: pipeline
2025-03-16 11:35:12,353:INFO:Visual Rendered Successfully
2025-03-16 11:35:12,430:INFO:plot_model() successfully completed......................................
2025-03-16 11:35:12,446:INFO:Initializing tune_model()
2025-03-16 11:35:12,446:INFO:tune_model(estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='manhattan',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001ED64015000>)
2025-03-16 11:35:12,446:INFO:Checking exceptions
2025-03-16 11:35:12,458:INFO:Copying training dataset
2025-03-16 11:35:12,462:INFO:Checking base model
2025-03-16 11:35:12,462:INFO:Base model : K Neighbors Classifier
2025-03-16 11:35:12,465:INFO:Declaring metric variables
2025-03-16 11:35:12,468:INFO:Defining Hyperparameters
2025-03-16 11:35:12,550:INFO:Tuning with n_jobs=-1
2025-03-16 11:35:12,550:INFO:Initializing RandomizedSearchCV
2025-03-16 11:35:14,905:INFO:best_params: {'actual_estimator__weights': 'uniform', 'actual_estimator__n_neighbors': 30, 'actual_estimator__metric': 'minkowski'}
2025-03-16 11:35:14,905:INFO:Hyperparameter search completed
2025-03-16 11:35:14,905:INFO:SubProcess create_model() called ==================================
2025-03-16 11:35:14,906:INFO:Initializing create_model()
2025-03-16 11:35:14,906:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001ED64015000>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='manhattan',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001ED20274880>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'weights': 'uniform', 'n_neighbors': 30, 'metric': 'minkowski'})
2025-03-16 11:35:14,906:INFO:Checking exceptions
2025-03-16 11:35:14,906:INFO:Importing libraries
2025-03-16 11:35:14,907:INFO:Copying training dataset
2025-03-16 11:35:14,911:INFO:Defining folds
2025-03-16 11:35:14,911:INFO:Declaring metric variables
2025-03-16 11:35:14,914:INFO:Importing untrained model
2025-03-16 11:35:14,914:INFO:Declaring custom model
2025-03-16 11:35:14,917:INFO:K Neighbors Classifier Imported successfully
2025-03-16 11:35:14,922:INFO:Starting cross validation
2025-03-16 11:35:14,925:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-03-16 11:35:15,294:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:15,301:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:15,302:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:15,308:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:15,308:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:15,311:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:15,312:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:15,314:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:15,314:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:15,317:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:15,319:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:15,320:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:15,323:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:15,325:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:15,326:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:15,343:INFO:Calculating mean and std
2025-03-16 11:35:15,344:INFO:Creating metrics dataframe
2025-03-16 11:35:15,348:INFO:Finalizing model
2025-03-16 11:35:15,512:INFO:Uploading results into container
2025-03-16 11:35:15,512:INFO:Uploading model into container now
2025-03-16 11:35:15,512:INFO:_master_model_container: 16
2025-03-16 11:35:15,513:INFO:_display_container: 4
2025-03-16 11:35:15,513:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=30, p=2,
                     weights='uniform')
2025-03-16 11:35:15,513:INFO:create_model() successfully completed......................................
2025-03-16 11:35:15,589:INFO:SubProcess create_model() end ==================================
2025-03-16 11:35:15,589:INFO:choose_better activated
2025-03-16 11:35:15,592:INFO:SubProcess create_model() called ==================================
2025-03-16 11:35:15,593:INFO:Initializing create_model()
2025-03-16 11:35:15,593:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001ED64015000>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='manhattan',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-16 11:35:15,593:INFO:Checking exceptions
2025-03-16 11:35:15,594:INFO:Importing libraries
2025-03-16 11:35:15,594:INFO:Copying training dataset
2025-03-16 11:35:15,598:INFO:Defining folds
2025-03-16 11:35:15,598:INFO:Declaring metric variables
2025-03-16 11:35:15,599:INFO:Importing untrained model
2025-03-16 11:35:15,599:INFO:Declaring custom model
2025-03-16 11:35:15,599:INFO:K Neighbors Classifier Imported successfully
2025-03-16 11:35:15,599:INFO:Starting cross validation
2025-03-16 11:35:15,602:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-03-16 11:35:16,065:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:16,069:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:16,070:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:16,072:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:16,073:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:16,076:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:16,077:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:16,077:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:16,078:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:16,081:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:16,082:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:16,083:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:16,089:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:16,095:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:16,100:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:16,120:INFO:Calculating mean and std
2025-03-16 11:35:16,120:INFO:Creating metrics dataframe
2025-03-16 11:35:16,122:INFO:Finalizing model
2025-03-16 11:35:16,278:INFO:Uploading results into container
2025-03-16 11:35:16,278:INFO:Uploading model into container now
2025-03-16 11:35:16,278:INFO:_master_model_container: 17
2025-03-16 11:35:16,278:INFO:_display_container: 5
2025-03-16 11:35:16,278:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='manhattan',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-03-16 11:35:16,279:INFO:create_model() successfully completed......................................
2025-03-16 11:35:16,353:INFO:SubProcess create_model() end ==================================
2025-03-16 11:35:16,353:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='manhattan',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform') result for Accuracy is 0.7586
2025-03-16 11:35:16,354:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=30, p=2,
                     weights='uniform') result for Accuracy is 0.7902
2025-03-16 11:35:16,354:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=30, p=2,
                     weights='uniform') is best model
2025-03-16 11:35:16,354:INFO:choose_better completed
2025-03-16 11:35:16,360:INFO:_master_model_container: 17
2025-03-16 11:35:16,361:INFO:_display_container: 4
2025-03-16 11:35:16,361:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=30, p=2,
                     weights='uniform')
2025-03-16 11:35:16,361:INFO:tune_model() successfully completed......................................
2025-03-16 11:35:16,458:INFO:Initializing evaluate_model()
2025-03-16 11:35:16,459:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001ED64015000>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=30, p=2,
                     weights='uniform'), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2025-03-16 11:35:16,467:INFO:Initializing plot_model()
2025-03-16 11:35:16,467:INFO:plot_model(plot=pipeline, fold=KFold(n_splits=5, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=30, p=2,
                     weights='uniform'), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001ED64015000>, system=True)
2025-03-16 11:35:16,467:INFO:Checking exceptions
2025-03-16 11:35:16,469:INFO:Preloading libraries
2025-03-16 11:35:16,469:INFO:Copying training dataset
2025-03-16 11:35:16,469:INFO:Plot type: pipeline
2025-03-16 11:35:16,592:INFO:Visual Rendered Successfully
2025-03-16 11:35:16,667:INFO:plot_model() successfully completed......................................
2025-03-16 11:35:16,679:INFO:Initializing tune_model()
2025-03-16 11:35:16,679:INFO:tune_model(estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=43, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001ED64015000>)
2025-03-16 11:35:16,679:INFO:Checking exceptions
2025-03-16 11:35:16,696:INFO:Copying training dataset
2025-03-16 11:35:16,702:INFO:Checking base model
2025-03-16 11:35:16,703:INFO:Base model : Gradient Boosting Classifier
2025-03-16 11:35:16,707:INFO:Declaring metric variables
2025-03-16 11:35:16,710:INFO:Defining Hyperparameters
2025-03-16 11:35:16,798:INFO:Tuning with n_jobs=-1
2025-03-16 11:35:16,798:INFO:Initializing RandomizedSearchCV
2025-03-16 11:35:21,650:INFO:best_params: {'actual_estimator__subsample': 0.35, 'actual_estimator__n_estimators': 270, 'actual_estimator__min_samples_split': 7, 'actual_estimator__min_samples_leaf': 3, 'actual_estimator__min_impurity_decrease': 0.5, 'actual_estimator__max_features': 'log2', 'actual_estimator__max_depth': 8, 'actual_estimator__learning_rate': 0.1}
2025-03-16 11:35:21,651:INFO:Hyperparameter search completed
2025-03-16 11:35:21,651:INFO:SubProcess create_model() called ==================================
2025-03-16 11:35:21,651:INFO:Initializing create_model()
2025-03-16 11:35:21,652:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001ED64015000>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=43, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001ED40DD9D20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'subsample': 0.35, 'n_estimators': 270, 'min_samples_split': 7, 'min_samples_leaf': 3, 'min_impurity_decrease': 0.5, 'max_features': 'log2', 'max_depth': 8, 'learning_rate': 0.1})
2025-03-16 11:35:21,652:INFO:Checking exceptions
2025-03-16 11:35:21,652:INFO:Importing libraries
2025-03-16 11:35:21,652:INFO:Copying training dataset
2025-03-16 11:35:21,656:INFO:Defining folds
2025-03-16 11:35:21,657:INFO:Declaring metric variables
2025-03-16 11:35:21,659:INFO:Importing untrained model
2025-03-16 11:35:21,659:INFO:Declaring custom model
2025-03-16 11:35:21,662:INFO:Gradient Boosting Classifier Imported successfully
2025-03-16 11:35:21,666:INFO:Starting cross validation
2025-03-16 11:35:21,669:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-03-16 11:35:22,176:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:22,181:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:22,187:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:22,195:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:22,196:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:22,197:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:22,200:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:22,202:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:22,203:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:22,204:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:22,206:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:22,208:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:22,209:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:22,210:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:22,213:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:22,230:INFO:Calculating mean and std
2025-03-16 11:35:22,231:INFO:Creating metrics dataframe
2025-03-16 11:35:22,235:INFO:Finalizing model
2025-03-16 11:35:22,684:INFO:Uploading results into container
2025-03-16 11:35:22,685:INFO:Uploading model into container now
2025-03-16 11:35:22,685:INFO:_master_model_container: 18
2025-03-16 11:35:22,685:INFO:_display_container: 5
2025-03-16 11:35:22,686:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=8,
                           max_features='log2', max_leaf_nodes=None,
                           min_impurity_decrease=0.5, min_samples_leaf=3,
                           min_samples_split=7, min_weight_fraction_leaf=0.0,
                           n_estimators=270, n_iter_no_change=None,
                           random_state=43, subsample=0.35, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-03-16 11:35:22,686:INFO:create_model() successfully completed......................................
2025-03-16 11:35:22,765:INFO:SubProcess create_model() end ==================================
2025-03-16 11:35:22,765:INFO:choose_better activated
2025-03-16 11:35:22,768:INFO:SubProcess create_model() called ==================================
2025-03-16 11:35:22,768:INFO:Initializing create_model()
2025-03-16 11:35:22,769:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001ED64015000>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=43, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=KFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-16 11:35:22,769:INFO:Checking exceptions
2025-03-16 11:35:22,770:INFO:Importing libraries
2025-03-16 11:35:22,770:INFO:Copying training dataset
2025-03-16 11:35:22,774:INFO:Defining folds
2025-03-16 11:35:22,774:INFO:Declaring metric variables
2025-03-16 11:35:22,774:INFO:Importing untrained model
2025-03-16 11:35:22,774:INFO:Declaring custom model
2025-03-16 11:35:22,775:INFO:Gradient Boosting Classifier Imported successfully
2025-03-16 11:35:22,775:INFO:Starting cross validation
2025-03-16 11:35:22,777:INFO:Cross validating with KFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-03-16 11:35:23,568:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:23,574:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:23,580:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:23,591:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:23,596:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:23,597:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:23,602:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:23,603:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:23,605:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:23,608:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:23,615:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:23,621:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:23,644:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:23,649:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:23,655:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-16 11:35:23,664:INFO:Calculating mean and std
2025-03-16 11:35:23,664:INFO:Creating metrics dataframe
2025-03-16 11:35:23,666:INFO:Finalizing model
2025-03-16 11:35:24,454:INFO:Uploading results into container
2025-03-16 11:35:24,455:INFO:Uploading model into container now
2025-03-16 11:35:24,455:INFO:_master_model_container: 19
2025-03-16 11:35:24,455:INFO:_display_container: 6
2025-03-16 11:35:24,455:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=43, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-03-16 11:35:24,455:INFO:create_model() successfully completed......................................
2025-03-16 11:35:24,531:INFO:SubProcess create_model() end ==================================
2025-03-16 11:35:24,532:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=43, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False) result for Accuracy is 0.8063
2025-03-16 11:35:24,532:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=8,
                           max_features='log2', max_leaf_nodes=None,
                           min_impurity_decrease=0.5, min_samples_leaf=3,
                           min_samples_split=7, min_weight_fraction_leaf=0.0,
                           n_estimators=270, n_iter_no_change=None,
                           random_state=43, subsample=0.35, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False) result for Accuracy is 0.804
2025-03-16 11:35:24,532:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=43, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False) is best model
2025-03-16 11:35:24,532:INFO:choose_better completed
2025-03-16 11:35:24,533:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2025-03-16 11:35:24,540:INFO:_master_model_container: 19
2025-03-16 11:35:24,540:INFO:_display_container: 5
2025-03-16 11:35:24,540:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=43, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-03-16 11:35:24,540:INFO:tune_model() successfully completed......................................
2025-03-16 11:39:33,043:INFO:Initializing predict_model()
2025-03-16 11:39:33,043:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001ED64015000>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=43, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001ED65699D80>)
2025-03-16 11:39:33,043:INFO:Checking exceptions
2025-03-16 11:39:33,044:INFO:Preloading libraries
2025-03-16 11:39:33,126:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning:

Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.


2025-03-16 11:39:33,132:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning:

Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.


2025-03-16 11:39:33,139:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning:

Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.


2025-03-16 11:45:59,493:INFO:Initializing finalize_model()
2025-03-16 11:45:59,493:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001ED64015000>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=43, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-03-16 11:45:59,493:INFO:Finalizing GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=43, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-03-16 11:45:59,497:INFO:Initializing create_model()
2025-03-16 11:45:59,497:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001ED64015000>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=43, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-03-16 11:45:59,497:INFO:Checking exceptions
2025-03-16 11:45:59,498:INFO:Importing libraries
2025-03-16 11:45:59,498:INFO:Copying training dataset
2025-03-16 11:45:59,498:INFO:Defining folds
2025-03-16 11:45:59,498:INFO:Declaring metric variables
2025-03-16 11:45:59,499:INFO:Importing untrained model
2025-03-16 11:45:59,499:INFO:Declaring custom model
2025-03-16 11:45:59,499:INFO:Gradient Boosting Classifier Imported successfully
2025-03-16 11:45:59,502:INFO:Cross validation set to False
2025-03-16 11:45:59,502:INFO:Fitting Model
2025-03-16 11:46:00,504:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'MonthlyCharges',
                                             'TotalCharges'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=43, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False)
2025-03-16 11:46:00,504:INFO:create_model() successfully completed......................................
2025-03-16 11:46:00,604:INFO:_master_model_container: 19
2025-03-16 11:46:00,604:INFO:_display_container: 6
2025-03-16 11:46:00,654:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'MonthlyCharges',
                                             'TotalCharges'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=43, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False)
2025-03-16 11:46:00,654:INFO:finalize_model() successfully completed......................................
2025-03-16 11:57:40,642:INFO:Initializing predict_model()
2025-03-16 11:57:40,643:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001ED64015000>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'MonthlyCharges',
                                             'TotalCharges'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=43, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001ED65699360>)
2025-03-16 11:57:40,643:INFO:Checking exceptions
2025-03-16 11:57:40,643:INFO:Preloading libraries
2025-03-16 11:57:40,722:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning:

Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.


2025-03-16 11:57:40,728:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning:

Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.


2025-03-16 11:57:40,735:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning:

Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.


2025-03-16 12:01:11,790:INFO:Initializing predict_model()
2025-03-16 12:01:11,791:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001ED64015000>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'MonthlyCharges',
                                             'TotalCharges'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=43, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001ED40DD29E0>)
2025-03-16 12:01:11,791:INFO:Checking exceptions
2025-03-16 12:01:11,791:INFO:Preloading libraries
2025-03-16 12:01:11,792:INFO:Set up data.
2025-03-16 12:01:11,800:INFO:Set up index.
2025-03-16 12:01:11,854:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning:

Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.


2025-03-16 12:01:11,859:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning:

Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.


2025-03-16 12:01:11,863:WARNING:g:\ML\envs\pycaret_env\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning:

Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.


2025-03-16 12:03:20,971:INFO:Initializing save_model()
2025-03-16 12:03:20,971:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'MonthlyCharges',
                                             'TotalCharges'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=43, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False), model_name=final_best_model(gdc), prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\thinu\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'MonthlyCharges',
                                             'TotalCharges'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fi...
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('low_variance',
                 TransformerWrapper(exclude=[], include=None,
                                    transformer=VarianceThreshold(threshold=0.1))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=MinMaxScaler(clip=False,
                                                             copy=True,
                                                             feature_range=(0,
                                                                            1))))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-03-16 12:03:20,971:INFO:Adding model into prep_pipe
2025-03-16 12:03:20,971:WARNING:Only Model saved as it was a pipeline.
2025-03-16 12:03:20,989:INFO:final_best_model(gdc).pkl saved in current working directory
2025-03-16 12:03:21,039:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'MonthlyCharges',
                                             'TotalCharges'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=43, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False)
2025-03-16 12:03:21,039:INFO:save_model() successfully completed......................................
2025-03-16 12:53:35,260:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-16 12:53:35,260:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-16 12:53:35,260:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-16 12:53:35,260:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-16 12:54:09,109:INFO:Initializing load_model()
2025-03-16 12:54:09,109:INFO:load_model(model_name=final_best_model(gdc), platform=None, authentication=None, verbose=True)
